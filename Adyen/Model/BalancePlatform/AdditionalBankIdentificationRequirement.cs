/*
* Configuration API
*
*
* The version of the OpenAPI document: 2
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.BalancePlatform
{
    /// <summary>
    /// AdditionalBankIdentificationRequirement
    /// </summary>
    [DataContract(Name = "AdditionalBankIdentificationRequirement")]
    public partial class AdditionalBankIdentificationRequirement : IEquatable<AdditionalBankIdentificationRequirement>, IValidatableObject
    {
        /// <summary>
        /// The type of additional bank identification, depending on the country.  Possible values:   * **auBsbCode**: The 6-digit [Australian Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces.  * **caRoutingNumber**: The 9-digit [Canadian routing number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without separators or spaces.  * **gbSortCode**: The 6-digit [UK sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces  * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or spaces.
        /// </summary>
        /// <value>The type of additional bank identification, depending on the country.  Possible values:   * **auBsbCode**: The 6-digit [Australian Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces.  * **caRoutingNumber**: The 9-digit [Canadian routing number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without separators or spaces.  * **gbSortCode**: The 6-digit [UK sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces  * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or spaces.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AdditionalBankIdentificationTypeEnum
        {
            /// <summary>
            /// Enum AuBsbCode for value: auBsbCode
            /// </summary>
            [EnumMember(Value = "auBsbCode")]
            AuBsbCode = 1,

            /// <summary>
            /// Enum CaRoutingNumber for value: caRoutingNumber
            /// </summary>
            [EnumMember(Value = "caRoutingNumber")]
            CaRoutingNumber = 2,

            /// <summary>
            /// Enum GbSortCode for value: gbSortCode
            /// </summary>
            [EnumMember(Value = "gbSortCode")]
            GbSortCode = 3,

            /// <summary>
            /// Enum UsRoutingNumber for value: usRoutingNumber
            /// </summary>
            [EnumMember(Value = "usRoutingNumber")]
            UsRoutingNumber = 4

        }


        /// <summary>
        /// The type of additional bank identification, depending on the country.  Possible values:   * **auBsbCode**: The 6-digit [Australian Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces.  * **caRoutingNumber**: The 9-digit [Canadian routing number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without separators or spaces.  * **gbSortCode**: The 6-digit [UK sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces  * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or spaces.
        /// </summary>
        /// <value>The type of additional bank identification, depending on the country.  Possible values:   * **auBsbCode**: The 6-digit [Australian Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces.  * **caRoutingNumber**: The 9-digit [Canadian routing number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without separators or spaces.  * **gbSortCode**: The 6-digit [UK sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces  * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or spaces.</value>
        [DataMember(Name = "additionalBankIdentificationType", EmitDefaultValue = false)]
        public AdditionalBankIdentificationTypeEnum? AdditionalBankIdentificationType { get; set; }
        /// <summary>
        /// **additionalBankIdentificationRequirement**
        /// </summary>
        /// <value>**additionalBankIdentificationRequirement**</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum AdditionalBankIdentificationRequirement for value: additionalBankIdentificationRequirement
            /// </summary>
            [EnumMember(Value = "additionalBankIdentificationRequirement")]
            AdditionalBankIdentificationRequirement = 1

        }


        /// <summary>
        /// **additionalBankIdentificationRequirement**
        /// </summary>
        /// <value>**additionalBankIdentificationRequirement**</value>
        [DataMember(Name = "type", IsRequired = false, EmitDefaultValue = false)]
        public TypeEnum Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AdditionalBankIdentificationRequirement" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AdditionalBankIdentificationRequirement() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AdditionalBankIdentificationRequirement" /> class.
        /// </summary>
        /// <param name="additionalBankIdentificationType">The type of additional bank identification, depending on the country.  Possible values:   * **auBsbCode**: The 6-digit [Australian Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or spaces.  * **caRoutingNumber**: The 9-digit [Canadian routing number](https://en.wikipedia.org/wiki/Routing_number_(Canada)), in EFT format, without separators or spaces.  * **gbSortCode**: The 6-digit [UK sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces  * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or spaces..</param>
        /// <param name="description">The description of the additional bank identification requirement..</param>
        /// <param name="type">**additionalBankIdentificationRequirement** (required) (default to TypeEnum.AdditionalBankIdentificationRequirement).</param>
        public AdditionalBankIdentificationRequirement(AdditionalBankIdentificationTypeEnum? additionalBankIdentificationType = default(AdditionalBankIdentificationTypeEnum?), string description = default(string), TypeEnum type = TypeEnum.AdditionalBankIdentificationRequirement)
        {
            this.Type = type;
            this.AdditionalBankIdentificationType = additionalBankIdentificationType;
            this.Description = description;
        }

        /// <summary>
        /// The description of the additional bank identification requirement.
        /// </summary>
        /// <value>The description of the additional bank identification requirement.</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AdditionalBankIdentificationRequirement {\n");
            sb.Append("  AdditionalBankIdentificationType: ").Append(AdditionalBankIdentificationType).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AdditionalBankIdentificationRequirement);
        }

        /// <summary>
        /// Returns true if AdditionalBankIdentificationRequirement instances are equal
        /// </summary>
        /// <param name="input">Instance of AdditionalBankIdentificationRequirement to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AdditionalBankIdentificationRequirement input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AdditionalBankIdentificationType == input.AdditionalBankIdentificationType ||
                    this.AdditionalBankIdentificationType.Equals(input.AdditionalBankIdentificationType)
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Type == input.Type ||
                    this.Type.Equals(input.Type)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.AdditionalBankIdentificationType.GetHashCode();
                if (this.Description != null)
                {
                    hashCode = (hashCode * 59) + this.Description.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Type.GetHashCode();
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

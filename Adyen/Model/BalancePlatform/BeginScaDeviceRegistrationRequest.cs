/*
* Configuration API
*
*
* The version of the OpenAPI document: 2
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.BalancePlatform
{
    /// <summary>
    /// BeginScaDeviceRegistrationRequest
    /// </summary>
    [DataContract(Name = "BeginScaDeviceRegistrationRequest")]
    public partial class BeginScaDeviceRegistrationRequest : IEquatable<BeginScaDeviceRegistrationRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BeginScaDeviceRegistrationRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BeginScaDeviceRegistrationRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BeginScaDeviceRegistrationRequest" /> class.
        /// </summary>
        /// <param name="name">The name of the SCA device that you are registering. You can use it to help your users identify the device. (required).</param>
        /// <param name="sdkOutput">A base64-encoded block with the data required to register the SCA device. You obtain this information by using Adyen&#39;s authentication SDK. (required).</param>
        public BeginScaDeviceRegistrationRequest(string name = default(string), string sdkOutput = default(string))
        {
            this.Name = name;
            this.SdkOutput = sdkOutput;
        }

        /// <summary>
        /// The name of the SCA device that you are registering. You can use it to help your users identify the device.
        /// </summary>
        /// <value>The name of the SCA device that you are registering. You can use it to help your users identify the device.</value>
        [DataMember(Name = "name", IsRequired = false, EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// A base64-encoded block with the data required to register the SCA device. You obtain this information by using Adyen&#39;s authentication SDK.
        /// </summary>
        /// <value>A base64-encoded block with the data required to register the SCA device. You obtain this information by using Adyen&#39;s authentication SDK.</value>
        [DataMember(Name = "sdkOutput", IsRequired = false, EmitDefaultValue = false)]
        public string SdkOutput { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BeginScaDeviceRegistrationRequest {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  SdkOutput: ").Append(SdkOutput).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BeginScaDeviceRegistrationRequest);
        }

        /// <summary>
        /// Returns true if BeginScaDeviceRegistrationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of BeginScaDeviceRegistrationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BeginScaDeviceRegistrationRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.SdkOutput == input.SdkOutput ||
                    (this.SdkOutput != null &&
                    this.SdkOutput.Equals(input.SdkOutput))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.SdkOutput != null)
                {
                    hashCode = (hashCode * 59) + this.SdkOutput.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // Name (string) maxLength
            if (this.Name != null && this.Name.Length > 64)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Name, length must be less than 64.", new [] { "Name" });
            }

            // Name (string) minLength
            if (this.Name != null && this.Name.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Name, length must be greater than 0.", new [] { "Name" });
            }

            // SdkOutput (string) maxLength
            if (this.SdkOutput != null && this.SdkOutput.Length > 10000)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SdkOutput, length must be less than 10000.", new [] { "SdkOutput" });
            }

            // SdkOutput (string) minLength
            if (this.SdkOutput != null && this.SdkOutput.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SdkOutput, length must be greater than 0.", new [] { "SdkOutput" });
            }

            yield break;
        }
    }

}

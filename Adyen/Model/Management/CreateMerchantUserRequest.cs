/*
* Management API
*
*
* The version of the OpenAPI document: 3
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.Management
{
    /// <summary>
    /// CreateMerchantUserRequest
    /// </summary>
    [DataContract(Name = "CreateMerchantUserRequest")]
    public partial class CreateMerchantUserRequest : IEquatable<CreateMerchantUserRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMerchantUserRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateMerchantUserRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMerchantUserRequest" /> class.
        /// </summary>
        /// <param name="accountGroups">The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user..</param>
        /// <param name="email">The email address of the user. (required).</param>
        /// <param name="loginMethod">The requested login method for the user. To use SSO, you must already have SSO configured with Adyen before creating the user.  Possible values: **Username &amp; account**, **Email**, or **SSO** .</param>
        /// <param name="name">name (required).</param>
        /// <param name="roles">The list of [roles](https://docs.adyen.com/account/user-roles) for this user..</param>
        /// <param name="timeZoneCode">The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**..</param>
        /// <param name="username">The user&#39;s email address that will be their username. Must be the same as the one in the &#x60;email&#x60; field. (required).</param>
        public CreateMerchantUserRequest(List<string> accountGroups = default(List<string>), string email = default(string), string loginMethod = default(string), Name name = default(Name), List<string> roles = default(List<string>), string timeZoneCode = default(string), string username = default(string))
        {
            this.Email = email;
            this.Name = name;
            this.Username = username;
            this.AccountGroups = accountGroups;
            this.LoginMethod = loginMethod;
            this.Roles = roles;
            this.TimeZoneCode = timeZoneCode;
        }

        /// <summary>
        /// The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.
        /// </summary>
        /// <value>The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.</value>
        [DataMember(Name = "accountGroups", EmitDefaultValue = false)]
        public List<string> AccountGroups { get; set; }

        /// <summary>
        /// The email address of the user.
        /// </summary>
        /// <value>The email address of the user.</value>
        [DataMember(Name = "email", IsRequired = false, EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// The requested login method for the user. To use SSO, you must already have SSO configured with Adyen before creating the user.  Possible values: **Username &amp; account**, **Email**, or **SSO** 
        /// </summary>
        /// <value>The requested login method for the user. To use SSO, you must already have SSO configured with Adyen before creating the user.  Possible values: **Username &amp; account**, **Email**, or **SSO** </value>
        [DataMember(Name = "loginMethod", EmitDefaultValue = false)]
        public string LoginMethod { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", IsRequired = false, EmitDefaultValue = false)]
        public Name Name { get; set; }

        /// <summary>
        /// The list of [roles](https://docs.adyen.com/account/user-roles) for this user.
        /// </summary>
        /// <value>The list of [roles](https://docs.adyen.com/account/user-roles) for this user.</value>
        [DataMember(Name = "roles", EmitDefaultValue = false)]
        public List<string> Roles { get; set; }

        /// <summary>
        /// The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.
        /// </summary>
        /// <value>The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.</value>
        [DataMember(Name = "timeZoneCode", EmitDefaultValue = false)]
        public string TimeZoneCode { get; set; }

        /// <summary>
        /// The user&#39;s email address that will be their username. Must be the same as the one in the &#x60;email&#x60; field.
        /// </summary>
        /// <value>The user&#39;s email address that will be their username. Must be the same as the one in the &#x60;email&#x60; field.</value>
        [DataMember(Name = "username", IsRequired = false, EmitDefaultValue = false)]
        public string Username { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateMerchantUserRequest {\n");
            sb.Append("  AccountGroups: ").Append(AccountGroups).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  LoginMethod: ").Append(LoginMethod).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Roles: ").Append(Roles).Append("\n");
            sb.Append("  TimeZoneCode: ").Append(TimeZoneCode).Append("\n");
            sb.Append("  Username: ").Append(Username).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateMerchantUserRequest);
        }

        /// <summary>
        /// Returns true if CreateMerchantUserRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateMerchantUserRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateMerchantUserRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountGroups == input.AccountGroups ||
                    this.AccountGroups != null &&
                    input.AccountGroups != null &&
                    this.AccountGroups.SequenceEqual(input.AccountGroups)
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.LoginMethod == input.LoginMethod ||
                    (this.LoginMethod != null &&
                    this.LoginMethod.Equals(input.LoginMethod))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Roles == input.Roles ||
                    this.Roles != null &&
                    input.Roles != null &&
                    this.Roles.SequenceEqual(input.Roles)
                ) && 
                (
                    this.TimeZoneCode == input.TimeZoneCode ||
                    (this.TimeZoneCode != null &&
                    this.TimeZoneCode.Equals(input.TimeZoneCode))
                ) && 
                (
                    this.Username == input.Username ||
                    (this.Username != null &&
                    this.Username.Equals(input.Username))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountGroups != null)
                {
                    hashCode = (hashCode * 59) + this.AccountGroups.GetHashCode();
                }
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                if (this.LoginMethod != null)
                {
                    hashCode = (hashCode * 59) + this.LoginMethod.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.Roles != null)
                {
                    hashCode = (hashCode * 59) + this.Roles.GetHashCode();
                }
                if (this.TimeZoneCode != null)
                {
                    hashCode = (hashCode * 59) + this.TimeZoneCode.GetHashCode();
                }
                if (this.Username != null)
                {
                    hashCode = (hashCode * 59) + this.Username.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // Username (string) maxLength
            if (this.Username != null && this.Username.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Username, length must be less than 255.", new [] { "Username" });
            }

            // Username (string) minLength
            if (this.Username != null && this.Username.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Username, length must be greater than 1.", new [] { "Username" });
            }

            yield break;
        }
    }

}

/*
* Management API
*
*
* The version of the OpenAPI document: 1
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Adyen.Model.Management
{
    /// <summary>
    /// Url
    /// </summary>
    [DataContract]
    public partial class Url :  IEquatable<Url>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Url" /> class.
        /// </summary>
        /// <param name="password">The password for authentication of the event notifications..</param>
        /// <param name="url">The URL in the format: http(s)://domain.com..</param>
        /// <param name="username">The username for authentication of the event notifications..</param>
        public Url(string password = default(string), string url = default(string), string username = default(string))
        {
            this.Password = password;
            this._Url = url;
            this.Username = username;
        }

        /// <summary>
        /// The password for authentication of the event notifications.
        /// </summary>
        /// <value>The password for authentication of the event notifications.</value>
        [DataMember(Name="password", EmitDefaultValue=false)]
        public string Password { get; set; }

        /// <summary>
        /// The URL in the format: http(s)://domain.com.
        /// </summary>
        /// <value>The URL in the format: http(s)://domain.com.</value>
        [DataMember(Name="url", EmitDefaultValue=false)]
        public string _Url { get; set; }

        /// <summary>
        /// The username for authentication of the event notifications.
        /// </summary>
        /// <value>The username for authentication of the event notifications.</value>
        [DataMember(Name="username", EmitDefaultValue=false)]
        public string Username { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Url {\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("  _Url: ").Append(_Url).Append("\n");
            sb.Append("  Username: ").Append(Username).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Url);
        }

        /// <summary>
        /// Returns true if Url instances are equal
        /// </summary>
        /// <param name="input">Instance of Url to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Url input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Password == input.Password ||
                    (this.Password != null &&
                    this.Password.Equals(input.Password))
                ) && 
                (
                    this._Url == input._Url ||
                    (this._Url != null &&
                    this._Url.Equals(input._Url))
                ) && 
                (
                    this.Username == input.Username ||
                    (this.Username != null &&
                    this.Username.Equals(input.Username))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Password != null)
                    hashCode = hashCode * 59 + this.Password.GetHashCode();
                if (this._Url != null)
                    hashCode = hashCode * 59 + this._Url.GetHashCode();
                if (this.Username != null)
                    hashCode = hashCode * 59 + this.Username.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

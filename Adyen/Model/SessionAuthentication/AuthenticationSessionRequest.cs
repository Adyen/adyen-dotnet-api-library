/*
* Session authentication API
*
*
* The version of the OpenAPI document: 1
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.SessionAuthentication
{
    /// <summary>
    /// AuthenticationSessionRequest
    /// </summary>
    [DataContract(Name = "AuthenticationSessionRequest")]
    public partial class AuthenticationSessionRequest : IEquatable<AuthenticationSessionRequest>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Product
        /// </summary>
        [DataMember(Name = "product", IsRequired = false, EmitDefaultValue = false)]
        public ProductType Product { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthenticationSessionRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AuthenticationSessionRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthenticationSessionRequest" /> class.
        /// </summary>
        /// <param name="allowOrigin">The URL where the component will appear. In your live environment, you must protect the URL with an SSL certificate and ensure that it starts with &#x60;https://&#x60;. (required).</param>
        /// <param name="policy">policy (required).</param>
        /// <param name="product">product (required).</param>
        public AuthenticationSessionRequest(string allowOrigin = default(string), Policy policy = default(Policy), ProductType product = default(ProductType))
        {
            this.AllowOrigin = allowOrigin;
            this.Policy = policy;
            this.Product = product;
        }

        /// <summary>
        /// The URL where the component will appear. In your live environment, you must protect the URL with an SSL certificate and ensure that it starts with &#x60;https://&#x60;.
        /// </summary>
        /// <value>The URL where the component will appear. In your live environment, you must protect the URL with an SSL certificate and ensure that it starts with &#x60;https://&#x60;.</value>
        [DataMember(Name = "allowOrigin", IsRequired = false, EmitDefaultValue = false)]
        public string AllowOrigin { get; set; }

        /// <summary>
        /// Gets or Sets Policy
        /// </summary>
        [DataMember(Name = "policy", IsRequired = false, EmitDefaultValue = false)]
        public Policy Policy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AuthenticationSessionRequest {\n");
            sb.Append("  AllowOrigin: ").Append(AllowOrigin).Append("\n");
            sb.Append("  Policy: ").Append(Policy).Append("\n");
            sb.Append("  Product: ").Append(Product).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AuthenticationSessionRequest);
        }

        /// <summary>
        /// Returns true if AuthenticationSessionRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of AuthenticationSessionRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AuthenticationSessionRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AllowOrigin == input.AllowOrigin ||
                    (this.AllowOrigin != null &&
                    this.AllowOrigin.Equals(input.AllowOrigin))
                ) && 
                (
                    this.Policy == input.Policy ||
                    (this.Policy != null &&
                    this.Policy.Equals(input.Policy))
                ) && 
                (
                    this.Product == input.Product ||
                    this.Product.Equals(input.Product)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AllowOrigin != null)
                {
                    hashCode = (hashCode * 59) + this.AllowOrigin.GetHashCode();
                }
                if (this.Policy != null)
                {
                    hashCode = (hashCode * 59) + this.Policy.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Product.GetHashCode();
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

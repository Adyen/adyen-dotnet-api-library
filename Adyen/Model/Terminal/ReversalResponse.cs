/*
* Adyen Terminal API
*
*
* The version of the OpenAPI document: 1
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.Terminal
{
    /// <summary>
    /// It conveys Information related to the reversal processed by the POI System. Content of the Reversal Response message.
    /// </summary>
    [DataContract(Name = "ReversalResponse")]
    public partial class ReversalResponse : IEquatable<ReversalResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReversalResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ReversalResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ReversalResponse" /> class.
        /// </summary>
        /// <param name="response">response (required).</param>
        /// <param name="pOIData">pOIData.</param>
        /// <param name="originalPOITransaction">originalPOITransaction.</param>
        /// <param name="reversedAmount">Copy..</param>
        /// <param name="customerOrder">customerOrder.</param>
        /// <param name="paymentReceipt">paymentReceipt.</param>
        public ReversalResponse(Response response = default(Response), POIData pOIData = default(POIData), OriginalPOITransaction originalPOITransaction = default(OriginalPOITransaction), decimal? reversedAmount = default(decimal?), List<CustomerOrder> customerOrder = default(List<CustomerOrder>), List<PaymentReceipt> paymentReceipt = default(List<PaymentReceipt>))
        {
            this.Response = response;
            this.POIData = pOIData;
            this.OriginalPOITransaction = originalPOITransaction;
            this.ReversedAmount = reversedAmount;
            this.CustomerOrder = customerOrder;
            this.PaymentReceipt = paymentReceipt;
        }

        /// <summary>
        /// Gets or Sets Response
        /// </summary>
        [DataMember(Name = "Response", IsRequired = false, EmitDefaultValue = false)]
        public Response Response { get; set; }

        /// <summary>
        /// Gets or Sets POIData
        /// </summary>
        [DataMember(Name = "POIData", EmitDefaultValue = false)]
        public POIData POIData { get; set; }

        /// <summary>
        /// Gets or Sets OriginalPOITransaction
        /// </summary>
        [DataMember(Name = "OriginalPOITransaction", EmitDefaultValue = false)]
        public OriginalPOITransaction OriginalPOITransaction { get; set; }

        /// <summary>
        /// Copy.
        /// </summary>
        /// <value>Copy.</value>
        [DataMember(Name = "ReversedAmount", EmitDefaultValue = false)]
        public decimal? ReversedAmount { get; set; }

        /// <summary>
        /// Gets or Sets CustomerOrder
        /// </summary>
        [DataMember(Name = "CustomerOrder", EmitDefaultValue = false)]
        public List<CustomerOrder> CustomerOrder { get; set; }

        /// <summary>
        /// Gets or Sets PaymentReceipt
        /// </summary>
        [DataMember(Name = "PaymentReceipt", EmitDefaultValue = false)]
        public List<PaymentReceipt> PaymentReceipt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ReversalResponse {\n");
            sb.Append("  Response: ").Append(Response).Append("\n");
            sb.Append("  POIData: ").Append(POIData).Append("\n");
            sb.Append("  OriginalPOITransaction: ").Append(OriginalPOITransaction).Append("\n");
            sb.Append("  ReversedAmount: ").Append(ReversedAmount).Append("\n");
            sb.Append("  CustomerOrder: ").Append(CustomerOrder).Append("\n");
            sb.Append("  PaymentReceipt: ").Append(PaymentReceipt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ReversalResponse);
        }

        /// <summary>
        /// Returns true if ReversalResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ReversalResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReversalResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Response == input.Response ||
                    (this.Response != null &&
                    this.Response.Equals(input.Response))
                ) && 
                (
                    this.POIData == input.POIData ||
                    (this.POIData != null &&
                    this.POIData.Equals(input.POIData))
                ) && 
                (
                    this.OriginalPOITransaction == input.OriginalPOITransaction ||
                    (this.OriginalPOITransaction != null &&
                    this.OriginalPOITransaction.Equals(input.OriginalPOITransaction))
                ) && 
                (
                    this.ReversedAmount == input.ReversedAmount ||
                    this.ReversedAmount.Equals(input.ReversedAmount)
                ) && 
                (
                    this.CustomerOrder == input.CustomerOrder ||
                    this.CustomerOrder != null &&
                    input.CustomerOrder != null &&
                    this.CustomerOrder.SequenceEqual(input.CustomerOrder)
                ) && 
                (
                    this.PaymentReceipt == input.PaymentReceipt ||
                    this.PaymentReceipt != null &&
                    input.PaymentReceipt != null &&
                    this.PaymentReceipt.SequenceEqual(input.PaymentReceipt)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Response != null)
                {
                    hashCode = (hashCode * 59) + this.Response.GetHashCode();
                }
                if (this.POIData != null)
                {
                    hashCode = (hashCode * 59) + this.POIData.GetHashCode();
                }
                if (this.OriginalPOITransaction != null)
                {
                    hashCode = (hashCode * 59) + this.OriginalPOITransaction.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ReversedAmount.GetHashCode();
                if (this.CustomerOrder != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerOrder.GetHashCode();
                }
                if (this.PaymentReceipt != null)
                {
                    hashCode = (hashCode * 59) + this.PaymentReceipt.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // ReversedAmount (decimal) maximum
            if (this.ReversedAmount > (decimal)99999999.999999)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ReversedAmount, must be a value less than or equal to 99999999.999999.", new [] { "ReversedAmount" });
            }

            // ReversedAmount (decimal) minimum
            if (this.ReversedAmount < (decimal)0.0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ReversedAmount, must be a value greater than or equal to 0.0.", new [] { "ReversedAmount" });
            }

            yield break;
        }
    }

}

/*
* Adyen Terminal API
*
*
* The version of the OpenAPI document: 1
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.Terminal
{
    /// <summary>
    /// PaymentTransaction
    /// </summary>
    [DataContract(Name = "PaymentTransaction")]
    public partial class PaymentTransaction : IEquatable<PaymentTransaction>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentTransaction" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PaymentTransaction() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentTransaction" /> class.
        /// </summary>
        /// <param name="amountsReq">amountsReq (required).</param>
        /// <param name="originalPOITransaction">originalPOITransaction.</param>
        /// <param name="transactionConditions">transactionConditions.</param>
        /// <param name="saleItem">saleItem.</param>
        public PaymentTransaction(AmountsReq amountsReq = default(AmountsReq), OriginalPOITransaction originalPOITransaction = default(OriginalPOITransaction), TransactionConditions transactionConditions = default(TransactionConditions), List<SaleItem> saleItem = default(List<SaleItem>))
        {
            this.AmountsReq = amountsReq;
            this.OriginalPOITransaction = originalPOITransaction;
            this.TransactionConditions = transactionConditions;
            this.SaleItem = saleItem;
        }

        /// <summary>
        /// Gets or Sets AmountsReq
        /// </summary>
        [DataMember(Name = "AmountsReq", IsRequired = false, EmitDefaultValue = false)]
        public AmountsReq AmountsReq { get; set; }

        /// <summary>
        /// Gets or Sets OriginalPOITransaction
        /// </summary>
        [DataMember(Name = "OriginalPOITransaction", EmitDefaultValue = false)]
        public OriginalPOITransaction OriginalPOITransaction { get; set; }

        /// <summary>
        /// Gets or Sets TransactionConditions
        /// </summary>
        [DataMember(Name = "TransactionConditions", EmitDefaultValue = false)]
        public TransactionConditions TransactionConditions { get; set; }

        /// <summary>
        /// Gets or Sets SaleItem
        /// </summary>
        [DataMember(Name = "SaleItem", EmitDefaultValue = false)]
        public List<SaleItem> SaleItem { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PaymentTransaction {\n");
            sb.Append("  AmountsReq: ").Append(AmountsReq).Append("\n");
            sb.Append("  OriginalPOITransaction: ").Append(OriginalPOITransaction).Append("\n");
            sb.Append("  TransactionConditions: ").Append(TransactionConditions).Append("\n");
            sb.Append("  SaleItem: ").Append(SaleItem).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentTransaction);
        }

        /// <summary>
        /// Returns true if PaymentTransaction instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentTransaction to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentTransaction input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AmountsReq == input.AmountsReq ||
                    (this.AmountsReq != null &&
                    this.AmountsReq.Equals(input.AmountsReq))
                ) && 
                (
                    this.OriginalPOITransaction == input.OriginalPOITransaction ||
                    (this.OriginalPOITransaction != null &&
                    this.OriginalPOITransaction.Equals(input.OriginalPOITransaction))
                ) && 
                (
                    this.TransactionConditions == input.TransactionConditions ||
                    (this.TransactionConditions != null &&
                    this.TransactionConditions.Equals(input.TransactionConditions))
                ) && 
                (
                    this.SaleItem == input.SaleItem ||
                    this.SaleItem != null &&
                    input.SaleItem != null &&
                    this.SaleItem.SequenceEqual(input.SaleItem)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AmountsReq != null)
                {
                    hashCode = (hashCode * 59) + this.AmountsReq.GetHashCode();
                }
                if (this.OriginalPOITransaction != null)
                {
                    hashCode = (hashCode * 59) + this.OriginalPOITransaction.GetHashCode();
                }
                if (this.TransactionConditions != null)
                {
                    hashCode = (hashCode * 59) + this.TransactionConditions.GetHashCode();
                }
                if (this.SaleItem != null)
                {
                    hashCode = (hashCode * 59) + this.SaleItem.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

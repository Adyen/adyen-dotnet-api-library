/*
* Adyen Terminal API
*
*
* The version of the OpenAPI document: 1
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.Terminal
{
    /// <summary>
    /// Defines UnitOfMeasure
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum UnitOfMeasure
    {
        /// <summary>
        /// Enum Case for value: Case
        /// </summary>
        [EnumMember(Value = "Case")]
        Case = 1,

        /// <summary>
        /// Enum Centilitre for value: Centilitre
        /// </summary>
        [EnumMember(Value = "Centilitre")]
        Centilitre = 2,

        /// <summary>
        /// Enum Centimetre for value: Centimetre
        /// </summary>
        [EnumMember(Value = "Centimetre")]
        Centimetre = 3,

        /// <summary>
        /// Enum Foot for value: Foot
        /// </summary>
        [EnumMember(Value = "Foot")]
        Foot = 4,

        /// <summary>
        /// Enum Gram for value: Gram
        /// </summary>
        [EnumMember(Value = "Gram")]
        Gram = 5,

        /// <summary>
        /// Enum Inch for value: Inch
        /// </summary>
        [EnumMember(Value = "Inch")]
        Inch = 6,

        /// <summary>
        /// Enum Kilogram for value: Kilogram
        /// </summary>
        [EnumMember(Value = "Kilogram")]
        Kilogram = 7,

        /// <summary>
        /// Enum Kilometre for value: Kilometre
        /// </summary>
        [EnumMember(Value = "Kilometre")]
        Kilometre = 8,

        /// <summary>
        /// Enum Litre for value: Litre
        /// </summary>
        [EnumMember(Value = "Litre")]
        Litre = 9,

        /// <summary>
        /// Enum Meter for value: Meter
        /// </summary>
        [EnumMember(Value = "Meter")]
        Meter = 10,

        /// <summary>
        /// Enum Mile for value: Mile
        /// </summary>
        [EnumMember(Value = "Mile")]
        Mile = 11,

        /// <summary>
        /// Enum Other for value: Other
        /// </summary>
        [EnumMember(Value = "Other")]
        Other = 12,

        /// <summary>
        /// Enum Ounce for value: Ounce
        /// </summary>
        [EnumMember(Value = "Ounce")]
        Ounce = 13,

        /// <summary>
        /// Enum Pint for value: Pint
        /// </summary>
        [EnumMember(Value = "Pint")]
        Pint = 14,

        /// <summary>
        /// Enum Pound for value: Pound
        /// </summary>
        [EnumMember(Value = "Pound")]
        Pound = 15,

        /// <summary>
        /// Enum Quart for value: Quart
        /// </summary>
        [EnumMember(Value = "Quart")]
        Quart = 16,

        /// <summary>
        /// Enum UKGallon for value: UKGallon
        /// </summary>
        [EnumMember(Value = "UKGallon")]
        UKGallon = 17,

        /// <summary>
        /// Enum USGallon for value: USGallon
        /// </summary>
        [EnumMember(Value = "USGallon")]
        USGallon = 18,

        /// <summary>
        /// Enum Yard for value: Yard
        /// </summary>
        [EnumMember(Value = "Yard")]
        Yard = 19

    }

}

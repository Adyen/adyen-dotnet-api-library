/*
* Adyen Terminal API
*
*
* The version of the OpenAPI document: 1
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.Terminal
{
    /// <summary>
    /// It contains the APDU request to send to the chip of the card, and a possible invitation message to display on the CashierInterface or the CustomerInterface. Content of the Card Reader APDU Request message.
    /// </summary>
    [DataContract(Name = "CardReaderAPDURequest")]
    public partial class CardReaderAPDURequest : IEquatable<CardReaderAPDURequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CardReaderAPDURequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CardReaderAPDURequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CardReaderAPDURequest" /> class.
        /// </summary>
        /// <param name="aPDUClass">Class field of the APDU command (CLA). (required).</param>
        /// <param name="aPDUInstruction">Instruction field of the APDU command (INS). (required).</param>
        /// <param name="aPDUPar1">Parameter 1 field of the APDU command (P1). (required).</param>
        /// <param name="aPDUPar2">Parameter 2 field of the APDU command(P2). (required).</param>
        /// <param name="aPDUData">Data field of the APDU command (Lc + Data)..</param>
        /// <param name="aPDUExpectedLength">Expected length of the data field of the APDU response to the command (Le)..</param>
        public CardReaderAPDURequest(byte[] aPDUClass = default(byte[]), byte[] aPDUInstruction = default(byte[]), byte[] aPDUPar1 = default(byte[]), byte[] aPDUPar2 = default(byte[]), byte[] aPDUData = default(byte[]), byte[] aPDUExpectedLength = default(byte[]))
        {
            this.APDUClass = aPDUClass;
            this.APDUInstruction = aPDUInstruction;
            this.APDUPar1 = aPDUPar1;
            this.APDUPar2 = aPDUPar2;
            this.APDUData = aPDUData;
            this.APDUExpectedLength = aPDUExpectedLength;
        }

        /// <summary>
        /// Class field of the APDU command (CLA).
        /// </summary>
        /// <value>Class field of the APDU command (CLA).</value>
        [DataMember(Name = "APDUClass", IsRequired = false, EmitDefaultValue = false)]
        public byte[] APDUClass { get; set; }

        /// <summary>
        /// Instruction field of the APDU command (INS).
        /// </summary>
        /// <value>Instruction field of the APDU command (INS).</value>
        [DataMember(Name = "APDUInstruction", IsRequired = false, EmitDefaultValue = false)]
        public byte[] APDUInstruction { get; set; }

        /// <summary>
        /// Parameter 1 field of the APDU command (P1).
        /// </summary>
        /// <value>Parameter 1 field of the APDU command (P1).</value>
        [DataMember(Name = "APDUPar1", IsRequired = false, EmitDefaultValue = false)]
        public byte[] APDUPar1 { get; set; }

        /// <summary>
        /// Parameter 2 field of the APDU command(P2).
        /// </summary>
        /// <value>Parameter 2 field of the APDU command(P2).</value>
        [DataMember(Name = "APDUPar2", IsRequired = false, EmitDefaultValue = false)]
        public byte[] APDUPar2 { get; set; }

        /// <summary>
        /// Data field of the APDU command (Lc + Data).
        /// </summary>
        /// <value>Data field of the APDU command (Lc + Data).</value>
        [DataMember(Name = "APDUData", EmitDefaultValue = false)]
        public byte[] APDUData { get; set; }

        /// <summary>
        /// Expected length of the data field of the APDU response to the command (Le).
        /// </summary>
        /// <value>Expected length of the data field of the APDU response to the command (Le).</value>
        [DataMember(Name = "APDUExpectedLength", EmitDefaultValue = false)]
        public byte[] APDUExpectedLength { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CardReaderAPDURequest {\n");
            sb.Append("  APDUClass: ").Append(APDUClass).Append("\n");
            sb.Append("  APDUInstruction: ").Append(APDUInstruction).Append("\n");
            sb.Append("  APDUPar1: ").Append(APDUPar1).Append("\n");
            sb.Append("  APDUPar2: ").Append(APDUPar2).Append("\n");
            sb.Append("  APDUData: ").Append(APDUData).Append("\n");
            sb.Append("  APDUExpectedLength: ").Append(APDUExpectedLength).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CardReaderAPDURequest);
        }

        /// <summary>
        /// Returns true if CardReaderAPDURequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CardReaderAPDURequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CardReaderAPDURequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.APDUClass == input.APDUClass ||
                    (this.APDUClass != null &&
                    this.APDUClass.Equals(input.APDUClass))
                ) && 
                (
                    this.APDUInstruction == input.APDUInstruction ||
                    (this.APDUInstruction != null &&
                    this.APDUInstruction.Equals(input.APDUInstruction))
                ) && 
                (
                    this.APDUPar1 == input.APDUPar1 ||
                    (this.APDUPar1 != null &&
                    this.APDUPar1.Equals(input.APDUPar1))
                ) && 
                (
                    this.APDUPar2 == input.APDUPar2 ||
                    (this.APDUPar2 != null &&
                    this.APDUPar2.Equals(input.APDUPar2))
                ) && 
                (
                    this.APDUData == input.APDUData ||
                    (this.APDUData != null &&
                    this.APDUData.Equals(input.APDUData))
                ) && 
                (
                    this.APDUExpectedLength == input.APDUExpectedLength ||
                    (this.APDUExpectedLength != null &&
                    this.APDUExpectedLength.Equals(input.APDUExpectedLength))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.APDUClass != null)
                {
                    hashCode = (hashCode * 59) + this.APDUClass.GetHashCode();
                }
                if (this.APDUInstruction != null)
                {
                    hashCode = (hashCode * 59) + this.APDUInstruction.GetHashCode();
                }
                if (this.APDUPar1 != null)
                {
                    hashCode = (hashCode * 59) + this.APDUPar1.GetHashCode();
                }
                if (this.APDUPar2 != null)
                {
                    hashCode = (hashCode * 59) + this.APDUPar2.GetHashCode();
                }
                if (this.APDUData != null)
                {
                    hashCode = (hashCode * 59) + this.APDUData.GetHashCode();
                }
                if (this.APDUExpectedLength != null)
                {
                    hashCode = (hashCode * 59) + this.APDUExpectedLength.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

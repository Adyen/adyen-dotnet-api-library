/*
* Authentication webhooks
*
*
* The version of the OpenAPI document: 1
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.AcsWebhooks
{
    /// <summary>
    /// RelayedAuthenticationRequest
    /// </summary>
    [DataContract(Name = "RelayedAuthenticationRequest")]
    public partial class RelayedAuthenticationRequest : IEquatable<RelayedAuthenticationRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RelayedAuthenticationRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RelayedAuthenticationRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RelayedAuthenticationRequest" /> class.
        /// </summary>
        /// <param name="id">The unique identifier of the challenge. (required).</param>
        /// <param name="paymentInstrumentId">The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/paymentInstruments/_id_) used for the purchase. (required).</param>
        /// <param name="purchase">purchase (required).</param>
        public RelayedAuthenticationRequest(string id = default(string), string paymentInstrumentId = default(string), Purchase purchase = default(Purchase))
        {
            this.Id = id;
            this.PaymentInstrumentId = paymentInstrumentId;
            this.Purchase = purchase;
        }

        /// <summary>
        /// The unique identifier of the challenge.
        /// </summary>
        /// <value>The unique identifier of the challenge.</value>
        [DataMember(Name = "id", IsRequired = false, EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/paymentInstruments/_id_) used for the purchase.
        /// </summary>
        /// <value>The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/paymentInstruments/_id_) used for the purchase.</value>
        [DataMember(Name = "paymentInstrumentId", IsRequired = false, EmitDefaultValue = false)]
        public string PaymentInstrumentId { get; set; }

        /// <summary>
        /// Gets or Sets Purchase
        /// </summary>
        [DataMember(Name = "purchase", IsRequired = false, EmitDefaultValue = false)]
        public Purchase Purchase { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RelayedAuthenticationRequest {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  PaymentInstrumentId: ").Append(PaymentInstrumentId).Append("\n");
            sb.Append("  Purchase: ").Append(Purchase).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RelayedAuthenticationRequest);
        }

        /// <summary>
        /// Returns true if RelayedAuthenticationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of RelayedAuthenticationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RelayedAuthenticationRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.PaymentInstrumentId == input.PaymentInstrumentId ||
                    (this.PaymentInstrumentId != null &&
                    this.PaymentInstrumentId.Equals(input.PaymentInstrumentId))
                ) && 
                (
                    this.Purchase == input.Purchase ||
                    (this.Purchase != null &&
                    this.Purchase.Equals(input.Purchase))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.PaymentInstrumentId != null)
                {
                    hashCode = (hashCode * 59) + this.PaymentInstrumentId.GetHashCode();
                }
                if (this.Purchase != null)
                {
                    hashCode = (hashCode * 59) + this.Purchase.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

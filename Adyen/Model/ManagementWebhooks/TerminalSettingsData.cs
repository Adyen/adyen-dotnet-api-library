/*
* Management Webhooks
*
*
* The version of the OpenAPI document: 3
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.ManagementWebhooks
{
    /// <summary>
    /// TerminalSettingsData
    /// </summary>
    [DataContract(Name = "TerminalSettingsData")]
    public partial class TerminalSettingsData : IEquatable<TerminalSettingsData>, IValidatableObject
    {
        /// <summary>
        /// Indicates whether the terminal settings were updated using the Customer Area or the Management API.
        /// </summary>
        /// <value>Indicates whether the terminal settings were updated using the Customer Area or the Management API.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum UpdateSourceEnum
        {
            /// <summary>
            /// Enum CustomerArea for value: Customer Area
            /// </summary>
            [EnumMember(Value = "Customer Area")]
            CustomerArea = 1,

            /// <summary>
            /// Enum ManagementApi for value: Management Api
            /// </summary>
            [EnumMember(Value = "Management Api")]
            ManagementApi = 2

        }


        /// <summary>
        /// Indicates whether the terminal settings were updated using the Customer Area or the Management API.
        /// </summary>
        /// <value>Indicates whether the terminal settings were updated using the Customer Area or the Management API.</value>
        [DataMember(Name = "updateSource", IsRequired = false, EmitDefaultValue = false)]
        public UpdateSourceEnum UpdateSource { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TerminalSettingsData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TerminalSettingsData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TerminalSettingsData" /> class.
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account..</param>
        /// <param name="merchantId">The unique identifier of the merchant account..</param>
        /// <param name="storeId">The unique identifier of the store..</param>
        /// <param name="terminalId">The unique identifier of the terminal..</param>
        /// <param name="updateSource">Indicates whether the terminal settings were updated using the Customer Area or the Management API. (required).</param>
        /// <param name="user">The user that updated the terminal settings. Can be Adyen or your API credential username. (required).</param>
        public TerminalSettingsData(string companyId = default(string), string merchantId = default(string), string storeId = default(string), string terminalId = default(string), UpdateSourceEnum updateSource = default(UpdateSourceEnum), string user = default(string))
        {
            this.UpdateSource = updateSource;
            this.User = user;
            this.CompanyId = companyId;
            this.MerchantId = merchantId;
            this.StoreId = storeId;
            this.TerminalId = terminalId;
        }

        /// <summary>
        /// The unique identifier of the company account.
        /// </summary>
        /// <value>The unique identifier of the company account.</value>
        [DataMember(Name = "companyId", EmitDefaultValue = false)]
        public string CompanyId { get; set; }

        /// <summary>
        /// The unique identifier of the merchant account.
        /// </summary>
        /// <value>The unique identifier of the merchant account.</value>
        [DataMember(Name = "merchantId", EmitDefaultValue = false)]
        public string MerchantId { get; set; }

        /// <summary>
        /// The unique identifier of the store.
        /// </summary>
        /// <value>The unique identifier of the store.</value>
        [DataMember(Name = "storeId", EmitDefaultValue = false)]
        public string StoreId { get; set; }

        /// <summary>
        /// The unique identifier of the terminal.
        /// </summary>
        /// <value>The unique identifier of the terminal.</value>
        [DataMember(Name = "terminalId", EmitDefaultValue = false)]
        public string TerminalId { get; set; }

        /// <summary>
        /// The user that updated the terminal settings. Can be Adyen or your API credential username.
        /// </summary>
        /// <value>The user that updated the terminal settings. Can be Adyen or your API credential username.</value>
        [DataMember(Name = "user", IsRequired = false, EmitDefaultValue = false)]
        public string User { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TerminalSettingsData {\n");
            sb.Append("  CompanyId: ").Append(CompanyId).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  TerminalId: ").Append(TerminalId).Append("\n");
            sb.Append("  UpdateSource: ").Append(UpdateSource).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TerminalSettingsData);
        }

        /// <summary>
        /// Returns true if TerminalSettingsData instances are equal
        /// </summary>
        /// <param name="input">Instance of TerminalSettingsData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TerminalSettingsData input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CompanyId == input.CompanyId ||
                    (this.CompanyId != null &&
                    this.CompanyId.Equals(input.CompanyId))
                ) && 
                (
                    this.MerchantId == input.MerchantId ||
                    (this.MerchantId != null &&
                    this.MerchantId.Equals(input.MerchantId))
                ) && 
                (
                    this.StoreId == input.StoreId ||
                    (this.StoreId != null &&
                    this.StoreId.Equals(input.StoreId))
                ) && 
                (
                    this.TerminalId == input.TerminalId ||
                    (this.TerminalId != null &&
                    this.TerminalId.Equals(input.TerminalId))
                ) && 
                (
                    this.UpdateSource == input.UpdateSource ||
                    this.UpdateSource.Equals(input.UpdateSource)
                ) && 
                (
                    this.User == input.User ||
                    (this.User != null &&
                    this.User.Equals(input.User))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CompanyId != null)
                {
                    hashCode = (hashCode * 59) + this.CompanyId.GetHashCode();
                }
                if (this.MerchantId != null)
                {
                    hashCode = (hashCode * 59) + this.MerchantId.GetHashCode();
                }
                if (this.StoreId != null)
                {
                    hashCode = (hashCode * 59) + this.StoreId.GetHashCode();
                }
                if (this.TerminalId != null)
                {
                    hashCode = (hashCode * 59) + this.TerminalId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.UpdateSource.GetHashCode();
                if (this.User != null)
                {
                    hashCode = (hashCode * 59) + this.User.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

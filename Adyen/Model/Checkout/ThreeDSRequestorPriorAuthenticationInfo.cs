// <auto-generated>
/*
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v71/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v71/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=71) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 71
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Adyen.Client;

namespace Adyen.Model.Checkout
{
    /// <summary>
    /// ThreeDSRequestorPriorAuthenticationInfo
    /// </summary>
    public partial class ThreeDSRequestorPriorAuthenticationInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ThreeDSRequestorPriorAuthenticationInfo" /> class.
        /// </summary>
        /// <param name="threeDSReqPriorAuthData">Data that documents and supports a specific authentication process. Maximum length: 2048 bytes.</param>
        /// <param name="threeDSReqPriorAuthMethod">Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor. Allowed values: * **01** — Frictionless authentication occurred by ACS. * **02** — Cardholder challenge occurred by ACS. * **03** — AVS verified. * **04** — Other issuer methods.</param>
        /// <param name="threeDSReqPriorAuthTimestamp">Date and time in UTC of the prior cardholder authentication. Format: YYYYMMDDHHMM</param>
        /// <param name="threeDSReqPriorRef">This data element provides additional information to the ACS to determine the best approach for handing a request. This data element contains an ACS Transaction ID for a prior authenticated transaction. For example, the first recurring transaction that was authenticated with the cardholder. Length: 30 characters.</param>
        [JsonConstructor]
        public ThreeDSRequestorPriorAuthenticationInfo(Option<string> threeDSReqPriorAuthData = default, Option<ThreeDSReqPriorAuthMethodEnum?> threeDSReqPriorAuthMethod = default, Option<string> threeDSReqPriorAuthTimestamp = default, Option<string> threeDSReqPriorRef = default)
        {
            ThreeDSReqPriorAuthDataOption = threeDSReqPriorAuthData;
            ThreeDSReqPriorAuthMethodOption = threeDSReqPriorAuthMethod;
            ThreeDSReqPriorAuthTimestampOption = threeDSReqPriorAuthTimestamp;
            ThreeDSReqPriorRefOption = threeDSReqPriorRef;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor. Allowed values: * **01** — Frictionless authentication occurred by ACS. * **02** — Cardholder challenge occurred by ACS. * **03** — AVS verified. * **04** — Other issuer methods.
        /// </summary>
        /// <value>Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor. Allowed values: * **01** — Frictionless authentication occurred by ACS. * **02** — Cardholder challenge occurred by ACS. * **03** — AVS verified. * **04** — Other issuer methods.</value>
        public enum ThreeDSReqPriorAuthMethodEnum
        {
            /// <summary>
            /// Enum _01 for value: 01
            /// </summary>
            _01 = 1,

            /// <summary>
            /// Enum _02 for value: 02
            /// </summary>
            _02 = 2,

            /// <summary>
            /// Enum _03 for value: 03
            /// </summary>
            _03 = 3,

            /// <summary>
            /// Enum _04 for value: 04
            /// </summary>
            _04 = 4
        }

        /// <summary>
        /// Returns a <see cref="ThreeDSReqPriorAuthMethodEnum"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static ThreeDSReqPriorAuthMethodEnum ThreeDSReqPriorAuthMethodEnumFromString(string value)
        {
            if (value.Equals("01"))
                return ThreeDSReqPriorAuthMethodEnum._01;

            if (value.Equals("02"))
                return ThreeDSReqPriorAuthMethodEnum._02;

            if (value.Equals("03"))
                return ThreeDSReqPriorAuthMethodEnum._03;

            if (value.Equals("04"))
                return ThreeDSReqPriorAuthMethodEnum._04;

            throw new NotImplementedException($"Could not convert value to type ThreeDSReqPriorAuthMethodEnum: '{value}'");
        }

        /// <summary>
        /// Returns a <see cref="ThreeDSReqPriorAuthMethodEnum"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static ThreeDSReqPriorAuthMethodEnum? ThreeDSReqPriorAuthMethodEnumFromStringOrDefault(string value)
        {
            if (value.Equals("01"))
                return ThreeDSReqPriorAuthMethodEnum._01;

            if (value.Equals("02"))
                return ThreeDSReqPriorAuthMethodEnum._02;

            if (value.Equals("03"))
                return ThreeDSReqPriorAuthMethodEnum._03;

            if (value.Equals("04"))
                return ThreeDSReqPriorAuthMethodEnum._04;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="ThreeDSReqPriorAuthMethodEnum"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static string ThreeDSReqPriorAuthMethodEnumToJsonValue(ThreeDSReqPriorAuthMethodEnum? value)
        {
            if (value == ThreeDSReqPriorAuthMethodEnum._01)
                return "01";

            if (value == ThreeDSReqPriorAuthMethodEnum._02)
                return "02";

            if (value == ThreeDSReqPriorAuthMethodEnum._03)
                return "03";

            if (value == ThreeDSReqPriorAuthMethodEnum._04)
                return "04";

            throw new NotImplementedException($"Value could not be handled: '{value}'");
        }

        /// <summary>
        /// Used to track the state of ThreeDSReqPriorAuthMethod
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<ThreeDSReqPriorAuthMethodEnum?> ThreeDSReqPriorAuthMethodOption { get; private set; }

        /// <summary>
        /// Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor. Allowed values: * **01** — Frictionless authentication occurred by ACS. * **02** — Cardholder challenge occurred by ACS. * **03** — AVS verified. * **04** — Other issuer methods.
        /// </summary>
        /// <value>Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor. Allowed values: * **01** — Frictionless authentication occurred by ACS. * **02** — Cardholder challenge occurred by ACS. * **03** — AVS verified. * **04** — Other issuer methods.</value>
        [JsonPropertyName("threeDSReqPriorAuthMethod")]
        public ThreeDSReqPriorAuthMethodEnum? ThreeDSReqPriorAuthMethod { get { return this.ThreeDSReqPriorAuthMethodOption; } set { this.ThreeDSReqPriorAuthMethodOption = new Option<ThreeDSReqPriorAuthMethodEnum?>(value); } }

        /// <summary>
        /// Used to track the state of ThreeDSReqPriorAuthData
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string> ThreeDSReqPriorAuthDataOption { get; private set; }

        /// <summary>
        /// Data that documents and supports a specific authentication process. Maximum length: 2048 bytes.
        /// </summary>
        /// <value>Data that documents and supports a specific authentication process. Maximum length: 2048 bytes.</value>
        [JsonPropertyName("threeDSReqPriorAuthData")]
        public string ThreeDSReqPriorAuthData { get { return this.ThreeDSReqPriorAuthDataOption; } set { this.ThreeDSReqPriorAuthDataOption = new Option<string>(value); } }

        /// <summary>
        /// Used to track the state of ThreeDSReqPriorAuthTimestamp
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string> ThreeDSReqPriorAuthTimestampOption { get; private set; }

        /// <summary>
        /// Date and time in UTC of the prior cardholder authentication. Format: YYYYMMDDHHMM
        /// </summary>
        /// <value>Date and time in UTC of the prior cardholder authentication. Format: YYYYMMDDHHMM</value>
        [JsonPropertyName("threeDSReqPriorAuthTimestamp")]
        public string ThreeDSReqPriorAuthTimestamp { get { return this.ThreeDSReqPriorAuthTimestampOption; } set { this.ThreeDSReqPriorAuthTimestampOption = new Option<string>(value); } }

        /// <summary>
        /// Used to track the state of ThreeDSReqPriorRef
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string> ThreeDSReqPriorRefOption { get; private set; }

        /// <summary>
        /// This data element provides additional information to the ACS to determine the best approach for handing a request. This data element contains an ACS Transaction ID for a prior authenticated transaction. For example, the first recurring transaction that was authenticated with the cardholder. Length: 30 characters.
        /// </summary>
        /// <value>This data element provides additional information to the ACS to determine the best approach for handing a request. This data element contains an ACS Transaction ID for a prior authenticated transaction. For example, the first recurring transaction that was authenticated with the cardholder. Length: 30 characters.</value>
        [JsonPropertyName("threeDSReqPriorRef")]
        public string ThreeDSReqPriorRef { get { return this.ThreeDSReqPriorRefOption; } set { this.ThreeDSReqPriorRefOption = new Option<string>(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ThreeDSRequestorPriorAuthenticationInfo {\n");
            sb.Append("  ThreeDSReqPriorAuthData: ").Append(ThreeDSReqPriorAuthData).Append("\n");
            sb.Append("  ThreeDSReqPriorAuthMethod: ").Append(ThreeDSReqPriorAuthMethod).Append("\n");
            sb.Append("  ThreeDSReqPriorAuthTimestamp: ").Append(ThreeDSReqPriorAuthTimestamp).Append("\n");
            sb.Append("  ThreeDSReqPriorRef: ").Append(ThreeDSReqPriorRef).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ThreeDSReqPriorAuthTimestamp (string) maxLength
            if (this.ThreeDSReqPriorAuthTimestamp != null && this.ThreeDSReqPriorAuthTimestamp.Length > 12)
            {
                yield return new ValidationResult("Invalid value for ThreeDSReqPriorAuthTimestamp, length must be less than 12.", new [] { "ThreeDSReqPriorAuthTimestamp" });
            }

            // ThreeDSReqPriorAuthTimestamp (string) minLength
            if (this.ThreeDSReqPriorAuthTimestamp != null && this.ThreeDSReqPriorAuthTimestamp.Length < 12)
            {
                yield return new ValidationResult("Invalid value for ThreeDSReqPriorAuthTimestamp, length must be greater than 12.", new [] { "ThreeDSReqPriorAuthTimestamp" });
            }

            // ThreeDSReqPriorRef (string) maxLength
            if (this.ThreeDSReqPriorRef != null && this.ThreeDSReqPriorRef.Length > 36)
            {
                yield return new ValidationResult("Invalid value for ThreeDSReqPriorRef, length must be less than 36.", new [] { "ThreeDSReqPriorRef" });
            }

            // ThreeDSReqPriorRef (string) minLength
            if (this.ThreeDSReqPriorRef != null && this.ThreeDSReqPriorRef.Length < 36)
            {
                yield return new ValidationResult("Invalid value for ThreeDSReqPriorRef, length must be greater than 36.", new [] { "ThreeDSReqPriorRef" });
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="ThreeDSRequestorPriorAuthenticationInfo" />
    /// </summary>
    public class ThreeDSRequestorPriorAuthenticationInfoJsonConverter : JsonConverter<ThreeDSRequestorPriorAuthenticationInfo>
    {
        /// <summary>
        /// Deserializes json to <see cref="ThreeDSRequestorPriorAuthenticationInfo" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override ThreeDSRequestorPriorAuthenticationInfo Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string> threeDSReqPriorAuthData = default;
            Option<ThreeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthMethodEnum?> threeDSReqPriorAuthMethod = default;
            Option<string> threeDSReqPriorAuthTimestamp = default;
            Option<string> threeDSReqPriorRef = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "threeDSReqPriorAuthData":
                            threeDSReqPriorAuthData = new Option<string>(utf8JsonReader.GetString());
                            break;
                        case "threeDSReqPriorAuthMethod":
                            string threeDSReqPriorAuthMethodRawValue = utf8JsonReader.GetString();
                            if (threeDSReqPriorAuthMethodRawValue != null)
                                threeDSReqPriorAuthMethod = new Option<ThreeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthMethodEnum?>(ThreeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthMethodEnumFromStringOrDefault(threeDSReqPriorAuthMethodRawValue));
                            break;
                        case "threeDSReqPriorAuthTimestamp":
                            threeDSReqPriorAuthTimestamp = new Option<string>(utf8JsonReader.GetString());
                            break;
                        case "threeDSReqPriorRef":
                            threeDSReqPriorRef = new Option<string>(utf8JsonReader.GetString());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (threeDSReqPriorAuthData.IsSet && threeDSReqPriorAuthData.Value == null)
                throw new ArgumentNullException(nameof(threeDSReqPriorAuthData), "Property is not nullable for class ThreeDSRequestorPriorAuthenticationInfo.");

            if (threeDSReqPriorAuthMethod.IsSet && threeDSReqPriorAuthMethod.Value == null)
                throw new ArgumentNullException(nameof(threeDSReqPriorAuthMethod), "Property is not nullable for class ThreeDSRequestorPriorAuthenticationInfo.");

            if (threeDSReqPriorAuthTimestamp.IsSet && threeDSReqPriorAuthTimestamp.Value == null)
                throw new ArgumentNullException(nameof(threeDSReqPriorAuthTimestamp), "Property is not nullable for class ThreeDSRequestorPriorAuthenticationInfo.");

            if (threeDSReqPriorRef.IsSet && threeDSReqPriorRef.Value == null)
                throw new ArgumentNullException(nameof(threeDSReqPriorRef), "Property is not nullable for class ThreeDSRequestorPriorAuthenticationInfo.");

            return new ThreeDSRequestorPriorAuthenticationInfo(threeDSReqPriorAuthData, threeDSReqPriorAuthMethod, threeDSReqPriorAuthTimestamp, threeDSReqPriorRef);
        }

        /// <summary>
        /// Serializes a <see cref="ThreeDSRequestorPriorAuthenticationInfo" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="threeDSRequestorPriorAuthenticationInfo"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, ThreeDSRequestorPriorAuthenticationInfo threeDSRequestorPriorAuthenticationInfo, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, threeDSRequestorPriorAuthenticationInfo, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="ThreeDSRequestorPriorAuthenticationInfo" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="threeDSRequestorPriorAuthenticationInfo"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, ThreeDSRequestorPriorAuthenticationInfo threeDSRequestorPriorAuthenticationInfo, JsonSerializerOptions jsonSerializerOptions)
        {
            if (threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthDataOption.IsSet && threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthData == null)
                throw new ArgumentNullException(nameof(threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthData), "Property is required for class ThreeDSRequestorPriorAuthenticationInfo.");

            if (threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthTimestampOption.IsSet && threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthTimestamp == null)
                throw new ArgumentNullException(nameof(threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthTimestamp), "Property is required for class ThreeDSRequestorPriorAuthenticationInfo.");

            if (threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorRefOption.IsSet && threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorRef == null)
                throw new ArgumentNullException(nameof(threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorRef), "Property is required for class ThreeDSRequestorPriorAuthenticationInfo.");

            if (threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthDataOption.IsSet)
                writer.WriteString("threeDSReqPriorAuthData", threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthData);

            var threeDSReqPriorAuthMethodRawValue = ThreeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthMethodEnumToJsonValue(threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthMethodOption.Value.Value);
            writer.WriteString("threeDSReqPriorAuthMethod", threeDSReqPriorAuthMethodRawValue);
            if (threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthTimestampOption.IsSet)
                writer.WriteString("threeDSReqPriorAuthTimestamp", threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthTimestamp);

            if (threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorRefOption.IsSet)
                writer.WriteString("threeDSReqPriorRef", threeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorRef);
        }
    }
}

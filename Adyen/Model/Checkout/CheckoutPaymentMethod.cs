// <auto-generated>
/*
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v71/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v71/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=71) to find out what changed in this version!
 *
 * The version of the OpenAPI document: 71
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Adyen.Client;

namespace Adyen.Model.Checkout
{
    /// <summary>
    /// The type and required details of a payment method to use.
    /// </summary>
    public partial class CheckoutPaymentMethod : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="achDetails"></param>
        public CheckoutPaymentMethod(AchDetails achDetails)
        {
            AchDetails = achDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="affirmDetails"></param>
        public CheckoutPaymentMethod(AffirmDetails affirmDetails)
        {
            AffirmDetails = affirmDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="afterpayDetails"></param>
        public CheckoutPaymentMethod(AfterpayDetails afterpayDetails)
        {
            AfterpayDetails = afterpayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="amazonPayDetails"></param>
        public CheckoutPaymentMethod(AmazonPayDetails amazonPayDetails)
        {
            AmazonPayDetails = amazonPayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="ancvDetails"></param>
        public CheckoutPaymentMethod(AncvDetails ancvDetails)
        {
            AncvDetails = ancvDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="androidPayDetails"></param>
        public CheckoutPaymentMethod(AndroidPayDetails androidPayDetails)
        {
            AndroidPayDetails = androidPayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="applePayDetails"></param>
        public CheckoutPaymentMethod(ApplePayDetails applePayDetails)
        {
            ApplePayDetails = applePayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="bacsDirectDebitDetails"></param>
        public CheckoutPaymentMethod(BacsDirectDebitDetails bacsDirectDebitDetails)
        {
            BacsDirectDebitDetails = bacsDirectDebitDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="billDeskDetails"></param>
        public CheckoutPaymentMethod(BillDeskDetails billDeskDetails)
        {
            BillDeskDetails = billDeskDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="blikDetails"></param>
        public CheckoutPaymentMethod(BlikDetails blikDetails)
        {
            BlikDetails = blikDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="cardDetails"></param>
        public CheckoutPaymentMethod(CardDetails cardDetails)
        {
            CardDetails = cardDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="cashAppDetails"></param>
        public CheckoutPaymentMethod(CashAppDetails cashAppDetails)
        {
            CashAppDetails = cashAppDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="cellulantDetails"></param>
        public CheckoutPaymentMethod(CellulantDetails cellulantDetails)
        {
            CellulantDetails = cellulantDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="dokuDetails"></param>
        public CheckoutPaymentMethod(DokuDetails dokuDetails)
        {
            DokuDetails = dokuDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="dragonpayDetails"></param>
        public CheckoutPaymentMethod(DragonpayDetails dragonpayDetails)
        {
            DragonpayDetails = dragonpayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="eBankingFinlandDetails"></param>
        public CheckoutPaymentMethod(EBankingFinlandDetails eBankingFinlandDetails)
        {
            EBankingFinlandDetails = eBankingFinlandDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="econtextVoucherDetails"></param>
        public CheckoutPaymentMethod(EcontextVoucherDetails econtextVoucherDetails)
        {
            EcontextVoucherDetails = econtextVoucherDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="eftDetails"></param>
        public CheckoutPaymentMethod(EftDetails eftDetails)
        {
            EftDetails = eftDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="fastlaneDetails"></param>
        public CheckoutPaymentMethod(FastlaneDetails fastlaneDetails)
        {
            FastlaneDetails = fastlaneDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="genericIssuerPaymentMethodDetails"></param>
        public CheckoutPaymentMethod(GenericIssuerPaymentMethodDetails genericIssuerPaymentMethodDetails)
        {
            GenericIssuerPaymentMethodDetails = genericIssuerPaymentMethodDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="googlePayDetails"></param>
        public CheckoutPaymentMethod(GooglePayDetails googlePayDetails)
        {
            GooglePayDetails = googlePayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="idealDetails"></param>
        public CheckoutPaymentMethod(IdealDetails idealDetails)
        {
            IdealDetails = idealDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="klarnaDetails"></param>
        public CheckoutPaymentMethod(KlarnaDetails klarnaDetails)
        {
            KlarnaDetails = klarnaDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="masterpassDetails"></param>
        public CheckoutPaymentMethod(MasterpassDetails masterpassDetails)
        {
            MasterpassDetails = masterpassDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="mbwayDetails"></param>
        public CheckoutPaymentMethod(MbwayDetails mbwayDetails)
        {
            MbwayDetails = mbwayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="mobilePayDetails"></param>
        public CheckoutPaymentMethod(MobilePayDetails mobilePayDetails)
        {
            MobilePayDetails = mobilePayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="molPayDetails"></param>
        public CheckoutPaymentMethod(MolPayDetails molPayDetails)
        {
            MolPayDetails = molPayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="openInvoiceDetails"></param>
        public CheckoutPaymentMethod(OpenInvoiceDetails openInvoiceDetails)
        {
            OpenInvoiceDetails = openInvoiceDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="payByBankAISDirectDebitDetails"></param>
        public CheckoutPaymentMethod(PayByBankAISDirectDebitDetails payByBankAISDirectDebitDetails)
        {
            PayByBankAISDirectDebitDetails = payByBankAISDirectDebitDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="payByBankDetails"></param>
        public CheckoutPaymentMethod(PayByBankDetails payByBankDetails)
        {
            PayByBankDetails = payByBankDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="payPalDetails"></param>
        public CheckoutPaymentMethod(PayPalDetails payPalDetails)
        {
            PayPalDetails = payPalDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="payPayDetails"></param>
        public CheckoutPaymentMethod(PayPayDetails payPayDetails)
        {
            PayPayDetails = payPayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="payToDetails"></param>
        public CheckoutPaymentMethod(PayToDetails payToDetails)
        {
            PayToDetails = payToDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="payUUpiDetails"></param>
        public CheckoutPaymentMethod(PayUUpiDetails payUUpiDetails)
        {
            PayUUpiDetails = payUUpiDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="payWithGoogleDetails"></param>
        public CheckoutPaymentMethod(PayWithGoogleDetails payWithGoogleDetails)
        {
            PayWithGoogleDetails = payWithGoogleDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="paymentDetails"></param>
        public CheckoutPaymentMethod(PaymentDetails paymentDetails)
        {
            PaymentDetails = paymentDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="pixDetails"></param>
        public CheckoutPaymentMethod(PixDetails pixDetails)
        {
            PixDetails = pixDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="pseDetails"></param>
        public CheckoutPaymentMethod(PseDetails pseDetails)
        {
            PseDetails = pseDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="rakutenPayDetails"></param>
        public CheckoutPaymentMethod(RakutenPayDetails rakutenPayDetails)
        {
            RakutenPayDetails = rakutenPayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="ratepayDetails"></param>
        public CheckoutPaymentMethod(RatepayDetails ratepayDetails)
        {
            RatepayDetails = ratepayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="rivertyDetails"></param>
        public CheckoutPaymentMethod(RivertyDetails rivertyDetails)
        {
            RivertyDetails = rivertyDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="samsungPayDetails"></param>
        public CheckoutPaymentMethod(SamsungPayDetails samsungPayDetails)
        {
            SamsungPayDetails = samsungPayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="sepaDirectDebitDetails"></param>
        public CheckoutPaymentMethod(SepaDirectDebitDetails sepaDirectDebitDetails)
        {
            SepaDirectDebitDetails = sepaDirectDebitDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="storedPaymentMethodDetails"></param>
        public CheckoutPaymentMethod(StoredPaymentMethodDetails storedPaymentMethodDetails)
        {
            StoredPaymentMethodDetails = storedPaymentMethodDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="twintDetails"></param>
        public CheckoutPaymentMethod(TwintDetails twintDetails)
        {
            TwintDetails = twintDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="upiCollectDetails"></param>
        public CheckoutPaymentMethod(UpiCollectDetails upiCollectDetails)
        {
            UpiCollectDetails = upiCollectDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="upiIntentDetails"></param>
        public CheckoutPaymentMethod(UpiIntentDetails upiIntentDetails)
        {
            UpiIntentDetails = upiIntentDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="vippsDetails"></param>
        public CheckoutPaymentMethod(VippsDetails vippsDetails)
        {
            VippsDetails = vippsDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="visaCheckoutDetails"></param>
        public CheckoutPaymentMethod(VisaCheckoutDetails visaCheckoutDetails)
        {
            VisaCheckoutDetails = visaCheckoutDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="weChatPayDetails"></param>
        public CheckoutPaymentMethod(WeChatPayDetails weChatPayDetails)
        {
            WeChatPayDetails = weChatPayDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="weChatPayMiniProgramDetails"></param>
        public CheckoutPaymentMethod(WeChatPayMiniProgramDetails weChatPayMiniProgramDetails)
        {
            WeChatPayMiniProgramDetails = weChatPayMiniProgramDetails;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutPaymentMethod" /> class.
        /// </summary>
        /// <param name="zipDetails"></param>
        public CheckoutPaymentMethod(ZipDetails zipDetails)
        {
            ZipDetails = zipDetails;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Gets or Sets AchDetails
        /// </summary>
        public AchDetails AchDetails { get; set; }

        /// <summary>
        /// Gets or Sets AffirmDetails
        /// </summary>
        public AffirmDetails AffirmDetails { get; set; }

        /// <summary>
        /// Gets or Sets AfterpayDetails
        /// </summary>
        public AfterpayDetails AfterpayDetails { get; set; }

        /// <summary>
        /// Gets or Sets AmazonPayDetails
        /// </summary>
        public AmazonPayDetails AmazonPayDetails { get; set; }

        /// <summary>
        /// Gets or Sets AncvDetails
        /// </summary>
        public AncvDetails AncvDetails { get; set; }

        /// <summary>
        /// Gets or Sets AndroidPayDetails
        /// </summary>
        public AndroidPayDetails AndroidPayDetails { get; set; }

        /// <summary>
        /// Gets or Sets ApplePayDetails
        /// </summary>
        public ApplePayDetails ApplePayDetails { get; set; }

        /// <summary>
        /// Gets or Sets BacsDirectDebitDetails
        /// </summary>
        public BacsDirectDebitDetails BacsDirectDebitDetails { get; set; }

        /// <summary>
        /// Gets or Sets BillDeskDetails
        /// </summary>
        public BillDeskDetails BillDeskDetails { get; set; }

        /// <summary>
        /// Gets or Sets BlikDetails
        /// </summary>
        public BlikDetails BlikDetails { get; set; }

        /// <summary>
        /// Gets or Sets CardDetails
        /// </summary>
        public CardDetails CardDetails { get; set; }

        /// <summary>
        /// Gets or Sets CashAppDetails
        /// </summary>
        public CashAppDetails CashAppDetails { get; set; }

        /// <summary>
        /// Gets or Sets CellulantDetails
        /// </summary>
        public CellulantDetails CellulantDetails { get; set; }

        /// <summary>
        /// Gets or Sets DokuDetails
        /// </summary>
        public DokuDetails DokuDetails { get; set; }

        /// <summary>
        /// Gets or Sets DragonpayDetails
        /// </summary>
        public DragonpayDetails DragonpayDetails { get; set; }

        /// <summary>
        /// Gets or Sets EBankingFinlandDetails
        /// </summary>
        public EBankingFinlandDetails EBankingFinlandDetails { get; set; }

        /// <summary>
        /// Gets or Sets EcontextVoucherDetails
        /// </summary>
        public EcontextVoucherDetails EcontextVoucherDetails { get; set; }

        /// <summary>
        /// Gets or Sets EftDetails
        /// </summary>
        public EftDetails EftDetails { get; set; }

        /// <summary>
        /// Gets or Sets FastlaneDetails
        /// </summary>
        public FastlaneDetails FastlaneDetails { get; set; }

        /// <summary>
        /// Gets or Sets GenericIssuerPaymentMethodDetails
        /// </summary>
        public GenericIssuerPaymentMethodDetails GenericIssuerPaymentMethodDetails { get; set; }

        /// <summary>
        /// Gets or Sets GooglePayDetails
        /// </summary>
        public GooglePayDetails GooglePayDetails { get; set; }

        /// <summary>
        /// Gets or Sets IdealDetails
        /// </summary>
        public IdealDetails IdealDetails { get; set; }

        /// <summary>
        /// Gets or Sets KlarnaDetails
        /// </summary>
        public KlarnaDetails KlarnaDetails { get; set; }

        /// <summary>
        /// Gets or Sets MasterpassDetails
        /// </summary>
        public MasterpassDetails MasterpassDetails { get; set; }

        /// <summary>
        /// Gets or Sets MbwayDetails
        /// </summary>
        public MbwayDetails MbwayDetails { get; set; }

        /// <summary>
        /// Gets or Sets MobilePayDetails
        /// </summary>
        public MobilePayDetails MobilePayDetails { get; set; }

        /// <summary>
        /// Gets or Sets MolPayDetails
        /// </summary>
        public MolPayDetails MolPayDetails { get; set; }

        /// <summary>
        /// Gets or Sets OpenInvoiceDetails
        /// </summary>
        public OpenInvoiceDetails OpenInvoiceDetails { get; set; }

        /// <summary>
        /// Gets or Sets PayByBankAISDirectDebitDetails
        /// </summary>
        public PayByBankAISDirectDebitDetails PayByBankAISDirectDebitDetails { get; set; }

        /// <summary>
        /// Gets or Sets PayByBankDetails
        /// </summary>
        public PayByBankDetails PayByBankDetails { get; set; }

        /// <summary>
        /// Gets or Sets PayPalDetails
        /// </summary>
        public PayPalDetails PayPalDetails { get; set; }

        /// <summary>
        /// Gets or Sets PayPayDetails
        /// </summary>
        public PayPayDetails PayPayDetails { get; set; }

        /// <summary>
        /// Gets or Sets PayToDetails
        /// </summary>
        public PayToDetails PayToDetails { get; set; }

        /// <summary>
        /// Gets or Sets PayUUpiDetails
        /// </summary>
        public PayUUpiDetails PayUUpiDetails { get; set; }

        /// <summary>
        /// Gets or Sets PayWithGoogleDetails
        /// </summary>
        public PayWithGoogleDetails PayWithGoogleDetails { get; set; }

        /// <summary>
        /// Gets or Sets PaymentDetails
        /// </summary>
        public PaymentDetails PaymentDetails { get; set; }

        /// <summary>
        /// Gets or Sets PixDetails
        /// </summary>
        public PixDetails PixDetails { get; set; }

        /// <summary>
        /// Gets or Sets PseDetails
        /// </summary>
        public PseDetails PseDetails { get; set; }

        /// <summary>
        /// Gets or Sets RakutenPayDetails
        /// </summary>
        public RakutenPayDetails RakutenPayDetails { get; set; }

        /// <summary>
        /// Gets or Sets RatepayDetails
        /// </summary>
        public RatepayDetails RatepayDetails { get; set; }

        /// <summary>
        /// Gets or Sets RivertyDetails
        /// </summary>
        public RivertyDetails RivertyDetails { get; set; }

        /// <summary>
        /// Gets or Sets SamsungPayDetails
        /// </summary>
        public SamsungPayDetails SamsungPayDetails { get; set; }

        /// <summary>
        /// Gets or Sets SepaDirectDebitDetails
        /// </summary>
        public SepaDirectDebitDetails SepaDirectDebitDetails { get; set; }

        /// <summary>
        /// Gets or Sets StoredPaymentMethodDetails
        /// </summary>
        public StoredPaymentMethodDetails StoredPaymentMethodDetails { get; set; }

        /// <summary>
        /// Gets or Sets TwintDetails
        /// </summary>
        public TwintDetails TwintDetails { get; set; }

        /// <summary>
        /// Gets or Sets UpiCollectDetails
        /// </summary>
        public UpiCollectDetails UpiCollectDetails { get; set; }

        /// <summary>
        /// Gets or Sets UpiIntentDetails
        /// </summary>
        public UpiIntentDetails UpiIntentDetails { get; set; }

        /// <summary>
        /// Gets or Sets VippsDetails
        /// </summary>
        public VippsDetails VippsDetails { get; set; }

        /// <summary>
        /// Gets or Sets VisaCheckoutDetails
        /// </summary>
        public VisaCheckoutDetails VisaCheckoutDetails { get; set; }

        /// <summary>
        /// Gets or Sets WeChatPayDetails
        /// </summary>
        public WeChatPayDetails WeChatPayDetails { get; set; }

        /// <summary>
        /// Gets or Sets WeChatPayMiniProgramDetails
        /// </summary>
        public WeChatPayMiniProgramDetails WeChatPayMiniProgramDetails { get; set; }

        /// <summary>
        /// Gets or Sets ZipDetails
        /// </summary>
        public ZipDetails ZipDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CheckoutPaymentMethod {\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="CheckoutPaymentMethod" />
    /// </summary>
    public class CheckoutPaymentMethodJsonConverter : JsonConverter<CheckoutPaymentMethod>
    {
        /// <summary>
        /// Deserializes json to <see cref="CheckoutPaymentMethod" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override CheckoutPaymentMethod Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            AchDetails achDetails = default;
            AffirmDetails affirmDetails = default;
            AfterpayDetails afterpayDetails = default;
            AmazonPayDetails amazonPayDetails = default;
            AncvDetails ancvDetails = default;
            AndroidPayDetails androidPayDetails = default;
            ApplePayDetails applePayDetails = default;
            BacsDirectDebitDetails bacsDirectDebitDetails = default;
            BillDeskDetails billDeskDetails = default;
            BlikDetails blikDetails = default;
            CardDetails cardDetails = default;
            CashAppDetails cashAppDetails = default;
            CellulantDetails cellulantDetails = default;
            DokuDetails dokuDetails = default;
            DragonpayDetails dragonpayDetails = default;
            EBankingFinlandDetails eBankingFinlandDetails = default;
            EcontextVoucherDetails econtextVoucherDetails = default;
            EftDetails eftDetails = default;
            FastlaneDetails fastlaneDetails = default;
            GenericIssuerPaymentMethodDetails genericIssuerPaymentMethodDetails = default;
            GooglePayDetails googlePayDetails = default;
            IdealDetails idealDetails = default;
            KlarnaDetails klarnaDetails = default;
            MasterpassDetails masterpassDetails = default;
            MbwayDetails mbwayDetails = default;
            MobilePayDetails mobilePayDetails = default;
            MolPayDetails molPayDetails = default;
            OpenInvoiceDetails openInvoiceDetails = default;
            PayByBankAISDirectDebitDetails payByBankAISDirectDebitDetails = default;
            PayByBankDetails payByBankDetails = default;
            PayPalDetails payPalDetails = default;
            PayPayDetails payPayDetails = default;
            PayToDetails payToDetails = default;
            PayUUpiDetails payUUpiDetails = default;
            PayWithGoogleDetails payWithGoogleDetails = default;
            PaymentDetails paymentDetails = default;
            PixDetails pixDetails = default;
            PseDetails pseDetails = default;
            RakutenPayDetails rakutenPayDetails = default;
            RatepayDetails ratepayDetails = default;
            RivertyDetails rivertyDetails = default;
            SamsungPayDetails samsungPayDetails = default;
            SepaDirectDebitDetails sepaDirectDebitDetails = default;
            StoredPaymentMethodDetails storedPaymentMethodDetails = default;
            TwintDetails twintDetails = default;
            UpiCollectDetails upiCollectDetails = default;
            UpiIntentDetails upiIntentDetails = default;
            VippsDetails vippsDetails = default;
            VisaCheckoutDetails visaCheckoutDetails = default;
            WeChatPayDetails weChatPayDetails = default;
            WeChatPayMiniProgramDetails weChatPayMiniProgramDetails = default;
            ZipDetails zipDetails = default;

            Utf8JsonReader utf8JsonReaderOneOf = utf8JsonReader;
            while (utf8JsonReaderOneOf.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReaderOneOf.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReaderOneOf.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReaderOneOf.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReaderOneOf.CurrentDepth)
                    break;

                if (utf8JsonReaderOneOf.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReaderOneOf.CurrentDepth - 1)
                {
                    Utf8JsonReader utf8JsonReaderAchDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<AchDetails>(ref utf8JsonReaderAchDetails, jsonSerializerOptions, out achDetails);

                    Utf8JsonReader utf8JsonReaderAffirmDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<AffirmDetails>(ref utf8JsonReaderAffirmDetails, jsonSerializerOptions, out affirmDetails);

                    Utf8JsonReader utf8JsonReaderAfterpayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<AfterpayDetails>(ref utf8JsonReaderAfterpayDetails, jsonSerializerOptions, out afterpayDetails);

                    Utf8JsonReader utf8JsonReaderAmazonPayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<AmazonPayDetails>(ref utf8JsonReaderAmazonPayDetails, jsonSerializerOptions, out amazonPayDetails);

                    Utf8JsonReader utf8JsonReaderAncvDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<AncvDetails>(ref utf8JsonReaderAncvDetails, jsonSerializerOptions, out ancvDetails);

                    Utf8JsonReader utf8JsonReaderAndroidPayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<AndroidPayDetails>(ref utf8JsonReaderAndroidPayDetails, jsonSerializerOptions, out androidPayDetails);

                    Utf8JsonReader utf8JsonReaderApplePayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<ApplePayDetails>(ref utf8JsonReaderApplePayDetails, jsonSerializerOptions, out applePayDetails);

                    Utf8JsonReader utf8JsonReaderBacsDirectDebitDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<BacsDirectDebitDetails>(ref utf8JsonReaderBacsDirectDebitDetails, jsonSerializerOptions, out bacsDirectDebitDetails);

                    Utf8JsonReader utf8JsonReaderBillDeskDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<BillDeskDetails>(ref utf8JsonReaderBillDeskDetails, jsonSerializerOptions, out billDeskDetails);

                    Utf8JsonReader utf8JsonReaderBlikDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<BlikDetails>(ref utf8JsonReaderBlikDetails, jsonSerializerOptions, out blikDetails);

                    Utf8JsonReader utf8JsonReaderCardDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<CardDetails>(ref utf8JsonReaderCardDetails, jsonSerializerOptions, out cardDetails);

                    Utf8JsonReader utf8JsonReaderCashAppDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<CashAppDetails>(ref utf8JsonReaderCashAppDetails, jsonSerializerOptions, out cashAppDetails);

                    Utf8JsonReader utf8JsonReaderCellulantDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<CellulantDetails>(ref utf8JsonReaderCellulantDetails, jsonSerializerOptions, out cellulantDetails);

                    Utf8JsonReader utf8JsonReaderDokuDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<DokuDetails>(ref utf8JsonReaderDokuDetails, jsonSerializerOptions, out dokuDetails);

                    Utf8JsonReader utf8JsonReaderDragonpayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<DragonpayDetails>(ref utf8JsonReaderDragonpayDetails, jsonSerializerOptions, out dragonpayDetails);

                    Utf8JsonReader utf8JsonReaderEBankingFinlandDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<EBankingFinlandDetails>(ref utf8JsonReaderEBankingFinlandDetails, jsonSerializerOptions, out eBankingFinlandDetails);

                    Utf8JsonReader utf8JsonReaderEcontextVoucherDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<EcontextVoucherDetails>(ref utf8JsonReaderEcontextVoucherDetails, jsonSerializerOptions, out econtextVoucherDetails);

                    Utf8JsonReader utf8JsonReaderEftDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<EftDetails>(ref utf8JsonReaderEftDetails, jsonSerializerOptions, out eftDetails);

                    Utf8JsonReader utf8JsonReaderFastlaneDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<FastlaneDetails>(ref utf8JsonReaderFastlaneDetails, jsonSerializerOptions, out fastlaneDetails);

                    Utf8JsonReader utf8JsonReaderGenericIssuerPaymentMethodDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<GenericIssuerPaymentMethodDetails>(ref utf8JsonReaderGenericIssuerPaymentMethodDetails, jsonSerializerOptions, out genericIssuerPaymentMethodDetails);

                    Utf8JsonReader utf8JsonReaderGooglePayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<GooglePayDetails>(ref utf8JsonReaderGooglePayDetails, jsonSerializerOptions, out googlePayDetails);

                    Utf8JsonReader utf8JsonReaderIdealDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<IdealDetails>(ref utf8JsonReaderIdealDetails, jsonSerializerOptions, out idealDetails);

                    Utf8JsonReader utf8JsonReaderKlarnaDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<KlarnaDetails>(ref utf8JsonReaderKlarnaDetails, jsonSerializerOptions, out klarnaDetails);

                    Utf8JsonReader utf8JsonReaderMasterpassDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<MasterpassDetails>(ref utf8JsonReaderMasterpassDetails, jsonSerializerOptions, out masterpassDetails);

                    Utf8JsonReader utf8JsonReaderMbwayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<MbwayDetails>(ref utf8JsonReaderMbwayDetails, jsonSerializerOptions, out mbwayDetails);

                    Utf8JsonReader utf8JsonReaderMobilePayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<MobilePayDetails>(ref utf8JsonReaderMobilePayDetails, jsonSerializerOptions, out mobilePayDetails);

                    Utf8JsonReader utf8JsonReaderMolPayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<MolPayDetails>(ref utf8JsonReaderMolPayDetails, jsonSerializerOptions, out molPayDetails);

                    Utf8JsonReader utf8JsonReaderOpenInvoiceDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<OpenInvoiceDetails>(ref utf8JsonReaderOpenInvoiceDetails, jsonSerializerOptions, out openInvoiceDetails);

                    Utf8JsonReader utf8JsonReaderPayByBankAISDirectDebitDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<PayByBankAISDirectDebitDetails>(ref utf8JsonReaderPayByBankAISDirectDebitDetails, jsonSerializerOptions, out payByBankAISDirectDebitDetails);

                    Utf8JsonReader utf8JsonReaderPayByBankDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<PayByBankDetails>(ref utf8JsonReaderPayByBankDetails, jsonSerializerOptions, out payByBankDetails);

                    Utf8JsonReader utf8JsonReaderPayPalDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<PayPalDetails>(ref utf8JsonReaderPayPalDetails, jsonSerializerOptions, out payPalDetails);

                    Utf8JsonReader utf8JsonReaderPayPayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<PayPayDetails>(ref utf8JsonReaderPayPayDetails, jsonSerializerOptions, out payPayDetails);

                    Utf8JsonReader utf8JsonReaderPayToDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<PayToDetails>(ref utf8JsonReaderPayToDetails, jsonSerializerOptions, out payToDetails);

                    Utf8JsonReader utf8JsonReaderPayUUpiDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<PayUUpiDetails>(ref utf8JsonReaderPayUUpiDetails, jsonSerializerOptions, out payUUpiDetails);

                    Utf8JsonReader utf8JsonReaderPayWithGoogleDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<PayWithGoogleDetails>(ref utf8JsonReaderPayWithGoogleDetails, jsonSerializerOptions, out payWithGoogleDetails);

                    Utf8JsonReader utf8JsonReaderPaymentDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<PaymentDetails>(ref utf8JsonReaderPaymentDetails, jsonSerializerOptions, out paymentDetails);

                    Utf8JsonReader utf8JsonReaderPixDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<PixDetails>(ref utf8JsonReaderPixDetails, jsonSerializerOptions, out pixDetails);

                    Utf8JsonReader utf8JsonReaderPseDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<PseDetails>(ref utf8JsonReaderPseDetails, jsonSerializerOptions, out pseDetails);

                    Utf8JsonReader utf8JsonReaderRakutenPayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<RakutenPayDetails>(ref utf8JsonReaderRakutenPayDetails, jsonSerializerOptions, out rakutenPayDetails);

                    Utf8JsonReader utf8JsonReaderRatepayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<RatepayDetails>(ref utf8JsonReaderRatepayDetails, jsonSerializerOptions, out ratepayDetails);

                    Utf8JsonReader utf8JsonReaderRivertyDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<RivertyDetails>(ref utf8JsonReaderRivertyDetails, jsonSerializerOptions, out rivertyDetails);

                    Utf8JsonReader utf8JsonReaderSamsungPayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<SamsungPayDetails>(ref utf8JsonReaderSamsungPayDetails, jsonSerializerOptions, out samsungPayDetails);

                    Utf8JsonReader utf8JsonReaderSepaDirectDebitDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<SepaDirectDebitDetails>(ref utf8JsonReaderSepaDirectDebitDetails, jsonSerializerOptions, out sepaDirectDebitDetails);

                    Utf8JsonReader utf8JsonReaderStoredPaymentMethodDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<StoredPaymentMethodDetails>(ref utf8JsonReaderStoredPaymentMethodDetails, jsonSerializerOptions, out storedPaymentMethodDetails);

                    Utf8JsonReader utf8JsonReaderTwintDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<TwintDetails>(ref utf8JsonReaderTwintDetails, jsonSerializerOptions, out twintDetails);

                    Utf8JsonReader utf8JsonReaderUpiCollectDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<UpiCollectDetails>(ref utf8JsonReaderUpiCollectDetails, jsonSerializerOptions, out upiCollectDetails);

                    Utf8JsonReader utf8JsonReaderUpiIntentDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<UpiIntentDetails>(ref utf8JsonReaderUpiIntentDetails, jsonSerializerOptions, out upiIntentDetails);

                    Utf8JsonReader utf8JsonReaderVippsDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<VippsDetails>(ref utf8JsonReaderVippsDetails, jsonSerializerOptions, out vippsDetails);

                    Utf8JsonReader utf8JsonReaderVisaCheckoutDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<VisaCheckoutDetails>(ref utf8JsonReaderVisaCheckoutDetails, jsonSerializerOptions, out visaCheckoutDetails);

                    Utf8JsonReader utf8JsonReaderWeChatPayDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<WeChatPayDetails>(ref utf8JsonReaderWeChatPayDetails, jsonSerializerOptions, out weChatPayDetails);

                    Utf8JsonReader utf8JsonReaderWeChatPayMiniProgramDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<WeChatPayMiniProgramDetails>(ref utf8JsonReaderWeChatPayMiniProgramDetails, jsonSerializerOptions, out weChatPayMiniProgramDetails);

                    Utf8JsonReader utf8JsonReaderZipDetails = utf8JsonReader;
                    ClientUtils.TryDeserialize<ZipDetails>(ref utf8JsonReaderZipDetails, jsonSerializerOptions, out zipDetails);
                }
            }

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        default:
                            break;
                    }
                }
            }

            if (achDetails != null)
                return new CheckoutPaymentMethod(achDetails);

            if (affirmDetails != null)
                return new CheckoutPaymentMethod(affirmDetails);

            if (afterpayDetails != null)
                return new CheckoutPaymentMethod(afterpayDetails);

            if (amazonPayDetails != null)
                return new CheckoutPaymentMethod(amazonPayDetails);

            if (ancvDetails != null)
                return new CheckoutPaymentMethod(ancvDetails);

            if (androidPayDetails != null)
                return new CheckoutPaymentMethod(androidPayDetails);

            if (applePayDetails != null)
                return new CheckoutPaymentMethod(applePayDetails);

            if (bacsDirectDebitDetails != null)
                return new CheckoutPaymentMethod(bacsDirectDebitDetails);

            if (billDeskDetails != null)
                return new CheckoutPaymentMethod(billDeskDetails);

            if (blikDetails != null)
                return new CheckoutPaymentMethod(blikDetails);

            if (cardDetails != null)
                return new CheckoutPaymentMethod(cardDetails);

            if (cashAppDetails != null)
                return new CheckoutPaymentMethod(cashAppDetails);

            if (cellulantDetails != null)
                return new CheckoutPaymentMethod(cellulantDetails);

            if (dokuDetails != null)
                return new CheckoutPaymentMethod(dokuDetails);

            if (dragonpayDetails != null)
                return new CheckoutPaymentMethod(dragonpayDetails);

            if (eBankingFinlandDetails != null)
                return new CheckoutPaymentMethod(eBankingFinlandDetails);

            if (econtextVoucherDetails != null)
                return new CheckoutPaymentMethod(econtextVoucherDetails);

            if (eftDetails != null)
                return new CheckoutPaymentMethod(eftDetails);

            if (fastlaneDetails != null)
                return new CheckoutPaymentMethod(fastlaneDetails);

            if (genericIssuerPaymentMethodDetails != null)
                return new CheckoutPaymentMethod(genericIssuerPaymentMethodDetails);

            if (googlePayDetails != null)
                return new CheckoutPaymentMethod(googlePayDetails);

            if (idealDetails != null)
                return new CheckoutPaymentMethod(idealDetails);

            if (klarnaDetails != null)
                return new CheckoutPaymentMethod(klarnaDetails);

            if (masterpassDetails != null)
                return new CheckoutPaymentMethod(masterpassDetails);

            if (mbwayDetails != null)
                return new CheckoutPaymentMethod(mbwayDetails);

            if (mobilePayDetails != null)
                return new CheckoutPaymentMethod(mobilePayDetails);

            if (molPayDetails != null)
                return new CheckoutPaymentMethod(molPayDetails);

            if (openInvoiceDetails != null)
                return new CheckoutPaymentMethod(openInvoiceDetails);

            if (payByBankAISDirectDebitDetails != null)
                return new CheckoutPaymentMethod(payByBankAISDirectDebitDetails);

            if (payByBankDetails != null)
                return new CheckoutPaymentMethod(payByBankDetails);

            if (payPalDetails != null)
                return new CheckoutPaymentMethod(payPalDetails);

            if (payPayDetails != null)
                return new CheckoutPaymentMethod(payPayDetails);

            if (payToDetails != null)
                return new CheckoutPaymentMethod(payToDetails);

            if (payUUpiDetails != null)
                return new CheckoutPaymentMethod(payUUpiDetails);

            if (payWithGoogleDetails != null)
                return new CheckoutPaymentMethod(payWithGoogleDetails);

            if (paymentDetails != null)
                return new CheckoutPaymentMethod(paymentDetails);

            if (pixDetails != null)
                return new CheckoutPaymentMethod(pixDetails);

            if (pseDetails != null)
                return new CheckoutPaymentMethod(pseDetails);

            if (rakutenPayDetails != null)
                return new CheckoutPaymentMethod(rakutenPayDetails);

            if (ratepayDetails != null)
                return new CheckoutPaymentMethod(ratepayDetails);

            if (rivertyDetails != null)
                return new CheckoutPaymentMethod(rivertyDetails);

            if (samsungPayDetails != null)
                return new CheckoutPaymentMethod(samsungPayDetails);

            if (sepaDirectDebitDetails != null)
                return new CheckoutPaymentMethod(sepaDirectDebitDetails);

            if (storedPaymentMethodDetails != null)
                return new CheckoutPaymentMethod(storedPaymentMethodDetails);

            if (twintDetails != null)
                return new CheckoutPaymentMethod(twintDetails);

            if (upiCollectDetails != null)
                return new CheckoutPaymentMethod(upiCollectDetails);

            if (upiIntentDetails != null)
                return new CheckoutPaymentMethod(upiIntentDetails);

            if (vippsDetails != null)
                return new CheckoutPaymentMethod(vippsDetails);

            if (visaCheckoutDetails != null)
                return new CheckoutPaymentMethod(visaCheckoutDetails);

            if (weChatPayDetails != null)
                return new CheckoutPaymentMethod(weChatPayDetails);

            if (weChatPayMiniProgramDetails != null)
                return new CheckoutPaymentMethod(weChatPayMiniProgramDetails);

            if (zipDetails != null)
                return new CheckoutPaymentMethod(zipDetails);

            throw new JsonException();
        }

        /// <summary>
        /// Serializes a <see cref="CheckoutPaymentMethod" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="checkoutPaymentMethod"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, CheckoutPaymentMethod checkoutPaymentMethod, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, checkoutPaymentMethod, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="CheckoutPaymentMethod" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="checkoutPaymentMethod"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, CheckoutPaymentMethod checkoutPaymentMethod, JsonSerializerOptions jsonSerializerOptions)
        {

        }
    }
}

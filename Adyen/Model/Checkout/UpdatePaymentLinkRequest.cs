/*
* Adyen Checkout API
*
*
* The version of the OpenAPI document: 71
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.Checkout
{
    /// <summary>
    /// UpdatePaymentLinkRequest
    /// </summary>
    [DataContract(Name = "UpdatePaymentLinkRequest")]
    public partial class UpdatePaymentLinkRequest : IEquatable<UpdatePaymentLinkRequest>, IValidatableObject
    {
        /// <summary>
        /// Status of the payment link. Possible values: * **expired**
        /// </summary>
        /// <value>Status of the payment link. Possible values: * **expired**</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum Expired for value: expired
            /// </summary>
            [EnumMember(Value = "expired")]
            Expired = 1

        }


        /// <summary>
        /// Status of the payment link. Possible values: * **expired**
        /// </summary>
        /// <value>Status of the payment link. Possible values: * **expired**</value>
        [DataMember(Name = "status", IsRequired = false, EmitDefaultValue = false)]
        public StatusEnum Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdatePaymentLinkRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdatePaymentLinkRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdatePaymentLinkRequest" /> class.
        /// </summary>
        /// <param name="status">Status of the payment link. Possible values: * **expired** (required).</param>
        public UpdatePaymentLinkRequest(StatusEnum status = default(StatusEnum))
        {
            this.Status = status;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdatePaymentLinkRequest {\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdatePaymentLinkRequest);
        }

        /// <summary>
        /// Returns true if UpdatePaymentLinkRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdatePaymentLinkRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdatePaymentLinkRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Status.GetHashCode();
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

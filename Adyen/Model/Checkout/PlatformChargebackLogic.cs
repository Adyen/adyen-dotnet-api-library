/*
* Adyen Checkout API
*
*
* The version of the OpenAPI document: 70
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.Checkout
{
    /// <summary>
    /// PlatformChargebackLogic
    /// </summary>
    [DataContract(Name = "PlatformChargebackLogic")]
    public partial class PlatformChargebackLogic : IEquatable<PlatformChargebackLogic>, IValidatableObject
    {
        /// <summary>
        /// Defines Behavior
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum BehaviorEnum
        {
            /// <summary>
            /// Enum DeductAccordingToSplitRatio for value: deductAccordingToSplitRatio
            /// </summary>
            [EnumMember(Value = "deductAccordingToSplitRatio")]
            DeductAccordingToSplitRatio = 1,

            /// <summary>
            /// Enum DeductFromLiableAccount for value: deductFromLiableAccount
            /// </summary>
            [EnumMember(Value = "deductFromLiableAccount")]
            DeductFromLiableAccount = 2,

            /// <summary>
            /// Enum DeductFromOneBalanceAccount for value: deductFromOneBalanceAccount
            /// </summary>
            [EnumMember(Value = "deductFromOneBalanceAccount")]
            DeductFromOneBalanceAccount = 3

        }


        /// <summary>
        /// Gets or Sets Behavior
        /// </summary>
        [DataMember(Name = "behavior", EmitDefaultValue = false)]
        public BehaviorEnum? Behavior { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PlatformChargebackLogic" /> class.
        /// </summary>
        /// <param name="behavior">behavior.</param>
        /// <param name="costAllocationAccount">costAllocationAccount.</param>
        /// <param name="targetAccount">targetAccount.</param>
        public PlatformChargebackLogic(BehaviorEnum? behavior = default(BehaviorEnum?), string costAllocationAccount = default(string), string targetAccount = default(string))
        {
            this.Behavior = behavior;
            this.CostAllocationAccount = costAllocationAccount;
            this.TargetAccount = targetAccount;
        }

        /// <summary>
        /// Gets or Sets CostAllocationAccount
        /// </summary>
        [DataMember(Name = "costAllocationAccount", EmitDefaultValue = false)]
        public string CostAllocationAccount { get; set; }

        /// <summary>
        /// Gets or Sets TargetAccount
        /// </summary>
        [DataMember(Name = "targetAccount", EmitDefaultValue = false)]
        public string TargetAccount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PlatformChargebackLogic {\n");
            sb.Append("  Behavior: ").Append(Behavior).Append("\n");
            sb.Append("  CostAllocationAccount: ").Append(CostAllocationAccount).Append("\n");
            sb.Append("  TargetAccount: ").Append(TargetAccount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PlatformChargebackLogic);
        }

        /// <summary>
        /// Returns true if PlatformChargebackLogic instances are equal
        /// </summary>
        /// <param name="input">Instance of PlatformChargebackLogic to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PlatformChargebackLogic input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Behavior == input.Behavior ||
                    this.Behavior.Equals(input.Behavior)
                ) && 
                (
                    this.CostAllocationAccount == input.CostAllocationAccount ||
                    (this.CostAllocationAccount != null &&
                    this.CostAllocationAccount.Equals(input.CostAllocationAccount))
                ) && 
                (
                    this.TargetAccount == input.TargetAccount ||
                    (this.TargetAccount != null &&
                    this.TargetAccount.Equals(input.TargetAccount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Behavior.GetHashCode();
                if (this.CostAllocationAccount != null)
                {
                    hashCode = (hashCode * 59) + this.CostAllocationAccount.GetHashCode();
                }
                if (this.TargetAccount != null)
                {
                    hashCode = (hashCode * 59) + this.TargetAccount.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

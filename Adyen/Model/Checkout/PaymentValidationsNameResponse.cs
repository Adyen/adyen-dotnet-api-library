/*
* Adyen Checkout API
*
*
* The version of the OpenAPI document: 71
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.Checkout
{
    /// <summary>
    /// PaymentValidationsNameResponse
    /// </summary>
    [DataContract(Name = "PaymentValidationsNameResponse")]
    public partial class PaymentValidationsNameResponse : IEquatable<PaymentValidationsNameResponse>, IValidatableObject
    {
        /// <summary>
        /// Name Validation status result
        /// </summary>
        /// <value>Name Validation status result</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum NotPerformed for value: notPerformed
            /// </summary>
            [EnumMember(Value = "notPerformed")]
            NotPerformed = 1,

            /// <summary>
            /// Enum NotSupported for value: notSupported
            /// </summary>
            [EnumMember(Value = "notSupported")]
            NotSupported = 2,

            /// <summary>
            /// Enum Performed for value: performed
            /// </summary>
            [EnumMember(Value = "performed")]
            Performed = 3

        }


        /// <summary>
        /// Name Validation status result
        /// </summary>
        /// <value>Name Validation status result</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public StatusEnum? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentValidationsNameResponse" /> class.
        /// </summary>
        /// <param name="rawResponse">rawResponse.</param>
        /// <param name="result">result.</param>
        /// <param name="status">Name Validation status result.</param>
        public PaymentValidationsNameResponse(PaymentValidationsNameResultRawResponse rawResponse = default(PaymentValidationsNameResultRawResponse), PaymentValidationsNameResultResponse result = default(PaymentValidationsNameResultResponse), StatusEnum? status = default(StatusEnum?))
        {
            this.RawResponse = rawResponse;
            this.Result = result;
            this.Status = status;
        }

        /// <summary>
        /// Gets or Sets RawResponse
        /// </summary>
        [DataMember(Name = "rawResponse", EmitDefaultValue = false)]
        public PaymentValidationsNameResultRawResponse RawResponse { get; set; }

        /// <summary>
        /// Gets or Sets Result
        /// </summary>
        [DataMember(Name = "result", EmitDefaultValue = false)]
        public PaymentValidationsNameResultResponse Result { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PaymentValidationsNameResponse {\n");
            sb.Append("  RawResponse: ").Append(RawResponse).Append("\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentValidationsNameResponse);
        }

        /// <summary>
        /// Returns true if PaymentValidationsNameResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentValidationsNameResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentValidationsNameResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.RawResponse == input.RawResponse ||
                    (this.RawResponse != null &&
                    this.RawResponse.Equals(input.RawResponse))
                ) && 
                (
                    this.Result == input.Result ||
                    (this.Result != null &&
                    this.Result.Equals(input.Result))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RawResponse != null)
                {
                    hashCode = (hashCode * 59) + this.RawResponse.GetHashCode();
                }
                if (this.Result != null)
                {
                    hashCode = (hashCode * 59) + this.Result.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Status.GetHashCode();
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

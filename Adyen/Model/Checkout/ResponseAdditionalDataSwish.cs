/*
* Adyen Checkout API
*
*
* The version of the OpenAPI document: 71
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.Checkout
{
    /// <summary>
    /// ResponseAdditionalDataSwish
    /// </summary>
    [DataContract(Name = "ResponseAdditionalDataSwish")]
    public partial class ResponseAdditionalDataSwish : IEquatable<ResponseAdditionalDataSwish>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ResponseAdditionalDataSwish" /> class.
        /// </summary>
        /// <param name="swishPayerAlias">A Swish shopper&#39;s telephone number..</param>
        public ResponseAdditionalDataSwish(string swishPayerAlias = default(string))
        {
            this.SwishPayerAlias = swishPayerAlias;
        }

        /// <summary>
        /// A Swish shopper&#39;s telephone number.
        /// </summary>
        /// <value>A Swish shopper&#39;s telephone number.</value>
        [DataMember(Name = "swish.payerAlias", EmitDefaultValue = false)]
        public string SwishPayerAlias { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ResponseAdditionalDataSwish {\n");
            sb.Append("  SwishPayerAlias: ").Append(SwishPayerAlias).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ResponseAdditionalDataSwish);
        }

        /// <summary>
        /// Returns true if ResponseAdditionalDataSwish instances are equal
        /// </summary>
        /// <param name="input">Instance of ResponseAdditionalDataSwish to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ResponseAdditionalDataSwish input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.SwishPayerAlias == input.SwishPayerAlias ||
                    (this.SwishPayerAlias != null &&
                    this.SwishPayerAlias.Equals(input.SwishPayerAlias))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SwishPayerAlias != null)
                {
                    hashCode = (hashCode * 59) + this.SwishPayerAlias.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

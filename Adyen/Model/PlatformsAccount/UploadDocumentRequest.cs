/*
* Account API
*
*
* The version of the OpenAPI document: 6
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.PlatformsAccount
{
    /// <summary>
    /// UploadDocumentRequest
    /// </summary>
    [DataContract(Name = "UploadDocumentRequest")]
    public partial class UploadDocumentRequest : IEquatable<UploadDocumentRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UploadDocumentRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UploadDocumentRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UploadDocumentRequest" /> class.
        /// </summary>
        /// <param name="documentContent">The content of the document, in Base64-encoded string format.  To learn about document requirements, refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks). (required).</param>
        /// <param name="documentDetail">documentDetail (required).</param>
        public UploadDocumentRequest(byte[] documentContent = default(byte[]), DocumentDetail documentDetail = default(DocumentDetail))
        {
            this.DocumentContent = documentContent;
            this.DocumentDetail = documentDetail;
        }

        /// <summary>
        /// The content of the document, in Base64-encoded string format.  To learn about document requirements, refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks).
        /// </summary>
        /// <value>The content of the document, in Base64-encoded string format.  To learn about document requirements, refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks).</value>
        [DataMember(Name = "documentContent", IsRequired = false, EmitDefaultValue = false)]
        public byte[] DocumentContent { get; set; }

        /// <summary>
        /// Gets or Sets DocumentDetail
        /// </summary>
        [DataMember(Name = "documentDetail", IsRequired = false, EmitDefaultValue = false)]
        public DocumentDetail DocumentDetail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UploadDocumentRequest {\n");
            sb.Append("  DocumentContent: ").Append(DocumentContent).Append("\n");
            sb.Append("  DocumentDetail: ").Append(DocumentDetail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UploadDocumentRequest);
        }

        /// <summary>
        /// Returns true if UploadDocumentRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of UploadDocumentRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UploadDocumentRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.DocumentContent == input.DocumentContent ||
                    (this.DocumentContent != null &&
                    this.DocumentContent.Equals(input.DocumentContent))
                ) && 
                (
                    this.DocumentDetail == input.DocumentDetail ||
                    (this.DocumentDetail != null &&
                    this.DocumentDetail.Equals(input.DocumentDetail))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DocumentContent != null)
                {
                    hashCode = (hashCode * 59) + this.DocumentContent.GetHashCode();
                }
                if (this.DocumentDetail != null)
                {
                    hashCode = (hashCode * 59) + this.DocumentDetail.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

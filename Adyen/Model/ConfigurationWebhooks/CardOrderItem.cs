/*
* Configuration webhooks
*
*
* The version of the OpenAPI document: 2
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.ConfigurationWebhooks
{
    /// <summary>
    /// CardOrderItem
    /// </summary>
    [DataContract(Name = "CardOrderItem")]
    public partial class CardOrderItem : IEquatable<CardOrderItem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CardOrderItem" /> class.
        /// </summary>
        /// <param name="balancePlatform">The unique identifier of the balance platform..</param>
        /// <param name="card">card.</param>
        /// <param name="cardOrderItemId">The unique identifier of the card order item..</param>
        /// <param name="creationDate">The date and time when the event was triggered, in ISO 8601 extended format. For example, **2020-12-18T10:15:30+01:00**..</param>
        /// <param name="id">The ID of the resource..</param>
        /// <param name="paymentInstrumentId">The unique identifier of the payment instrument related to the card order item..</param>
        /// <param name="pin">pin.</param>
        /// <param name="shippingMethod">The shipping method used to deliver the card or the PIN..</param>
        public CardOrderItem(string balancePlatform = default(string), CardOrderItemDeliveryStatus card = default(CardOrderItemDeliveryStatus), string cardOrderItemId = default(string), DateTime creationDate = default(DateTime), string id = default(string), string paymentInstrumentId = default(string), CardOrderItemDeliveryStatus pin = default(CardOrderItemDeliveryStatus), string shippingMethod = default(string))
        {
            this.BalancePlatform = balancePlatform;
            this.Card = card;
            this.CardOrderItemId = cardOrderItemId;
            this.CreationDate = creationDate;
            this.Id = id;
            this.PaymentInstrumentId = paymentInstrumentId;
            this.Pin = pin;
            this.ShippingMethod = shippingMethod;
        }

        /// <summary>
        /// The unique identifier of the balance platform.
        /// </summary>
        /// <value>The unique identifier of the balance platform.</value>
        [DataMember(Name = "balancePlatform", EmitDefaultValue = false)]
        public string BalancePlatform { get; set; }

        /// <summary>
        /// Gets or Sets Card
        /// </summary>
        [DataMember(Name = "card", EmitDefaultValue = false)]
        public CardOrderItemDeliveryStatus Card { get; set; }

        /// <summary>
        /// The unique identifier of the card order item.
        /// </summary>
        /// <value>The unique identifier of the card order item.</value>
        [DataMember(Name = "cardOrderItemId", EmitDefaultValue = false)]
        public string CardOrderItemId { get; set; }

        /// <summary>
        /// The date and time when the event was triggered, in ISO 8601 extended format. For example, **2020-12-18T10:15:30+01:00**.
        /// </summary>
        /// <value>The date and time when the event was triggered, in ISO 8601 extended format. For example, **2020-12-18T10:15:30+01:00**.</value>
        [DataMember(Name = "creationDate", EmitDefaultValue = false)]
        public DateTime CreationDate { get; set; }

        /// <summary>
        /// The ID of the resource.
        /// </summary>
        /// <value>The ID of the resource.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// The unique identifier of the payment instrument related to the card order item.
        /// </summary>
        /// <value>The unique identifier of the payment instrument related to the card order item.</value>
        [DataMember(Name = "paymentInstrumentId", EmitDefaultValue = false)]
        public string PaymentInstrumentId { get; set; }

        /// <summary>
        /// Gets or Sets Pin
        /// </summary>
        [DataMember(Name = "pin", EmitDefaultValue = false)]
        public CardOrderItemDeliveryStatus Pin { get; set; }

        /// <summary>
        /// The shipping method used to deliver the card or the PIN.
        /// </summary>
        /// <value>The shipping method used to deliver the card or the PIN.</value>
        [DataMember(Name = "shippingMethod", EmitDefaultValue = false)]
        public string ShippingMethod { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CardOrderItem {\n");
            sb.Append("  BalancePlatform: ").Append(BalancePlatform).Append("\n");
            sb.Append("  Card: ").Append(Card).Append("\n");
            sb.Append("  CardOrderItemId: ").Append(CardOrderItemId).Append("\n");
            sb.Append("  CreationDate: ").Append(CreationDate).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  PaymentInstrumentId: ").Append(PaymentInstrumentId).Append("\n");
            sb.Append("  Pin: ").Append(Pin).Append("\n");
            sb.Append("  ShippingMethod: ").Append(ShippingMethod).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CardOrderItem);
        }

        /// <summary>
        /// Returns true if CardOrderItem instances are equal
        /// </summary>
        /// <param name="input">Instance of CardOrderItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CardOrderItem input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BalancePlatform == input.BalancePlatform ||
                    (this.BalancePlatform != null &&
                    this.BalancePlatform.Equals(input.BalancePlatform))
                ) && 
                (
                    this.Card == input.Card ||
                    (this.Card != null &&
                    this.Card.Equals(input.Card))
                ) && 
                (
                    this.CardOrderItemId == input.CardOrderItemId ||
                    (this.CardOrderItemId != null &&
                    this.CardOrderItemId.Equals(input.CardOrderItemId))
                ) && 
                (
                    this.CreationDate == input.CreationDate ||
                    (this.CreationDate != null &&
                    this.CreationDate.Equals(input.CreationDate))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.PaymentInstrumentId == input.PaymentInstrumentId ||
                    (this.PaymentInstrumentId != null &&
                    this.PaymentInstrumentId.Equals(input.PaymentInstrumentId))
                ) && 
                (
                    this.Pin == input.Pin ||
                    (this.Pin != null &&
                    this.Pin.Equals(input.Pin))
                ) && 
                (
                    this.ShippingMethod == input.ShippingMethod ||
                    (this.ShippingMethod != null &&
                    this.ShippingMethod.Equals(input.ShippingMethod))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BalancePlatform != null)
                {
                    hashCode = (hashCode * 59) + this.BalancePlatform.GetHashCode();
                }
                if (this.Card != null)
                {
                    hashCode = (hashCode * 59) + this.Card.GetHashCode();
                }
                if (this.CardOrderItemId != null)
                {
                    hashCode = (hashCode * 59) + this.CardOrderItemId.GetHashCode();
                }
                if (this.CreationDate != null)
                {
                    hashCode = (hashCode * 59) + this.CreationDate.GetHashCode();
                }
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.PaymentInstrumentId != null)
                {
                    hashCode = (hashCode * 59) + this.PaymentInstrumentId.GetHashCode();
                }
                if (this.Pin != null)
                {
                    hashCode = (hashCode * 59) + this.Pin.GetHashCode();
                }
                if (this.ShippingMethod != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingMethod.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

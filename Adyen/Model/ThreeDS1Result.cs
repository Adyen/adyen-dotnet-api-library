#region License
// /*
//  *                       ######
//  *                       ######
//  * ############    ####( ######  #####. ######  ############   ############
//  * #############  #####( ######  #####. ######  #############  #############
//  *        ######  #####( ######  #####. ######  #####  ######  #####  ######
//  * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
//  * ###### ######  #####( ######  #####. ######  #####          #####  ######
//  * #############  #############  #############  #############  #####  ######
//  *  ############   ############  #############   ############  #####  ######
//  *                                      ######
//  *                               #############
//  *                               ############
//  *
//  * Adyen Dotnet API Library
//  *
//  * Copyright (c) 2019 Adyen B.V.
//  * This file is open source and available under the MIT license.
//  * See the LICENSE file for more info.
//  */
#endregion
using System.Text;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Adyen.Model
{

    /// <summary>
    /// 
    /// </summary>
    [DataContract]
  public class ThreeDS1Result {
    /// <summary>
    /// The cardholder authentication value (base64 encoded).
    /// </summary>
    /// <value>The cardholder authentication value (base64 encoded).</value>
    [DataMember(Name="cavv", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "cavv")]
    public string Cavv { get; set; }

    /// <summary>
    /// The CAVV algorithm used.
    /// </summary>
    /// <value>The CAVV algorithm used.</value>
    [DataMember(Name="cavvAlgorithm", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "cavvAlgorithm")]
    public string CavvAlgorithm { get; set; }

    /// <summary>
    /// 3D Secure Electronic Commerce Indicator (ECI).
    /// </summary>
    /// <value>3D Secure Electronic Commerce Indicator (ECI).</value>
    [DataMember(Name="eci", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "eci")]
    public string Eci { get; set; }

    /// <summary>
    /// The authentication response from the ACS.
    /// </summary>
    /// <value>The authentication response from the ACS.</value>
    [DataMember(Name="threeDAuthenticatedResponse", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "threeDAuthenticatedResponse")]
    public string ThreeDAuthenticatedResponse { get; set; }

    /// <summary>
    /// Whether 3D Secure was offered or not.
    /// </summary>
    /// <value>Whether 3D Secure was offered or not.</value>
    [DataMember(Name="threeDOfferedResponse", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "threeDOfferedResponse")]
    public string ThreeDOfferedResponse { get; set; }

    /// <summary>
    /// A unique transaction identifier generated by the MPI on behalf of the merchant to identify the 3D Secure transaction, in `Base64` encoding.
    /// </summary>
    /// <value>A unique transaction identifier generated by the MPI on behalf of the merchant to identify the 3D Secure transaction, in `Base64` encoding.</value>
    [DataMember(Name="xid", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "xid")]
    public string Xid { get; set; }


    /// <summary>
    /// Get the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()  {
      var sb = new StringBuilder();
      sb.Append("class ThreeDS1Result {\n");
      sb.Append("  Cavv: ").Append(Cavv).Append("\n");
      sb.Append("  CavvAlgorithm: ").Append(CavvAlgorithm).Append("\n");
      sb.Append("  Eci: ").Append(Eci).Append("\n");
      sb.Append("  ThreeDAuthenticatedResponse: ").Append(ThreeDAuthenticatedResponse).Append("\n");
      sb.Append("  ThreeDOfferedResponse: ").Append(ThreeDOfferedResponse).Append("\n");
      sb.Append("  Xid: ").Append(Xid).Append("\n");
      sb.Append("}\n");
      return sb.ToString();
    }

    /// <summary>
    /// Get the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public string ToJson() {
      return JsonConvert.SerializeObject(this, Formatting.Indented);
    }

}
}

/*
* Account API
*
*
* The version of the OpenAPI document: 6
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Adyen.ApiSerialization.OpenAPIDateConverter;

namespace Adyen.Model.PlatformsAccount
{
    /// <summary>
    /// MigratedStores
    /// </summary>
    [DataContract(Name = "MigratedStores")]
    public partial class MigratedStores : IEquatable<MigratedStores>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MigratedStores" /> class.
        /// </summary>
        /// <param name="businessLineId">The unique identifier of the business line associated with the migrated account holder in the balance platform..</param>
        /// <param name="storeCode">The unique identifier of the store associated with the migrated account holder in the classic integration..</param>
        /// <param name="storeId">The unique identifier of the store associated with the migrated account holder in the balance platform..</param>
        /// <param name="storeReference">Your reference for the store in the classic integration. The [Customer Area](https://ca-test.adyen.com/) uses this value for the store description..</param>
        public MigratedStores(string businessLineId = default(string), string storeCode = default(string), string storeId = default(string), string storeReference = default(string))
        {
            this.BusinessLineId = businessLineId;
            this.StoreCode = storeCode;
            this.StoreId = storeId;
            this.StoreReference = storeReference;
        }

        /// <summary>
        /// The unique identifier of the business line associated with the migrated account holder in the balance platform.
        /// </summary>
        /// <value>The unique identifier of the business line associated with the migrated account holder in the balance platform.</value>
        [DataMember(Name = "businessLineId", EmitDefaultValue = false)]
        public string BusinessLineId { get; set; }

        /// <summary>
        /// The unique identifier of the store associated with the migrated account holder in the classic integration.
        /// </summary>
        /// <value>The unique identifier of the store associated with the migrated account holder in the classic integration.</value>
        [DataMember(Name = "storeCode", EmitDefaultValue = false)]
        public string StoreCode { get; set; }

        /// <summary>
        /// The unique identifier of the store associated with the migrated account holder in the balance platform.
        /// </summary>
        /// <value>The unique identifier of the store associated with the migrated account holder in the balance platform.</value>
        [DataMember(Name = "storeId", EmitDefaultValue = false)]
        public string StoreId { get; set; }

        /// <summary>
        /// Your reference for the store in the classic integration. The [Customer Area](https://ca-test.adyen.com/) uses this value for the store description.
        /// </summary>
        /// <value>Your reference for the store in the classic integration. The [Customer Area](https://ca-test.adyen.com/) uses this value for the store description.</value>
        [DataMember(Name = "storeReference", EmitDefaultValue = false)]
        public string StoreReference { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MigratedStores {\n");
            sb.Append("  BusinessLineId: ").Append(BusinessLineId).Append("\n");
            sb.Append("  StoreCode: ").Append(StoreCode).Append("\n");
            sb.Append("  StoreId: ").Append(StoreId).Append("\n");
            sb.Append("  StoreReference: ").Append(StoreReference).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MigratedStores);
        }

        /// <summary>
        /// Returns true if MigratedStores instances are equal
        /// </summary>
        /// <param name="input">Instance of MigratedStores to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MigratedStores input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.BusinessLineId == input.BusinessLineId ||
                    (this.BusinessLineId != null &&
                    this.BusinessLineId.Equals(input.BusinessLineId))
                ) && 
                (
                    this.StoreCode == input.StoreCode ||
                    (this.StoreCode != null &&
                    this.StoreCode.Equals(input.StoreCode))
                ) && 
                (
                    this.StoreId == input.StoreId ||
                    (this.StoreId != null &&
                    this.StoreId.Equals(input.StoreId))
                ) && 
                (
                    this.StoreReference == input.StoreReference ||
                    (this.StoreReference != null &&
                    this.StoreReference.Equals(input.StoreReference))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BusinessLineId != null)
                {
                    hashCode = (hashCode * 59) + this.BusinessLineId.GetHashCode();
                }
                if (this.StoreCode != null)
                {
                    hashCode = (hashCode * 59) + this.StoreCode.GetHashCode();
                }
                if (this.StoreId != null)
                {
                    hashCode = (hashCode * 59) + this.StoreId.GetHashCode();
                }
                if (this.StoreReference != null)
                {
                    hashCode = (hashCode * 59) + this.StoreReference.GetHashCode();
                }
                return hashCode;
            }
        }
        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

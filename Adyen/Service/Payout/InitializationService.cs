/*
* Adyen Payout API
*
*
* The version of the OpenAPI document: 68
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Adyen.Constants;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.Payout;
using Newtonsoft.Json;

namespace Adyen.Service.Payout
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class InitializationService : AbstractService
    {
        private readonly string _baseUrl;
        
        public InitializationService(Client client) : base(client)
        {
            _baseUrl = client.Config.Endpoint + "/pal/servlet/Payout/" + ClientConfig.PayoutApiVersion;
        }
    
        /// <summary>
        /// Store payout details
        /// </summary>
        /// <param name="storeDetailRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>StoreDetailResponse</returns>
        public StoreDetailResponse StorePayoutDetails(StoreDetailRequest storeDetailRequest, RequestOptions requestOptions = default)
        {
            return StorePayoutDetailsAsync(storeDetailRequest, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Store payout details
        /// </summary>
        /// <param name="storeDetailRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of StoreDetailResponse</returns>
        public async Task<StoreDetailResponse> StorePayoutDetailsAsync(StoreDetailRequest storeDetailRequest, RequestOptions requestOptions = default)
        {
            var endpoint = _baseUrl + "/storeDetail";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<StoreDetailResponse>(storeDetailRequest.ToJson(), requestOptions, new HttpMethod("POST"));
        }

        /// <summary>
        /// Store details and submit a payout
        /// </summary>
        /// <param name="storeDetailAndSubmitRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>StoreDetailAndSubmitResponse</returns>
        public StoreDetailAndSubmitResponse StoreDetailsAndSubmitPayout(StoreDetailAndSubmitRequest storeDetailAndSubmitRequest, RequestOptions requestOptions = default)
        {
            return StoreDetailsAndSubmitPayoutAsync(storeDetailAndSubmitRequest, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Store details and submit a payout
        /// </summary>
        /// <param name="storeDetailAndSubmitRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of StoreDetailAndSubmitResponse</returns>
        public async Task<StoreDetailAndSubmitResponse> StoreDetailsAndSubmitPayoutAsync(StoreDetailAndSubmitRequest storeDetailAndSubmitRequest, RequestOptions requestOptions = default)
        {
            var endpoint = _baseUrl + "/storeDetailAndSubmitThirdParty";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<StoreDetailAndSubmitResponse>(storeDetailAndSubmitRequest.ToJson(), requestOptions, new HttpMethod("POST"));
        }

        /// <summary>
        /// Submit a payout
        /// </summary>
        /// <param name="submitRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>SubmitResponse</returns>
        public SubmitResponse SubmitPayout(SubmitRequest submitRequest, RequestOptions requestOptions = default)
        {
            return SubmitPayoutAsync(submitRequest, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Submit a payout
        /// </summary>
        /// <param name="submitRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of SubmitResponse</returns>
        public async Task<SubmitResponse> SubmitPayoutAsync(SubmitRequest submitRequest, RequestOptions requestOptions = default)
        {
            var endpoint = _baseUrl + "/submitThirdParty";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<SubmitResponse>(submitRequest.ToJson(), requestOptions, new HttpMethod("POST"));
        }

    }
}

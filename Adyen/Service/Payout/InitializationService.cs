/*
* Adyen Payout API
*
*
* The version of the OpenAPI document: 68
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using Adyen.Constants;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.Payout;

namespace Adyen.Service.Payout
{
    /// <summary>
    /// InitializationService Interface
    /// </summary>
    public interface IInitializationService
    {
        /// <summary>
        /// Store payout details
        /// </summary>
        /// <param name="storeDetailRequest"><see cref="StoreDetailRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <returns><see cref="StoreDetailResponse"/>.</returns>
        StoreDetailResponse StoreDetail(StoreDetailRequest storeDetailRequest, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Store payout details
        /// </summary>
        /// <param name="storeDetailRequest"><see cref="StoreDetailRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        /// <returns>Task of <see cref="StoreDetailResponse"/>.</returns>
        Task<StoreDetailResponse> StoreDetailAsync(StoreDetailRequest storeDetailRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
        /// <summary>
        /// Store details and submit a payout
        /// </summary>
        /// <param name="storeDetailAndSubmitRequest"><see cref="StoreDetailAndSubmitRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <returns><see cref="StoreDetailAndSubmitResponse"/>.</returns>
        StoreDetailAndSubmitResponse StoreDetailAndSubmitThirdParty(StoreDetailAndSubmitRequest storeDetailAndSubmitRequest, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Store details and submit a payout
        /// </summary>
        /// <param name="storeDetailAndSubmitRequest"><see cref="StoreDetailAndSubmitRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        /// <returns>Task of <see cref="StoreDetailAndSubmitResponse"/>.</returns>
        Task<StoreDetailAndSubmitResponse> StoreDetailAndSubmitThirdPartyAsync(StoreDetailAndSubmitRequest storeDetailAndSubmitRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
        /// <summary>
        /// Submit a payout
        /// </summary>
        /// <param name="submitRequest"><see cref="SubmitRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <returns><see cref="SubmitResponse"/>.</returns>
        SubmitResponse SubmitThirdParty(SubmitRequest submitRequest, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Submit a payout
        /// </summary>
        /// <param name="submitRequest"><see cref="SubmitRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        /// <returns>Task of <see cref="SubmitResponse"/>.</returns>
        Task<SubmitResponse> SubmitThirdPartyAsync(SubmitRequest submitRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
    }
    
    /// <summary>
    /// Represents a collection of functions to interact with the InitializationService API endpoints
    /// </summary>
    public class InitializationService : AbstractService, IInitializationService
    {
        private readonly string _baseUrl;
        
        public InitializationService(Client client) : base(client)
        {
            _baseUrl = CreateBaseUrl("https://pal-test.adyen.com/pal/servlet/Payout/v68");
        }
        
        public StoreDetailResponse StoreDetail(StoreDetailRequest storeDetailRequest, RequestOptions requestOptions = default)
        {
            return StoreDetailAsync(storeDetailRequest, requestOptions).ConfigureAwait(false).GetAwaiter().GetResult();
        }

        public async Task<StoreDetailResponse> StoreDetailAsync(StoreDetailRequest storeDetailRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + "/storeDetail";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<StoreDetailResponse>(storeDetailRequest.ToJson(), requestOptions, new HttpMethod("POST"), cancellationToken).ConfigureAwait(false);
        }
        
        public StoreDetailAndSubmitResponse StoreDetailAndSubmitThirdParty(StoreDetailAndSubmitRequest storeDetailAndSubmitRequest, RequestOptions requestOptions = default)
        {
            return StoreDetailAndSubmitThirdPartyAsync(storeDetailAndSubmitRequest, requestOptions).ConfigureAwait(false).GetAwaiter().GetResult();
        }

        public async Task<StoreDetailAndSubmitResponse> StoreDetailAndSubmitThirdPartyAsync(StoreDetailAndSubmitRequest storeDetailAndSubmitRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + "/storeDetailAndSubmitThirdParty";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<StoreDetailAndSubmitResponse>(storeDetailAndSubmitRequest.ToJson(), requestOptions, new HttpMethod("POST"), cancellationToken).ConfigureAwait(false);
        }
        
        public SubmitResponse SubmitThirdParty(SubmitRequest submitRequest, RequestOptions requestOptions = default)
        {
            return SubmitThirdPartyAsync(submitRequest, requestOptions).ConfigureAwait(false).GetAwaiter().GetResult();
        }

        public async Task<SubmitResponse> SubmitThirdPartyAsync(SubmitRequest submitRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + "/submitThirdParty";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<SubmitResponse>(submitRequest.ToJson(), requestOptions, new HttpMethod("POST"), cancellationToken).ConfigureAwait(false);
        }
    }
}
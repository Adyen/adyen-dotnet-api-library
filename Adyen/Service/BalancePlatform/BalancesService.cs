/*
* Configuration API
*
*
* The version of the OpenAPI document: 2
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using Adyen.Model;
using Adyen.Model.BalancePlatform;

namespace Adyen.Service.BalancePlatform
{
    /// <summary>
    /// BalancesService Interface
    /// </summary>
    public interface IBalancesService
    {
        /// <summary>
        /// Get webhook settings
        /// </summary>
        /// <param name="balancePlatformId"><see cref="string"/> - The unique identifier of the balance platform.</param>
        /// <param name="webhookId"><see cref="string"/> - The unique identifier of the balance webhook.</param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <returns><see cref="List<WebhookSettingResponse>"/>.</returns>
        Model.BalancePlatform.List<WebhookSettingResponse> (string balancePlatformId, string webhookId, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Get webhook settings
        /// </summary>
        /// <param name="balancePlatformId"><see cref="string"/> - The unique identifier of the balance platform.</param>
        /// <param name="webhookId"><see cref="string"/> - The unique identifier of the balance webhook.</param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        /// <returns>Task of <see cref="List<WebhookSettingResponse>"/>.</returns>
        Task<Model.BalancePlatform.List<WebhookSettingResponse>> Async(string balancePlatformId, string webhookId, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
        /// <summary>
        /// Create a balance webhook setting
        /// </summary>
        /// <param name="balancePlatformId"><see cref="string"/> - The unique identifier of the balance platform.</param>
        /// <param name="webhookId"><see cref="string"/> - The unique identifier of the balance webhook.</param>
        /// <param name="balanceWebhookSettingsRequest"><see cref="BalanceWebhookSettingsRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <returns><see cref="WebhookSettingResponse"/>.</returns>
        Model.BalancePlatform.WebhookSettingResponse (string balancePlatformId, string webhookId, BalanceWebhookSettingsRequest balanceWebhookSettingsRequest, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Create a balance webhook setting
        /// </summary>
        /// <param name="balancePlatformId"><see cref="string"/> - The unique identifier of the balance platform.</param>
        /// <param name="webhookId"><see cref="string"/> - The unique identifier of the balance webhook.</param>
        /// <param name="balanceWebhookSettingsRequest"><see cref="BalanceWebhookSettingsRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        /// <returns>Task of <see cref="WebhookSettingResponse"/>.</returns>
        Task<Model.BalancePlatform.WebhookSettingResponse> Async(string balancePlatformId, string webhookId, BalanceWebhookSettingsRequest balanceWebhookSettingsRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
        /// <summary>
        /// Delete a webhook setting
        /// </summary>
        /// <param name="balancePlatformId"><see cref="string"/> - The unique identifier of the balance platform.</param>
        /// <param name="webhookId"><see cref="string"/> - The unique identifier of the balance webhook.</param>
        /// <param name="settingId"><see cref="string"/> - The unique identifier of the balance webhook setting.</param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        void (string balancePlatformId, string webhookId, string settingId, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Delete a webhook setting
        /// </summary>
        /// <param name="balancePlatformId"><see cref="string"/> - The unique identifier of the balance platform.</param>
        /// <param name="webhookId"><see cref="string"/> - The unique identifier of the balance webhook.</param>
        /// <param name="settingId"><see cref="string"/> - The unique identifier of the balance webhook setting.</param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        Task Async(string balancePlatformId, string webhookId, string settingId, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
        /// <summary>
        /// Get a webhook setting
        /// </summary>
        /// <param name="balancePlatformId"><see cref="string"/> - The unique identifier of the balance platform.</param>
        /// <param name="webhookId"><see cref="string"/> - The unique identifier of the balance webhook.</param>
        /// <param name="settingId"><see cref="string"/> - The unique identifier of the balance webhook setting.</param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <returns><see cref="WebhookSettingResponse"/>.</returns>
        Model.BalancePlatform.WebhookSettingResponse (string balancePlatformId, string webhookId, string settingId, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Get a webhook setting
        /// </summary>
        /// <param name="balancePlatformId"><see cref="string"/> - The unique identifier of the balance platform.</param>
        /// <param name="webhookId"><see cref="string"/> - The unique identifier of the balance webhook.</param>
        /// <param name="settingId"><see cref="string"/> - The unique identifier of the balance webhook setting.</param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        /// <returns>Task of <see cref="WebhookSettingResponse"/>.</returns>
        Task<Model.BalancePlatform.WebhookSettingResponse> Async(string balancePlatformId, string webhookId, string settingId, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
        /// <summary>
        /// Update a webhook setting
        /// </summary>
        /// <param name="balancePlatformId"><see cref="string"/> - The unique identifier of the balance platform.</param>
        /// <param name="webhookId"><see cref="string"/> - The unique identifier of the balance webhook.</param>
        /// <param name="settingId"><see cref="string"/> - The unique identifier of the balance webhook setting.</param>
        /// <param name="patchableBalanceWebhookSettingsRequest"><see cref="PatchableBalanceWebhookSettingsRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <returns><see cref="WebhookSettingResponse"/>.</returns>
        Model.BalancePlatform.WebhookSettingResponse (string balancePlatformId, string webhookId, string settingId, PatchableBalanceWebhookSettingsRequest patchableBalanceWebhookSettingsRequest, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Update a webhook setting
        /// </summary>
        /// <param name="balancePlatformId"><see cref="string"/> - The unique identifier of the balance platform.</param>
        /// <param name="webhookId"><see cref="string"/> - The unique identifier of the balance webhook.</param>
        /// <param name="settingId"><see cref="string"/> - The unique identifier of the balance webhook setting.</param>
        /// <param name="patchableBalanceWebhookSettingsRequest"><see cref="PatchableBalanceWebhookSettingsRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        /// <returns>Task of <see cref="WebhookSettingResponse"/>.</returns>
        Task<Model.BalancePlatform.WebhookSettingResponse> Async(string balancePlatformId, string webhookId, string settingId, PatchableBalanceWebhookSettingsRequest patchableBalanceWebhookSettingsRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
    }
    
    /// <summary>
    /// Represents a collection of functions to interact with the BalancesService API endpoints
    /// </summary>
    public class BalancesService : AbstractService, IBalancesService
    {
        private readonly string _baseUrl;
        
        public BalancesService(Client client) : base(client)
        {
            _baseUrl = CreateBaseUrl("https://balanceplatform-api-test.adyen.com/bcl/v2");
        }
        
        public Model.BalancePlatform.List<WebhookSettingResponse> (string balancePlatformId, string webhookId, RequestOptions requestOptions = default)
        {
            return Async(balancePlatformId, webhookId, requestOptions).ConfigureAwait(false).GetAwaiter().GetResult();
        }

        public async Task<Model.BalancePlatform.List<WebhookSettingResponse>> Async(string balancePlatformId, string webhookId, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + $"/balancePlatforms/{balancePlatformId}/webhooks/{webhookId}/settings";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<Model.BalancePlatform.List&lt;WebhookSettingResponse&gt;>(null, requestOptions, new HttpMethod("GET"), cancellationToken).ConfigureAwait(false);
        }
        
        public Model.BalancePlatform.WebhookSettingResponse (string balancePlatformId, string webhookId, BalanceWebhookSettingsRequest balanceWebhookSettingsRequest, RequestOptions requestOptions = default)
        {
            return Async(balancePlatformId, webhookId, balanceWebhookSettingsRequest, requestOptions).ConfigureAwait(false).GetAwaiter().GetResult();
        }

        public async Task<Model.BalancePlatform.WebhookSettingResponse> Async(string balancePlatformId, string webhookId, BalanceWebhookSettingsRequest balanceWebhookSettingsRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + $"/balancePlatforms/{balancePlatformId}/webhooks/{webhookId}/settings";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<Model.BalancePlatform.WebhookSettingResponse>(balanceWebhookSettingsRequest.ToJson(), requestOptions, new HttpMethod("POST"), cancellationToken).ConfigureAwait(false);
        }
        
        public void (string balancePlatformId, string webhookId, string settingId, RequestOptions requestOptions = default)
        {
            Async(balancePlatformId, webhookId, settingId, requestOptions).ConfigureAwait(false).GetAwaiter().GetResult();
        }

        public async Task Async(string balancePlatformId, string webhookId, string settingId, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + $"/balancePlatforms/{balancePlatformId}/webhooks/{webhookId}/settings/{settingId}";
            var resource = new ServiceResource(this, endpoint);
            await resource.RequestAsync(null, requestOptions, new HttpMethod("DELETE"), cancellationToken).ConfigureAwait(false);
        }
        
        public Model.BalancePlatform.WebhookSettingResponse (string balancePlatformId, string webhookId, string settingId, RequestOptions requestOptions = default)
        {
            return Async(balancePlatformId, webhookId, settingId, requestOptions).ConfigureAwait(false).GetAwaiter().GetResult();
        }

        public async Task<Model.BalancePlatform.WebhookSettingResponse> Async(string balancePlatformId, string webhookId, string settingId, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + $"/balancePlatforms/{balancePlatformId}/webhooks/{webhookId}/settings/{settingId}";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<Model.BalancePlatform.WebhookSettingResponse>(null, requestOptions, new HttpMethod("GET"), cancellationToken).ConfigureAwait(false);
        }
        
        public Model.BalancePlatform.WebhookSettingResponse (string balancePlatformId, string webhookId, string settingId, PatchableBalanceWebhookSettingsRequest patchableBalanceWebhookSettingsRequest, RequestOptions requestOptions = default)
        {
            return Async(balancePlatformId, webhookId, settingId, patchableBalanceWebhookSettingsRequest, requestOptions).ConfigureAwait(false).GetAwaiter().GetResult();
        }

        public async Task<Model.BalancePlatform.WebhookSettingResponse> Async(string balancePlatformId, string webhookId, string settingId, PatchableBalanceWebhookSettingsRequest patchableBalanceWebhookSettingsRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + $"/balancePlatforms/{balancePlatformId}/webhooks/{webhookId}/settings/{settingId}";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<Model.BalancePlatform.WebhookSettingResponse>(patchableBalanceWebhookSettingsRequest.ToJson(), requestOptions, new HttpMethod("PATCH"), cancellationToken).ConfigureAwait(false);
        }
    }
}
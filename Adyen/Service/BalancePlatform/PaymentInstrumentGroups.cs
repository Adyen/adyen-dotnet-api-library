/*
* Configuration API
*
*
* The version of the OpenAPI document: 2
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System.Net.Http;
using System.Threading.Tasks;
using Adyen.Model.BalancePlatform;
using Newtonsoft.Json;
using Adyen.HttpClient;
using Adyen.Service.Resource;

namespace Adyen.Service.BalancePlatform
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class PaymentInstrumentGroups : AbstractService
    {
        public PaymentInstrumentGroups(Client client) : base(client) {}

        /// <summary>
        /// Get a payment instrument group Returns the details of a payment instrument group.
        /// </summary>
        /// <exception cref="HttpClientException">Thrown when fails to make API call</exception>
        /// <param name="id">The unique identifier of the payment instrument group.</param>
        /// <returns>PaymentInstrumentGroup</returns>
        public PaymentInstrumentGroup GetPaymentInstrumentGroupsId(string id)
        {
            return GetPaymentInstrumentGroupsIdAsync(id).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a payment instrument group Returns the details of a payment instrument group.
        /// </summary>
        /// <exception cref="HttpClientException">Thrown when fails to make API call</exception>
        /// <param name="id">The unique identifier of the payment instrument group.</param>
        /// <returns>Task of PaymentInstrumentGroup</returns>
        public async Task<PaymentInstrumentGroup> GetPaymentInstrumentGroupsIdAsync(string id)
        {
            var resource = new BalancePlatformResource(this, $"/paymentInstrumentGroups/{id}");
            var jsonResult = await resource.RequestAsync(null, null, HttpMethod.Get);
            return JsonConvert.DeserializeObject<PaymentInstrumentGroup>(jsonResult);
        }

        /// <summary>
        /// Get all transaction rules for a payment instrument group Returns a list of all the transaction rules associated with a payment instrument group.
        /// </summary>
        /// <exception cref="HttpClientException">Thrown when fails to make API call</exception>
        /// <param name="id">The unique identifier of the payment instrument group.</param>
        /// <returns>TransactionRulesResponse</returns>
        public TransactionRulesResponse GetPaymentInstrumentGroupsIdTransactionRules(string id)
        {
            return GetPaymentInstrumentGroupsIdTransactionRulesAsync(id).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get all transaction rules for a payment instrument group Returns a list of all the transaction rules associated with a payment instrument group.
        /// </summary>
        /// <exception cref="HttpClientException">Thrown when fails to make API call</exception>
        /// <param name="id">The unique identifier of the payment instrument group.</param>
        /// <returns>Task of TransactionRulesResponse</returns>
        public async Task<TransactionRulesResponse> GetPaymentInstrumentGroupsIdTransactionRulesAsync(string id)
        {
            var resource = new BalancePlatformResource(this, $"/paymentInstrumentGroups/{id}/transactionRules");
            var jsonResult = await resource.RequestAsync(null, null, HttpMethod.Get);
            return JsonConvert.DeserializeObject<TransactionRulesResponse>(jsonResult);
        }

        /// <summary>
        /// Create a payment instrument group Creates a payment instrument group to associate and group payment instrument resources together. You can apply a transaction rule to a payment instrument group.
        /// </summary>
        /// <exception cref="HttpClientException">Thrown when fails to make API call</exception>
        /// <param name="paymentInstrumentGroupInfo"> (optional)</param>
        /// <returns>PaymentInstrumentGroup</returns>
        public PaymentInstrumentGroup PostPaymentInstrumentGroups(PaymentInstrumentGroupInfo paymentInstrumentGroupInfo)
        {
            return PostPaymentInstrumentGroupsAsync(paymentInstrumentGroupInfo).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Create a payment instrument group Creates a payment instrument group to associate and group payment instrument resources together. You can apply a transaction rule to a payment instrument group.
        /// </summary>
        /// <exception cref="HttpClientException">Thrown when fails to make API call</exception>
        /// <param name="paymentInstrumentGroupInfo"> (optional)</param>
        /// <returns>Task of PaymentInstrumentGroup</returns>
        public async Task<PaymentInstrumentGroup> PostPaymentInstrumentGroupsAsync(PaymentInstrumentGroupInfo paymentInstrumentGroupInfo)
        {
            string jsonRequest = paymentInstrumentGroupInfo.ToJson();
            var resource = new BalancePlatformResource(this, $"/paymentInstrumentGroups");
            var jsonResult = await resource.RequestAsync(jsonRequest);
            return JsonConvert.DeserializeObject<PaymentInstrumentGroup>(jsonResult);
        }

    }
}
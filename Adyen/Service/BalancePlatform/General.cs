/*
* Configuration API
*
*
* The version of the OpenAPI document: 2
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Adyen.Service.Resource;
using Adyen.HttpClient;
using Adyen.Model.BalancePlatform;

namespace Adyen.Service.BalancePlatform
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class General : AbstractService
    {
        public General(Client client) : base(client) {}

        /// <summary>
        /// Get a balance platform Returns a balance platform.
        /// </summary>
        /// <exception cref="HttpClientException">Thrown when fails to make API call</exception>
        /// <param name="id">The unique identifier of the balance platform.</param>
        /// <returns>BalancePlatform</returns>
        public Model.BalancePlatform.BalancePlatform GetBalancePlatformsId(string id)
        {
            return GetBalancePlatformsIdAsync(id).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a balance platform Returns a balance platform.
        /// </summary>
        /// <exception cref="HttpClientException">Thrown when fails to make API call</exception>
        /// <param name="id">The unique identifier of the balance platform.</param>
        /// <returns>Task of BalancePlatform</returns>
        public async Task<Model.BalancePlatform.BalancePlatform> GetBalancePlatformsIdAsync(string id)
        {
            var resource = new BalancePlatformResource(this, $"/balancePlatforms/{id}");
            var jsonResult = await resource.RequestAsync(null, null, HttpMethod.Get);
            return JsonConvert.DeserializeObject<Model.BalancePlatform.BalancePlatform>(jsonResult);
        }

        /// <summary>
        /// Get all account holders under a balance platform Returns a paginated list of all the account holders that belong to the balance platform. To fetch multiple pages, use the query parameters.   For example, to limit the page to 5 account holders and to skip the first 20, use `/balancePlatforms/{id}/accountHolders?limit=5&offset=20`.
        /// </summary>
        /// <exception cref="HttpClientException">Thrown when fails to make API call</exception>
        /// <param name="id">The unique identifier of the balance platform.</param>
        /// <param name="offset">The number of items that you want to skip. (optional)</param>
        /// <param name="limit">The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page. (optional)</param>
        /// <returns>PaginatedAccountHoldersResponse</returns>
        public PaginatedAccountHoldersResponse GetBalancePlatformsIdAccountHolders(string id, int? offset = default(int?), int? limit = default(int?))
        {
            return GetBalancePlatformsIdAccountHoldersAsync(id, offset, limit).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get all account holders under a balance platform Returns a paginated list of all the account holders that belong to the balance platform. To fetch multiple pages, use the query parameters.   For example, to limit the page to 5 account holders and to skip the first 20, use `/balancePlatforms/{id}/accountHolders?limit=5&offset=20`.
        /// </summary>
        /// <exception cref="HttpClientException">Thrown when fails to make API call</exception>
        /// <param name="id">The unique identifier of the balance platform.</param>
        /// <param name="offset">The number of items that you want to skip. (optional)</param>
        /// <param name="limit">The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page. (optional)</param>
        /// <returns>Task of PaginatedAccountHoldersResponse</returns>
        public async Task<PaginatedAccountHoldersResponse> GetBalancePlatformsIdAccountHoldersAsync(string id, int? offset = default(int?), int? limit = default(int?))
        {
            var resource = new BalancePlatformResource(this, $"/balancePlatforms/{id}/accountHolders");
            var jsonResult = await resource.RequestAsync(null, null, HttpMethod.Get);
            return JsonConvert.DeserializeObject<PaginatedAccountHoldersResponse>(jsonResult);
        }

    }
}
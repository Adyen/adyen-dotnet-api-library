/*
* Configuration API
*
*
* The version of the OpenAPI document: 2
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Adyen.Constants;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.BalancePlatform;
using Newtonsoft.Json;

namespace Adyen.Service.BalancePlatform
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class PaymentInstrumentGroupsService : AbstractService
    {
        private readonly string _baseUrl;
        
        public PaymentInstrumentGroupsService(Client client) : base(client)
        {
            _baseUrl = client.Config.BalancePlatformEndpoint + "/" + ClientConfig.BalancePlatformVersion;
        }
    
        /// <summary>
        /// Get a payment instrument group
        /// </summary>
        /// <param name="id">The unique identifier of the payment instrument group.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>PaymentInstrumentGroup</returns>
        public PaymentInstrumentGroup Retrieve(string id, RequestOptions requestOptions = default)
        {
            return RetrieveAsync(id, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a payment instrument group
        /// </summary>
        /// <param name="id">The unique identifier of the payment instrument group.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of PaymentInstrumentGroup</returns>
        public async Task<PaymentInstrumentGroup> RetrieveAsync(string id, RequestOptions requestOptions = default)
        {
            var endpoint = _baseUrl + $"/paymentInstrumentGroups/{id}";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<PaymentInstrumentGroup>(null, requestOptions, new HttpMethod("GET"));
        }

        /// <summary>
        /// Get all transaction rules for a payment instrument group
        /// </summary>
        /// <param name="id">The unique identifier of the payment instrument group.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>TransactionRulesResponse</returns>
        public TransactionRulesResponse ListTransactionRules(string id, RequestOptions requestOptions = default)
        {
            return ListTransactionRulesAsync(id, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get all transaction rules for a payment instrument group
        /// </summary>
        /// <param name="id">The unique identifier of the payment instrument group.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of TransactionRulesResponse</returns>
        public async Task<TransactionRulesResponse> ListTransactionRulesAsync(string id, RequestOptions requestOptions = default)
        {
            var endpoint = _baseUrl + $"/paymentInstrumentGroups/{id}/transactionRules";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<TransactionRulesResponse>(null, requestOptions, new HttpMethod("GET"));
        }

        /// <summary>
        /// Create a payment instrument group
        /// </summary>
        /// <param name="paymentInstrumentGroupInfo"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>PaymentInstrumentGroup</returns>
        public PaymentInstrumentGroup Create(PaymentInstrumentGroupInfo paymentInstrumentGroupInfo, RequestOptions requestOptions = default)
        {
            return CreateAsync(paymentInstrumentGroupInfo, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Create a payment instrument group
        /// </summary>
        /// <param name="paymentInstrumentGroupInfo"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of PaymentInstrumentGroup</returns>
        public async Task<PaymentInstrumentGroup> CreateAsync(PaymentInstrumentGroupInfo paymentInstrumentGroupInfo, RequestOptions requestOptions = default)
        {
            var endpoint = _baseUrl + "/paymentInstrumentGroups";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<PaymentInstrumentGroup>(paymentInstrumentGroupInfo.ToJson(), requestOptions, new HttpMethod("POST"));
        }

    }
}
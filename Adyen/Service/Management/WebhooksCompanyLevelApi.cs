/*
* Management API
*
*
* The version of the OpenAPI document: 1
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.Management;
using Newtonsoft.Json;

namespace Adyen.Service.Management
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class WebhooksCompanyLevelApi : AbstractService
    {
        public WebhooksCompanyLevelApi(Client client) : base(client) {}
    
        /// <summary>
        /// Remove a webhook
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="requestOptions">Additional request options.</param>
        public void DeleteCompaniesCompanyIdWebhooksWebhookId(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            DeleteCompaniesCompanyIdWebhooksWebhookIdAsync(companyId, webhookId, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Remove a webhook
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="requestOptions">Additional request options.</param>
        public async Task DeleteCompaniesCompanyIdWebhooksWebhookIdAsync(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks/{webhookId}";
            var resource = new ManagementResource(this, endpoint);
            await resource.RequestAsync(null, requestOptions, new HttpMethod("DELETE"));
        }

        /// <summary>
        /// List all webhooks
        /// </summary>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="pageNumber">The number of the page to fetch.</param>
        /// <param name="pageSize">The number of items to have on a page, maximum 100. The default is 10 items on a page.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>ListWebhooksResponse</returns>
        public ListWebhooksResponse GetCompaniesCompanyIdWebhooks(string companyId, int? pageNumber = default, int? pageSize = default, RequestOptions requestOptions = default)
        {
            return GetCompaniesCompanyIdWebhooksAsync(companyId, pageNumber, pageSize, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// List all webhooks
        /// </summary>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="pageNumber">The number of the page to fetch.</param>
        /// <param name="pageSize">The number of items to have on a page, maximum 100. The default is 10 items on a page.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of ListWebhooksResponse</returns>
        public async Task<ListWebhooksResponse> GetCompaniesCompanyIdWebhooksAsync(string companyId, int? pageNumber = default, int? pageSize = default, RequestOptions requestOptions = default)
        {
            // Build the query string
            var queryParams = new Dictionary<string, string>();
            if (pageNumber != null) queryParams.Add("pageNumber", pageNumber.ToString());
            if (pageSize != null) queryParams.Add("pageSize", pageSize.ToString());
            var endpoint = $"/companies/{companyId}/webhooks" + ToQueryString(queryParams);
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, requestOptions, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<ListWebhooksResponse>(jsonResult);
        }

        /// <summary>
        /// Get a webhook
        /// </summary>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Webhook</returns>
        public Webhook GetCompaniesCompanyIdWebhooksWebhookId(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            return GetCompaniesCompanyIdWebhooksWebhookIdAsync(companyId, webhookId, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a webhook
        /// </summary>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of Webhook</returns>
        public async Task<Webhook> GetCompaniesCompanyIdWebhooksWebhookIdAsync(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks/{webhookId}";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, requestOptions, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<Webhook>(jsonResult);
        }

        /// <summary>
        /// Update a webhook
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="updateCompanyWebhookRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Webhook</returns>
        public Webhook PatchCompaniesCompanyIdWebhooksWebhookId(string companyId, string webhookId, UpdateCompanyWebhookRequest updateCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            return PatchCompaniesCompanyIdWebhooksWebhookIdAsync(companyId, webhookId, updateCompanyWebhookRequest, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Update a webhook
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="updateCompanyWebhookRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of Webhook</returns>
        public async Task<Webhook> PatchCompaniesCompanyIdWebhooksWebhookIdAsync(string companyId, string webhookId, UpdateCompanyWebhookRequest updateCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks/{webhookId}";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(updateCompanyWebhookRequest.ToJson(), requestOptions, new HttpMethod("PATCH"));
            return JsonConvert.DeserializeObject<Webhook>(jsonResult);
        }

        /// <summary>
        /// Set up a webhook
        /// </summary>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="createCompanyWebhookRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Webhook</returns>
        public Webhook PostCompaniesCompanyIdWebhooks(string companyId, CreateCompanyWebhookRequest createCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            return PostCompaniesCompanyIdWebhooksAsync(companyId, createCompanyWebhookRequest, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Set up a webhook
        /// </summary>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="createCompanyWebhookRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of Webhook</returns>
        public async Task<Webhook> PostCompaniesCompanyIdWebhooksAsync(string companyId, CreateCompanyWebhookRequest createCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(createCompanyWebhookRequest.ToJson(), requestOptions, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<Webhook>(jsonResult);
        }

        /// <summary>
        /// Generate an HMAC key
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>GenerateHmacKeyResponse</returns>
        public GenerateHmacKeyResponse PostCompaniesCompanyIdWebhooksWebhookIdGenerateHmac(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            return PostCompaniesCompanyIdWebhooksWebhookIdGenerateHmacAsync(companyId, webhookId, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Generate an HMAC key
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of GenerateHmacKeyResponse</returns>
        public async Task<GenerateHmacKeyResponse> PostCompaniesCompanyIdWebhooksWebhookIdGenerateHmacAsync(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks/{webhookId}/generateHmac";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, requestOptions, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<GenerateHmacKeyResponse>(jsonResult);
        }

        /// <summary>
        /// Test a webhook
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="testCompanyWebhookRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>TestWebhookResponse</returns>
        public TestWebhookResponse PostCompaniesCompanyIdWebhooksWebhookIdTest(string companyId, string webhookId, TestCompanyWebhookRequest testCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            return PostCompaniesCompanyIdWebhooksWebhookIdTestAsync(companyId, webhookId, testCompanyWebhookRequest, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Test a webhook
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="testCompanyWebhookRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of TestWebhookResponse</returns>
        public async Task<TestWebhookResponse> PostCompaniesCompanyIdWebhooksWebhookIdTestAsync(string companyId, string webhookId, TestCompanyWebhookRequest testCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks/{webhookId}/test";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(testCompanyWebhookRequest.ToJson(), requestOptions, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<TestWebhookResponse>(jsonResult);
        }

    }
}

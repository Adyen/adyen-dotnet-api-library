/*
* Management API
*
*
* The version of the OpenAPI document: 1
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Net.Http;
using System.Threading.Tasks;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.Management;
using Newtonsoft.Json;

namespace Adyen.Service.Management
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class WebhooksCompanyLevelApi : AbstractService
    {
        public WebhooksCompanyLevelApi(Client client) : base(client) {}
    
        /// <summary>
        /// Remove a webhook Remove the configuration for the webhook identified in the path.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <returns></returns>
        /// <param name="requestOptions">Additional request options</param>
        public void DeleteCompaniesCompanyIdWebhooksWebhookId(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            DeleteCompaniesCompanyIdWebhooksWebhookIdAsync(companyId, webhookId, requestOptions);
        }

        /// <summary>
        /// Remove a webhook Remove the configuration for the webhook identified in the path.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <returns>Task of void</returns>
        /// <param name="requestOptions">Additional request options</param>
        public async Task DeleteCompaniesCompanyIdWebhooksWebhookIdAsync(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks/{webhookId}";
            string jsonRequest = null;
            var resource = new ManagementResource(this, endpoint);
            await resource.RequestAsync(jsonRequest, null, new HttpMethod("DELETE"));
        }

        /// <summary>
        /// List all webhooks Lists all webhook configurations for the company account.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="pageNumber">The number of the page to fetch. (optional)</param>
        /// <param name="pageSize">The number of items to have on a page, maximum 100. The default is 10 items on a page. (optional)</param>
        /// <returns>ListWebhooksResponse</returns>
        /// <param name="requestOptions">Additional request options</param>
        public ListWebhooksResponse GetCompaniesCompanyIdWebhooks(string companyId, RequestOptions requestOptions = default)
        {
            return GetCompaniesCompanyIdWebhooksAsync(companyId, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// List all webhooks Lists all webhook configurations for the company account.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="pageNumber">The number of the page to fetch. (optional)</param>
        /// <param name="pageSize">The number of items to have on a page, maximum 100. The default is 10 items on a page. (optional)</param>
        /// <returns>Task of ListWebhooksResponse</returns>
        /// <param name="requestOptions">Additional request options</param>
        public async Task<ListWebhooksResponse> GetCompaniesCompanyIdWebhooksAsync(string companyId, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks" + ToQueryString(requestOptions?.QueryParameters);
            string jsonRequest = null;
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<ListWebhooksResponse>(jsonResult);
        }

        /// <summary>
        /// Get a webhook Returns the configuration for the webhook identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <returns>Webhook</returns>
        /// <param name="requestOptions">Additional request options</param>
        public Webhook GetCompaniesCompanyIdWebhooksWebhookId(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            return GetCompaniesCompanyIdWebhooksWebhookIdAsync(companyId, webhookId, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a webhook Returns the configuration for the webhook identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <returns>Task of Webhook</returns>
        /// <param name="requestOptions">Additional request options</param>
        public async Task<Webhook> GetCompaniesCompanyIdWebhooksWebhookIdAsync(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks/{webhookId}";
            string jsonRequest = null;
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<Webhook>(jsonResult);
        }

        /// <summary>
        /// Update a webhook Make changes to the configuration of the webhook identified in the path. The request contains the new values you want to have in the webhook configuration. The response contains the full configuration for the webhook, which includes the new values from the request.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="updateCompanyWebhookRequest"> (optional)</param>
        /// <returns>Webhook</returns>
        /// <param name="requestOptions">Additional request options</param>
        public Webhook PatchCompaniesCompanyIdWebhooksWebhookId(string companyId, string webhookId, UpdateCompanyWebhookRequest updateCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            return PatchCompaniesCompanyIdWebhooksWebhookIdAsync(companyId, webhookId, updateCompanyWebhookRequest, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Update a webhook Make changes to the configuration of the webhook identified in the path. The request contains the new values you want to have in the webhook configuration. The response contains the full configuration for the webhook, which includes the new values from the request.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="updateCompanyWebhookRequest"> (optional)</param>
        /// <returns>Task of Webhook</returns>
        /// <param name="requestOptions">Additional request options</param>
        public async Task<Webhook> PatchCompaniesCompanyIdWebhooksWebhookIdAsync(string companyId, string webhookId, UpdateCompanyWebhookRequest updateCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks/{webhookId}";
            string jsonRequest = updateCompanyWebhookRequest.ToJson();
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("PATCH"));
            return JsonConvert.DeserializeObject<Webhook>(jsonResult);
        }

        /// <summary>
        /// Set up a webhook Subscribe to receive webhook notifications about events related to your company account. You can add basic authentication to make sure the data is secure.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="createCompanyWebhookRequest"> (optional)</param>
        /// <returns>Webhook</returns>
        /// <param name="requestOptions">Additional request options</param>
        public Webhook PostCompaniesCompanyIdWebhooks(string companyId, CreateCompanyWebhookRequest createCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            return PostCompaniesCompanyIdWebhooksAsync(companyId, createCompanyWebhookRequest, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Set up a webhook Subscribe to receive webhook notifications about events related to your company account. You can add basic authentication to make sure the data is secure.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).</param>
        /// <param name="createCompanyWebhookRequest"> (optional)</param>
        /// <returns>Task of Webhook</returns>
        /// <param name="requestOptions">Additional request options</param>
        public async Task<Webhook> PostCompaniesCompanyIdWebhooksAsync(string companyId, CreateCompanyWebhookRequest createCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks";
            string jsonRequest = createCompanyWebhookRequest.ToJson();
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<Webhook>(jsonResult);
        }

        /// <summary>
        /// Generate an HMAC key Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for the webhook identified in the path. This key allows you to check the integrity and the origin of the notifications you receive.By creating an HMAC key, you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures) from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <returns>GenerateHmacKeyResponse</returns>
        /// <param name="requestOptions">Additional request options</param>
        public GenerateHmacKeyResponse PostCompaniesCompanyIdWebhooksWebhookIdGenerateHmac(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            return PostCompaniesCompanyIdWebhooksWebhookIdGenerateHmacAsync(companyId, webhookId, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Generate an HMAC key Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for the webhook identified in the path. This key allows you to check the integrity and the origin of the notifications you receive.By creating an HMAC key, you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures) from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <returns>Task of GenerateHmacKeyResponse</returns>
        /// <param name="requestOptions">Additional request options</param>
        public async Task<GenerateHmacKeyResponse> PostCompaniesCompanyIdWebhooksWebhookIdGenerateHmacAsync(string companyId, string webhookId, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks/{webhookId}/generateHmac";
            string jsonRequest = null;
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<GenerateHmacKeyResponse>(jsonResult);
        }

        /// <summary>
        /// Test a webhook Sends sample notifications to test if the webhook is set up correctly.  We send sample notifications for maximum 20 of the merchant accounts that the webhook is configured for. If the webhook is configured for more than 20 merchant accounts, use the `merchantIds` array to specify a subset of the merchant accounts for which to send test notifications.  We send four test notifications for each event code you choose. They cover success and failure scenarios for the hard-coded currencies EUR and GBP, regardless of the currencies configured in the merchant accounts. For custom notifications, we only send the specified custom notification.  The response describes the result of the test. The `status` field tells you if the test was successful or not. You can use the other response fields to troubleshoot unsuccessful tests.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="testCompanyWebhookRequest"> (optional)</param>
        /// <returns>TestWebhookResponse</returns>
        /// <param name="requestOptions">Additional request options</param>
        public TestWebhookResponse PostCompaniesCompanyIdWebhooksWebhookIdTest(string companyId, string webhookId, TestCompanyWebhookRequest testCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            return PostCompaniesCompanyIdWebhooksWebhookIdTestAsync(companyId, webhookId, testCompanyWebhookRequest, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Test a webhook Sends sample notifications to test if the webhook is set up correctly.  We send sample notifications for maximum 20 of the merchant accounts that the webhook is configured for. If the webhook is configured for more than 20 merchant accounts, use the `merchantIds` array to specify a subset of the merchant accounts for which to send test notifications.  We send four test notifications for each event code you choose. They cover success and failure scenarios for the hard-coded currencies EUR and GBP, regardless of the currencies configured in the merchant accounts. For custom notifications, we only send the specified custom notification.  The response describes the result of the test. The `status` field tells you if the test was successful or not. You can use the other response fields to troubleshoot unsuccessful tests.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="webhookId">Unique identifier of the webhook configuration.</param>
        /// <param name="testCompanyWebhookRequest"> (optional)</param>
        /// <returns>Task of TestWebhookResponse</returns>
        /// <param name="requestOptions">Additional request options</param>
        public async Task<TestWebhookResponse> PostCompaniesCompanyIdWebhooksWebhookIdTestAsync(string companyId, string webhookId, TestCompanyWebhookRequest testCompanyWebhookRequest, RequestOptions requestOptions = default)
        {
            var endpoint = $"/companies/{companyId}/webhooks/{webhookId}/test";
            string jsonRequest = testCompanyWebhookRequest.ToJson();
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<TestWebhookResponse>(jsonResult);
        }

    }
}

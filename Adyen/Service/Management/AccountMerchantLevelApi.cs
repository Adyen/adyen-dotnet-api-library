/*
* Management API
*
*
* The version of the OpenAPI document: 1
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Net.Http;
using System.Threading.Tasks;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.Management;
using Newtonsoft.Json;

namespace Adyen.Service.Management
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class AccountMerchantLevelApi : AbstractService
    {
        public AccountMerchantLevelApi(Client client) : base(client) {}
    
        /// <summary>
        /// Get a list of merchant accounts
        /// </summary>
        /// <param name="requestOptions">Additional request options. Query parameters:
        /// <list type="table">
        ///     <listheader>
        ///         <term>parameter</term>
        ///         <description>description</description>
        ///     </listheader>
        ///     <item>
        ///         <term>pageNumber</term>
        ///         <description>The number of the page to fetch.</description>
        ///     </item>
        ///     <item>
        ///         <term>pageSize</term>
        ///         <description>The number of items to have on a page, maximum 100. The default is 10 items on a page.</description>
        ///     </item>
        /// </list></param>
        /// <returns>ListMerchantResponse</returns>
        public ListMerchantResponse GetMerchants(RequestOptions requestOptions = null)
        {
            var endpoint = "/merchants" + ToQueryString(requestOptions?.QueryParameters);
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = resource.Request(null, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<ListMerchantResponse>(jsonResult);
        }

        /// <summary>
        /// Get a list of merchant accounts
        /// </summary>
        /// <param name="requestOptions">Additional request options. Query parameters:
        /// <list type="table">
        ///     <listheader>
        ///         <term>parameter</term>
        ///         <description>description</description>
        ///     </listheader>
        ///     <item>
        ///         <term>pageNumber</term>
        ///         <description>The number of the page to fetch.</description>
        ///     </item>
        ///     <item>
        ///         <term>pageSize</term>
        ///         <description>The number of items to have on a page, maximum 100. The default is 10 items on a page.</description>
        ///     </item>
        /// </list></param>
        /// <returns>Task of ListMerchantResponse</returns>
        public async Task<ListMerchantResponse> GetMerchantsAsync(RequestOptions requestOptions = null)
        {
            var endpoint = "/merchants" + ToQueryString(requestOptions?.QueryParameters);
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<ListMerchantResponse>(jsonResult);
        }

        /// <summary>
        /// Get a merchant account
        /// </summary>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Merchant</returns>
        public Merchant GetMerchantsMerchantId(string merchantId, RequestOptions requestOptions = null)
        {
            var endpoint = $"/merchants/{merchantId}";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = resource.Request(null, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<Merchant>(jsonResult);
        }

        /// <summary>
        /// Get a merchant account
        /// </summary>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of Merchant</returns>
        public async Task<Merchant> GetMerchantsMerchantIdAsync(string merchantId, RequestOptions requestOptions = null)
        {
            var endpoint = $"/merchants/{merchantId}";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<Merchant>(jsonResult);
        }

        /// <summary>
        /// Create a merchant account
        /// </summary>
        /// <param name="createMerchantRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>CreateMerchantResponse</returns>
        public CreateMerchantResponse PostMerchants(CreateMerchantRequest createMerchantRequest, RequestOptions requestOptions = null)
        {
            var endpoint = "/merchants";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = resource.Request(createMerchantRequest.ToJson(), null, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<CreateMerchantResponse>(jsonResult);
        }

        /// <summary>
        /// Create a merchant account
        /// </summary>
        /// <param name="createMerchantRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of CreateMerchantResponse</returns>
        public async Task<CreateMerchantResponse> PostMerchantsAsync(CreateMerchantRequest createMerchantRequest, RequestOptions requestOptions = null)
        {
            var endpoint = "/merchants";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(createMerchantRequest.ToJson(), null, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<CreateMerchantResponse>(jsonResult);
        }

        /// <summary>
        /// Request to activate a merchant account
        /// </summary>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>RequestActivationResponse</returns>
        public RequestActivationResponse PostMerchantsMerchantIdActivate(string merchantId, RequestOptions requestOptions = null)
        {
            var endpoint = $"/merchants/{merchantId}/activate";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = resource.Request(null, null, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<RequestActivationResponse>(jsonResult);
        }

        /// <summary>
        /// Request to activate a merchant account
        /// </summary>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of RequestActivationResponse</returns>
        public async Task<RequestActivationResponse> PostMerchantsMerchantIdActivateAsync(string merchantId, RequestOptions requestOptions = null)
        {
            var endpoint = $"/merchants/{merchantId}/activate";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, null, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<RequestActivationResponse>(jsonResult);
        }

    }
}

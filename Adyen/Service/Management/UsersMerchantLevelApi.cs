/*
* Management API
*
*
* The version of the OpenAPI document: 1
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Adyen.Service.Resource;
using Adyen.Model.Management;

namespace Adyen.Service.Management
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class UsersMerchantLevelApi : AbstractService
    {
        public UsersMerchantLevelApi(Client client) : base(client) {}
    
        /// <summary>
        /// Get a list of users Returns a list of users associated with the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">Unique identifier of the merchant.</param>
        /// <param name="pageNumber">The number of the page to fetch. (optional)</param>
        /// <param name="pageSize">The number of items to have on a page. Maximum value is **100**. The default is **10** items on a page. (optional)</param>
        /// <returns>ListMerchantUsersResponse</returns>
        public ListMerchantUsersResponse GetMerchantsMerchantIdUsers(string merchantId, int? pageNumber = default(int?), int? pageSize = default(int?))
        {
            return GetMerchantsMerchantIdUsersAsync(merchantId, pageNumber, pageSize).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a list of users Returns a list of users associated with the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">Unique identifier of the merchant.</param>
        /// <param name="pageNumber">The number of the page to fetch. (optional)</param>
        /// <param name="pageSize">The number of items to have on a page. Maximum value is **100**. The default is **10** items on a page. (optional)</param>
        /// <returns>Task of ListMerchantUsersResponse</returns>
        public async Task<ListMerchantUsersResponse> GetMerchantsMerchantIdUsersAsync(string merchantId, int? pageNumber = default(int?), int? pageSize = default(int?))
        {
            var endpoint = $"/merchants/{merchantId}/users";
            // Build the query string
            var queryParams = new Dictionary<string, string>();
            if (pageNumber != null) queryParams.Add("pageNumber", pageNumber.ToString());
            if (pageSize != null) queryParams.Add("pageSize", pageSize.ToString());
            var queryString = string.Join("&", queryParams.Select(kvp => $"{kvp.Key}={kvp.Value}"));
            if (!string.IsNullOrEmpty(queryString)) endpoint += "?" + queryString;

            string jsonRequest = null;
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<ListMerchantUsersResponse>(jsonResult);
        }

        /// <summary>
        /// Get user details Returns user details for the `userId` and the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">Unique identifier of the merchant.</param>
        /// <param name="userId">Unique identifier of the user.</param>
        /// <returns>User</returns>
        public User GetMerchantsMerchantIdUsersUserId(string merchantId, string userId)
        {
            return GetMerchantsMerchantIdUsersUserIdAsync(merchantId, userId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get user details Returns user details for the `userId` and the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">Unique identifier of the merchant.</param>
        /// <param name="userId">Unique identifier of the user.</param>
        /// <returns>Task of User</returns>
        public async Task<User> GetMerchantsMerchantIdUsersUserIdAsync(string merchantId, string userId)
        {
            var endpoint = $"/merchants/{merchantId}/users/{userId}";
            string jsonRequest = null;
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<User>(jsonResult);
        }

        /// <summary>
        /// Update a user Updates user details for the `userId` and the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">Unique identifier of the merchant.</param>
        /// <param name="userId">Unique identifier of the user.</param>
        /// <param name="updateMerchantUserRequest"> (optional)</param>
        /// <returns>User</returns>
        public User PatchMerchantsMerchantIdUsersUserId(string merchantId, string userId, UpdateMerchantUserRequest updateMerchantUserRequest)
        {
            return PatchMerchantsMerchantIdUsersUserIdAsync(merchantId, userId, updateMerchantUserRequest).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Update a user Updates user details for the `userId` and the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">Unique identifier of the merchant.</param>
        /// <param name="userId">Unique identifier of the user.</param>
        /// <param name="updateMerchantUserRequest"> (optional)</param>
        /// <returns>Task of User</returns>
        public async Task<User> PatchMerchantsMerchantIdUsersUserIdAsync(string merchantId, string userId, UpdateMerchantUserRequest updateMerchantUserRequest)
        {
            var endpoint = $"/merchants/{merchantId}/users/{userId}";
            string jsonRequest = updateMerchantUserRequest.ToJson();
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("PATCH"));
            return JsonConvert.DeserializeObject<User>(jsonResult);
        }

        /// <summary>
        /// Create a new user Creates a user for the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">Unique identifier of the merchant.</param>
        /// <param name="createMerchantUserRequest"> (optional)</param>
        /// <returns>CreateUserResponse</returns>
        public CreateUserResponse PostMerchantsMerchantIdUsers(string merchantId, CreateMerchantUserRequest createMerchantUserRequest)
        {
            return PostMerchantsMerchantIdUsersAsync(merchantId, createMerchantUserRequest).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Create a new user Creates a user for the `merchantId` specified in the path.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Users read and write 
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">Unique identifier of the merchant.</param>
        /// <param name="createMerchantUserRequest"> (optional)</param>
        /// <returns>Task of CreateUserResponse</returns>
        public async Task<CreateUserResponse> PostMerchantsMerchantIdUsersAsync(string merchantId, CreateMerchantUserRequest createMerchantUserRequest)
        {
            var endpoint = $"/merchants/{merchantId}/users";
            string jsonRequest = createMerchantUserRequest.ToJson();
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<CreateUserResponse>(jsonResult);
        }

    }
}

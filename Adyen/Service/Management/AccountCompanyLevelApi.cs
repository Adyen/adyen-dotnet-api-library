/*
* Management API
*
*
* The version of the OpenAPI document: 1
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Net.Http;
using System.Threading.Tasks;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.Management;
using Newtonsoft.Json;

namespace Adyen.Service.Management
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class AccountCompanyLevelApi : AbstractService
    {
        public AccountCompanyLevelApi(Client client) : base(client) {}
    
        /// <summary>
        /// Get a list of company accounts
        /// </summary>
        /// <param name="requestOptions">Additional request options. Query parameters:
        /// <list type="table">
        ///     <listheader>
        ///         <term>parameter</term>
        ///         <description>description</description>
        ///     </listheader>
        ///     <item>
        ///         <term>pageNumber</term>
        ///         <description>The number of the page to fetch.</description>
        ///     </item>
        ///     <item>
        ///         <term>pageSize</term>
        ///         <description>The number of items to have on a page, maximum 100. The default is 10 items on a page.</description>
        ///     </item>
        /// </list></param>
        /// <returns>ListCompanyResponse</returns>
        public ListCompanyResponse GetCompanies(RequestOptions requestOptions = null)
        {
            return GetCompaniesAsync(requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a list of company accounts
        /// </summary>
        /// <param name="requestOptions">Additional request options. Query parameters:
        /// <list type="table">
        ///     <listheader>
        ///         <term>parameter</term>
        ///         <description>description</description>
        ///     </listheader>
        ///     <item>
        ///         <term>pageNumber</term>
        ///         <description>The number of the page to fetch.</description>
        ///     </item>
        ///     <item>
        ///         <term>pageSize</term>
        ///         <description>The number of items to have on a page, maximum 100. The default is 10 items on a page.</description>
        ///     </item>
        /// </list></param>
        /// <returns>Task of ListCompanyResponse</returns>
        public async Task<ListCompanyResponse> GetCompaniesAsync(RequestOptions requestOptions = null)
        {
            var endpoint = "/companies" + ToQueryString(requestOptions?.QueryParameters);
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<ListCompanyResponse>(jsonResult);
        }

        /// <summary>
        /// Get a company account
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Company</returns>
        public Company GetCompaniesCompanyId(string companyId, RequestOptions requestOptions = null)
        {
            return GetCompaniesCompanyIdAsync(companyId, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a company account
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of Company</returns>
        public async Task<Company> GetCompaniesCompanyIdAsync(string companyId, RequestOptions requestOptions = null)
        {
            var endpoint = $"/companies/{companyId}";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<Company>(jsonResult);
        }

        /// <summary>
        /// Get a list of merchant accounts
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="requestOptions">Additional request options. Query parameters:
        /// <list type="table">
        ///     <listheader>
        ///         <term>parameter</term>
        ///         <description>description</description>
        ///     </listheader>
        ///     <item>
        ///         <term>pageNumber</term>
        ///         <description>The number of the page to fetch.</description>
        ///     </item>
        ///     <item>
        ///         <term>pageSize</term>
        ///         <description>The number of items to have on a page, maximum 100. The default is 10 items on a page.</description>
        ///     </item>
        /// </list></param>
        /// <returns>ListMerchantResponse</returns>
        public ListMerchantResponse GetCompaniesCompanyIdMerchants(string companyId, RequestOptions requestOptions = null)
        {
            return GetCompaniesCompanyIdMerchantsAsync(companyId, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a list of merchant accounts
        /// </summary>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="requestOptions">Additional request options. Query parameters:
        /// <list type="table">
        ///     <listheader>
        ///         <term>parameter</term>
        ///         <description>description</description>
        ///     </listheader>
        ///     <item>
        ///         <term>pageNumber</term>
        ///         <description>The number of the page to fetch.</description>
        ///     </item>
        ///     <item>
        ///         <term>pageSize</term>
        ///         <description>The number of items to have on a page, maximum 100. The default is 10 items on a page.</description>
        ///     </item>
        /// </list></param>
        /// <returns>Task of ListMerchantResponse</returns>
        public async Task<ListMerchantResponse> GetCompaniesCompanyIdMerchantsAsync(string companyId, RequestOptions requestOptions = null)
        {
            var endpoint = $"/companies/{companyId}/merchants" + ToQueryString(requestOptions?.QueryParameters);
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<ListMerchantResponse>(jsonResult);
        }

    }
}

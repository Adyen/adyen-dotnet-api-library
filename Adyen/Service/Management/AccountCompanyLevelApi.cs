/*
* Management API
*
*
* The version of the OpenAPI document: 1
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Adyen.Service.Resource;
using Adyen.Model.Management;

namespace Adyen.Service.Management
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class AccountCompanyLevelApi : AbstractService
    {
        public AccountCompanyLevelApi(Client client) : base(client) {}
    
        /// <summary>
        /// Get a list of company accounts Returns the list of company accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):  * Management API—Account read
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="pageNumber">The number of the page to fetch. (optional)</param>
        /// <param name="pageSize">The number of items to have on a page, maximum 100. The default is 10 items on a page. (optional)</param>
        /// <returns>ListCompanyResponse</returns>
        public ListCompanyResponse GetCompanies(int? pageNumber = default(int?), int? pageSize = default(int?))
        {
            return GetCompaniesAsync(pageNumber, pageSize).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a list of company accounts Returns the list of company accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):  * Management API—Account read
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="pageNumber">The number of the page to fetch. (optional)</param>
        /// <param name="pageSize">The number of items to have on a page, maximum 100. The default is 10 items on a page. (optional)</param>
        /// <returns>Task of ListCompanyResponse</returns>
        public async Task<ListCompanyResponse> GetCompaniesAsync(int? pageNumber = default(int?), int? pageSize = default(int?))
        {
            var endpoint = "/companies";
            // Build the query string
            var queryParams = new Dictionary<string, string>();
            if (pageNumber != null) queryParams.Add("pageNumber", pageNumber.ToString());
            if (pageSize != null) queryParams.Add("pageSize", pageSize.ToString());
            var queryString = string.Join("&", queryParams.Select(kvp => $"{kvp.Key}={kvp.Value}"));
            if (!string.IsNullOrEmpty(queryString)) endpoint += "?" + queryString;

            string jsonRequest = null;
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<ListCompanyResponse>(jsonResult);
        }

        /// <summary>
        /// Get a company account Returns the company account specified in the path. Your API credential must have access to the company account.   To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Account read
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <returns>Company</returns>
        public Company GetCompaniesCompanyId(string companyId)
        {
            return GetCompaniesCompanyIdAsync(companyId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a company account Returns the company account specified in the path. Your API credential must have access to the company account.   To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Account read
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <returns>Task of Company</returns>
        public async Task<Company> GetCompaniesCompanyIdAsync(string companyId)
        {
            var endpoint = $"/companies/{companyId}";
            string jsonRequest = null;
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<Company>(jsonResult);
        }

        /// <summary>
        /// Get a list of merchant accounts Returns the list of merchant accounts under the company account specified in the path. The list only includes merchant accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters.   To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Account read
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="pageNumber">The number of the page to fetch. (optional)</param>
        /// <param name="pageSize">The number of items to have on a page, maximum 100. The default is 10 items on a page. (optional)</param>
        /// <returns>ListMerchantResponse</returns>
        public ListMerchantResponse GetCompaniesCompanyIdMerchants(string companyId, int? pageNumber = default(int?), int? pageSize = default(int?))
        {
            return GetCompaniesCompanyIdMerchantsAsync(companyId, pageNumber, pageSize).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a list of merchant accounts Returns the list of merchant accounts under the company account specified in the path. The list only includes merchant accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters.   To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Account read
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">The unique identifier of the company account.</param>
        /// <param name="pageNumber">The number of the page to fetch. (optional)</param>
        /// <param name="pageSize">The number of items to have on a page, maximum 100. The default is 10 items on a page. (optional)</param>
        /// <returns>Task of ListMerchantResponse</returns>
        public async Task<ListMerchantResponse> GetCompaniesCompanyIdMerchantsAsync(string companyId, int? pageNumber = default(int?), int? pageSize = default(int?))
        {
            var endpoint = $"/companies/{companyId}/merchants";
            // Build the query string
            var queryParams = new Dictionary<string, string>();
            if (pageNumber != null) queryParams.Add("pageNumber", pageNumber.ToString());
            if (pageSize != null) queryParams.Add("pageSize", pageSize.ToString());
            var queryString = string.Join("&", queryParams.Select(kvp => $"{kvp.Key}={kvp.Value}"));
            if (!string.IsNullOrEmpty(queryString)) endpoint += "?" + queryString;

            string jsonRequest = null;
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(jsonRequest, null, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<ListMerchantResponse>(jsonResult);
        }

    }
}

/*
* Management API
*
*
* The version of the OpenAPI document: 1
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.Management;
using Newtonsoft.Json;

namespace Adyen.Service.Management
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class MyAPICredentialApi : AbstractService
    {
        public MyAPICredentialApi(Client client) : base(client) {}
    
        /// <summary>
        /// Remove allowed origin
        /// </summary>
        /// <param name="originId">Unique identifier of the allowed origin.</param>
        /// <param name="requestOptions">Additional request options.</param>
        public void DeleteMeAllowedOriginsOriginId(string originId, RequestOptions requestOptions = default)
        {
            DeleteMeAllowedOriginsOriginIdAsync(originId, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Remove allowed origin
        /// </summary>
        /// <param name="originId">Unique identifier of the allowed origin.</param>
        /// <param name="requestOptions">Additional request options.</param>
        public async Task DeleteMeAllowedOriginsOriginIdAsync(string originId, RequestOptions requestOptions = default)
        {
            var endpoint = $"/me/allowedOrigins/{originId}";
            var resource = new ManagementResource(this, endpoint);
            await resource.RequestAsync(null, requestOptions, new HttpMethod("DELETE"));
        }

        /// <summary>
        /// Get API credential details
        /// </summary>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>MeApiCredential</returns>
        public MeApiCredential GetMe(RequestOptions requestOptions = default)
        {
            return GetMeAsync(requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get API credential details
        /// </summary>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of MeApiCredential</returns>
        public async Task<MeApiCredential> GetMeAsync(RequestOptions requestOptions = default)
        {
            var endpoint = "/me";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, requestOptions, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<MeApiCredential>(jsonResult);
        }

        /// <summary>
        /// Get allowed origins
        /// </summary>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>AllowedOriginsResponse</returns>
        public AllowedOriginsResponse GetMeAllowedOrigins(RequestOptions requestOptions = default)
        {
            return GetMeAllowedOriginsAsync(requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get allowed origins
        /// </summary>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of AllowedOriginsResponse</returns>
        public async Task<AllowedOriginsResponse> GetMeAllowedOriginsAsync(RequestOptions requestOptions = default)
        {
            var endpoint = "/me/allowedOrigins";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, requestOptions, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<AllowedOriginsResponse>(jsonResult);
        }

        /// <summary>
        /// Get allowed origin details
        /// </summary>
        /// <param name="originId">Unique identifier of the allowed origin.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>AllowedOrigin</returns>
        public AllowedOrigin GetMeAllowedOriginsOriginId(string originId, RequestOptions requestOptions = default)
        {
            return GetMeAllowedOriginsOriginIdAsync(originId, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get allowed origin details
        /// </summary>
        /// <param name="originId">Unique identifier of the allowed origin.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of AllowedOrigin</returns>
        public async Task<AllowedOrigin> GetMeAllowedOriginsOriginIdAsync(string originId, RequestOptions requestOptions = default)
        {
            var endpoint = $"/me/allowedOrigins/{originId}";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(null, requestOptions, new HttpMethod("GET"));
            return JsonConvert.DeserializeObject<AllowedOrigin>(jsonResult);
        }

        /// <summary>
        /// Add allowed origin
        /// </summary>
        /// <param name="createAllowedOriginRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>AllowedOriginsResponse</returns>
        public AllowedOriginsResponse PostMeAllowedOrigins(CreateAllowedOriginRequest createAllowedOriginRequest, RequestOptions requestOptions = default)
        {
            return PostMeAllowedOriginsAsync(createAllowedOriginRequest, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Add allowed origin
        /// </summary>
        /// <param name="createAllowedOriginRequest"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of AllowedOriginsResponse</returns>
        public async Task<AllowedOriginsResponse> PostMeAllowedOriginsAsync(CreateAllowedOriginRequest createAllowedOriginRequest, RequestOptions requestOptions = default)
        {
            var endpoint = "/me/allowedOrigins";
            var resource = new ManagementResource(this, endpoint);
            var jsonResult = await resource.RequestAsync(createAllowedOriginRequest.ToJson(), requestOptions, new HttpMethod("POST"));
            return JsonConvert.DeserializeObject<AllowedOriginsResponse>(jsonResult);
        }

    }
}

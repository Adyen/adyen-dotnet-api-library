/*
* Management API
*
*
* The version of the OpenAPI document: 1
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Adyen.Service.Resource;
using Adyen.Model.Management;

namespace Adyen.Service.Management
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class TerminalSettingsMerchantLevelApi : AbstractService
    {
        public TerminalSettingsMerchantLevelApi(Client client) : base(client) {}
    
        /// <summary>
        /// Get the terminal logo Returns the logo that is configured for a specific payment terminal model at the merchant account identified in the path. You must specify the terminal model as a query parameter.  The logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file.  This logo applies to all terminals of the specified model under the merchant account, unless a different logo is configured at a lower level (store or individual terminal).  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read * Management API—Terminal settings read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <param name="model">The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T. (optional)</param>
        /// <returns>Logo</returns>
        public Logo GetMerchantsMerchantIdTerminalLogos(string merchantId, string model = default(string))
        {
            return GetMerchantsMerchantIdTerminalLogosAsync(merchantId, model).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get the terminal logo Returns the logo that is configured for a specific payment terminal model at the merchant account identified in the path. You must specify the terminal model as a query parameter.  The logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file.  This logo applies to all terminals of the specified model under the merchant account, unless a different logo is configured at a lower level (store or individual terminal).  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read * Management API—Terminal settings read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <param name="model">The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T. (optional)</param>
        /// <returns>Task of Logo</returns>
        public async Task<Logo> GetMerchantsMerchantIdTerminalLogosAsync(string merchantId, string model = default(string))
        {
            var httpMethod = new HttpMethod("GET");
            string jsonRequest = null;
            var resource = new ManagementResource(this, $"/merchants/{merchantId}/terminalLogos");
            var jsonResult = await resource.RequestAsync(jsonRequest, null, httpMethod);
            return JsonConvert.DeserializeObject<Logo>(jsonResult);
        }

        /// <summary>
        /// Get terminal settings Returns the payment terminal settings that are configured for the merchant account identified in the path. These settings apply to all terminals under the merchant account unless different values are configured at a lower level (store or individual terminal).  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read * Management API—Terminal settings read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <returns>TerminalSettings</returns>
        public TerminalSettings GetMerchantsMerchantIdTerminalSettings(string merchantId)
        {
            return GetMerchantsMerchantIdTerminalSettingsAsync(merchantId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get terminal settings Returns the payment terminal settings that are configured for the merchant account identified in the path. These settings apply to all terminals under the merchant account unless different values are configured at a lower level (store or individual terminal).  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read * Management API—Terminal settings read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <returns>Task of TerminalSettings</returns>
        public async Task<TerminalSettings> GetMerchantsMerchantIdTerminalSettingsAsync(string merchantId)
        {
            var httpMethod = new HttpMethod("GET");
            string jsonRequest = null;
            var resource = new ManagementResource(this, $"/merchants/{merchantId}/terminalSettings");
            var jsonResult = await resource.RequestAsync(jsonRequest, null, httpMethod);
            return JsonConvert.DeserializeObject<TerminalSettings>(jsonResult);
        }

        /// <summary>
        /// Update the terminal logo Updates the logo for a specific payment terminal model at the merchant account identified in the path. You must specify the terminal model as a query parameter. You can update the logo for only one terminal model at a time.  This logo applies to all terminals of the specified model under the merchant account, unless a different logo is configured at a lower level (store or individual terminal).  * To change the logo, specify the image file as a Base64-encoded string. * To restore the logo inherited from the company account, specify an empty logo value.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <param name="model">The terminal model. Allowed values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T. (optional)</param>
        /// <param name="logo"> (optional)</param>
        /// <returns>Logo</returns>
        public Logo PatchMerchantsMerchantIdTerminalLogos(string merchantId, Logo logo, string model = default(string))
        {
            return PatchMerchantsMerchantIdTerminalLogosAsync(merchantId, logo, model).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Update the terminal logo Updates the logo for a specific payment terminal model at the merchant account identified in the path. You must specify the terminal model as a query parameter. You can update the logo for only one terminal model at a time.  This logo applies to all terminals of the specified model under the merchant account, unless a different logo is configured at a lower level (store or individual terminal).  * To change the logo, specify the image file as a Base64-encoded string. * To restore the logo inherited from the company account, specify an empty logo value.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <param name="model">The terminal model. Allowed values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T. (optional)</param>
        /// <param name="logo"> (optional)</param>
        /// <returns>Task of Logo</returns>
        public async Task<Logo> PatchMerchantsMerchantIdTerminalLogosAsync(string merchantId, Logo logo, string model = default(string))
        {
            var httpMethod = new HttpMethod("PATCH");
            string jsonRequest = logo.ToJson();
            var resource = new ManagementResource(this, $"/merchants/{merchantId}/terminalLogos");
            var jsonResult = await resource.RequestAsync(jsonRequest, null, httpMethod);
            return JsonConvert.DeserializeObject<Logo>(jsonResult);
        }

        /// <summary>
        /// Update terminal settings Updates payment terminal settings for the merchant account identified in the path. These settings apply to all terminals under the merchant account, unless different values are configured at a lower level (store or individual terminal).  * To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object. * To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter. * Objects that are not included in the request are not updated.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <param name="terminalSettings"> (optional)</param>
        /// <returns>TerminalSettings</returns>
        public TerminalSettings PatchMerchantsMerchantIdTerminalSettings(string merchantId, TerminalSettings terminalSettings)
        {
            return PatchMerchantsMerchantIdTerminalSettingsAsync(merchantId, terminalSettings).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Update terminal settings Updates payment terminal settings for the merchant account identified in the path. These settings apply to all terminals under the merchant account, unless different values are configured at a lower level (store or individual terminal).  * To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object. * To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter. * Objects that are not included in the request are not updated.  To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Terminal settings read and write
        /// </summary>
        /// <exception cref="Adyen.Service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="merchantId">The unique identifier of the merchant account.</param>
        /// <param name="terminalSettings"> (optional)</param>
        /// <returns>Task of TerminalSettings</returns>
        public async Task<TerminalSettings> PatchMerchantsMerchantIdTerminalSettingsAsync(string merchantId, TerminalSettings terminalSettings)
        {
            var httpMethod = new HttpMethod("PATCH");
            string jsonRequest = terminalSettings.ToJson();
            var resource = new ManagementResource(this, $"/merchants/{merchantId}/terminalSettings");
            var jsonResult = await resource.RequestAsync(jsonRequest, null, httpMethod);
            return JsonConvert.DeserializeObject<TerminalSettings>(jsonResult);
        }

    }
}

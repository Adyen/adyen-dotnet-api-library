/*
* Adyen Checkout API
*
*
* The version of the OpenAPI document: 70
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using Adyen.Constants;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.Checkout;

namespace Adyen.Service.Checkout
{
    /// <summary>
    /// UtilityService Interface
    /// </summary>
    public interface IUtilityService
    {
        /// <summary>
        /// Get an Apple Pay session
        /// </summary>
        /// <param name="idempotencyKey"><see cref="string"/> - A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).</param>
        /// <param name="createApplePaySessionRequest"><see cref="CreateApplePaySessionRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <returns><see cref="ApplePaySessionResponse"/>.</returns>
        ApplePaySessionResponse GetApplePaySession(CreateApplePaySessionRequest createApplePaySessionRequest, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Get an Apple Pay session
        /// </summary>
        /// <param name="idempotencyKey"><see cref="string"/> - A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).</param>
        /// <param name="createApplePaySessionRequest"><see cref="CreateApplePaySessionRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        /// <returns>Task of <see cref="ApplePaySessionResponse"/>.</returns>
        Task<ApplePaySessionResponse> GetApplePaySessionAsync(CreateApplePaySessionRequest createApplePaySessionRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
        /// <summary>
        /// Create originKey values for domains
        /// </summary>
        /// <param name="idempotencyKey"><see cref="string"/> - A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).</param>
        /// <param name="checkoutUtilityRequest"><see cref="CheckoutUtilityRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <returns><see cref="CheckoutUtilityResponse"/>.</returns>
        [Obsolete]
        CheckoutUtilityResponse OriginKeys(CheckoutUtilityRequest checkoutUtilityRequest, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Create originKey values for domains
        /// </summary>
        /// <param name="idempotencyKey"><see cref="string"/> - A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).</param>
        /// <param name="checkoutUtilityRequest"><see cref="CheckoutUtilityRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        /// <returns>Task of <see cref="CheckoutUtilityResponse"/>.</returns>
        [Obsolete]
        Task<CheckoutUtilityResponse> OriginKeysAsync(CheckoutUtilityRequest checkoutUtilityRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
    }
    
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class UtilityService : AbstractService, IUtilityService
    {
        private readonly string _baseUrl;
        
        public UtilityService(Client client) : base(client)
        {
            _baseUrl = client.Config.CheckoutEndpoint + "/" + ClientConfig.CheckoutApiVersion;
        }
        
        public ApplePaySessionResponse GetApplePaySession(CreateApplePaySessionRequest createApplePaySessionRequest, RequestOptions requestOptions = default)
        {
            return GetApplePaySessionAsync(createApplePaySessionRequest, requestOptions).GetAwaiter().GetResult();
        }

        public async Task<ApplePaySessionResponse> GetApplePaySessionAsync(CreateApplePaySessionRequest createApplePaySessionRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + "/applePay/sessions";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<ApplePaySessionResponse>(createApplePaySessionRequest.ToJson(), requestOptions, new HttpMethod("POST"), cancellationToken);
        }
        
        [Obsolete]
        public CheckoutUtilityResponse OriginKeys(CheckoutUtilityRequest checkoutUtilityRequest, RequestOptions requestOptions = default)
        {
            return OriginKeysAsync(checkoutUtilityRequest, requestOptions).GetAwaiter().GetResult();
        }

        [Obsolete]
        public async Task<CheckoutUtilityResponse> OriginKeysAsync(CheckoutUtilityRequest checkoutUtilityRequest, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + "/originKeys";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<CheckoutUtilityResponse>(checkoutUtilityRequest.ToJson(), requestOptions, new HttpMethod("POST"), cancellationToken);
        }
    }
}
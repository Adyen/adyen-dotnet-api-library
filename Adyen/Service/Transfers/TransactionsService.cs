/*
* Transfers API
*
*
* The version of the OpenAPI document: 3
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Adyen.Constants;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.Transfers;
using Newtonsoft.Json;

namespace Adyen.Service.Transfers
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class TransactionsService : AbstractService
    {
        private readonly string _baseUrl;
        
        public TransactionsService(Client client) : base(client)
        {
            _baseUrl = client.Config.TransfersEndpoint + "/" + ClientConfig.TransfersVersion;
        }
    
        /// <summary>
        /// Get all transactions
        /// </summary>
        /// <param name="createdSince">Only include transactions that have been created on or after this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**.</param>
        /// <param name="createdUntil">Only include transactions that have been created on or before this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**.</param>
        /// <param name="balancePlatform">Unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id).</param>
        /// <param name="paymentInstrumentId">Unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/paymentInstruments/_id_).</param>
        /// <param name="accountHolderId">Unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/accountHolders/{id}__queryParam_id).</param>
        /// <param name="balanceAccountId">Unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id).</param>
        /// <param name="cursor">The &#x60;cursor&#x60; returned in the links of the previous response.</param>
        /// <param name="limit">The number of items returned per page, maximum of 100 items. By default, the response returns 10 items per page.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>TransactionSearchResponse</returns>
        public TransactionSearchResponse GetAllTransactions(DateTime createdSince, DateTime createdUntil, string balancePlatform = default, string paymentInstrumentId = default, string accountHolderId = default, string balanceAccountId = default, string cursor = default, int? limit = default, RequestOptions requestOptions = default)
        {
            return GetAllTransactionsAsync(createdSince, createdUntil, balancePlatform, paymentInstrumentId, accountHolderId, balanceAccountId, cursor, limit, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get all transactions
        /// </summary>
        /// <param name="createdSince">Only include transactions that have been created on or after this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**.</param>
        /// <param name="createdUntil">Only include transactions that have been created on or before this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**.</param>
        /// <param name="balancePlatform">Unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id).</param>
        /// <param name="paymentInstrumentId">Unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/paymentInstruments/_id_).</param>
        /// <param name="accountHolderId">Unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/accountHolders/{id}__queryParam_id).</param>
        /// <param name="balanceAccountId">Unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id).</param>
        /// <param name="cursor">The &#x60;cursor&#x60; returned in the links of the previous response.</param>
        /// <param name="limit">The number of items returned per page, maximum of 100 items. By default, the response returns 10 items per page.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of TransactionSearchResponse</returns>
        public async Task<TransactionSearchResponse> GetAllTransactionsAsync(DateTime createdSince, DateTime createdUntil, string balancePlatform = default, string paymentInstrumentId = default, string accountHolderId = default, string balanceAccountId = default, string cursor = default, int? limit = default, RequestOptions requestOptions = default)
        {
            // Build the query string
            var queryParams = new Dictionary<string, string>();
            if (balancePlatform != null) queryParams.Add("balancePlatform", balancePlatform);
            if (paymentInstrumentId != null) queryParams.Add("paymentInstrumentId", paymentInstrumentId);
            if (accountHolderId != null) queryParams.Add("accountHolderId", accountHolderId);
            if (balanceAccountId != null) queryParams.Add("balanceAccountId", balanceAccountId);
            if (cursor != null) queryParams.Add("cursor", cursor);
            queryParams.Add("createdSince", createdSince.ToString());
            queryParams.Add("createdUntil", createdUntil.ToString());
            if (limit != null) queryParams.Add("limit", limit.ToString());
            var endpoint = _baseUrl + "/transactions" + ToQueryString(queryParams);
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<TransactionSearchResponse>(null, requestOptions, new HttpMethod("GET"));
        }

        /// <summary>
        /// Get a transaction
        /// </summary>
        /// <param name="id">Unique identifier of the transaction.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Transaction</returns>
        public Transaction GetTransaction(string id, RequestOptions requestOptions = default)
        {
            return GetTransactionAsync(id, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a transaction
        /// </summary>
        /// <param name="id">Unique identifier of the transaction.</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of Transaction</returns>
        public async Task<Transaction> GetTransactionAsync(string id, RequestOptions requestOptions = default)
        {
            var endpoint = _baseUrl + $"/transactions/{id}";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<Transaction>(null, requestOptions, new HttpMethod("GET"));
        }

    }
}

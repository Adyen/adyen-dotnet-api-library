/*
* Legal Entity Management API
*
*
* The version of the OpenAPI document: 2
* Contact: developer-experience@adyen.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Adyen.Constants;
using Adyen.Model;
using Adyen.Service.Resource;
using Adyen.Model.LegalEntityManagement;
using Newtonsoft.Json;

namespace Adyen.Service.LegalEntityManagement
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public class HostedOnboardingService : AbstractService
    {
        private readonly string _baseUrl;
        
        public HostedOnboardingService(Client client) : base(client)
        {
            _baseUrl = client.Config.LegalEntityManagementEndpoint + "/" + ClientConfig.LegalEntityManagementVersion;
        }
    
        /// <summary>
        /// Get a list of hosted onboarding page themes
        /// </summary>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>OnboardingThemes</returns>
        public OnboardingThemes ListHostedOnboardingPageThemes(RequestOptions requestOptions = default)
        {
            return ListHostedOnboardingPageThemesAsync(requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a list of hosted onboarding page themes
        /// </summary>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of OnboardingThemes</returns>
        public async Task<OnboardingThemes> ListHostedOnboardingPageThemesAsync(RequestOptions requestOptions = default)
        {
            var endpoint = _baseUrl + "/themes";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<OnboardingThemes>(null, requestOptions, new HttpMethod("GET"));
        }

        /// <summary>
        /// Get an onboarding link theme
        /// </summary>
        /// <param name="id">The unique identifier of the theme</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>OnboardingTheme</returns>
        public OnboardingTheme GetOnboardingLinkTheme(string id, RequestOptions requestOptions = default)
        {
            return GetOnboardingLinkThemeAsync(id, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get an onboarding link theme
        /// </summary>
        /// <param name="id">The unique identifier of the theme</param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of OnboardingTheme</returns>
        public async Task<OnboardingTheme> GetOnboardingLinkThemeAsync(string id, RequestOptions requestOptions = default)
        {
            var endpoint = _baseUrl + $"/themes/{id}";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<OnboardingTheme>(null, requestOptions, new HttpMethod("GET"));
        }

        /// <summary>
        /// Get a link to an Adyen-hosted onboarding page
        /// </summary>
        /// <param name="id">The unique identifier of the legal entity</param>
        /// <param name="onboardingLinkInfo"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>OnboardingLink</returns>
        public OnboardingLink GetLinkToAdyenhostedOnboardingPage(string id, OnboardingLinkInfo onboardingLinkInfo, RequestOptions requestOptions = default)
        {
            return GetLinkToAdyenhostedOnboardingPageAsync(id, onboardingLinkInfo, requestOptions).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get a link to an Adyen-hosted onboarding page
        /// </summary>
        /// <param name="id">The unique identifier of the legal entity</param>
        /// <param name="onboardingLinkInfo"></param>
        /// <param name="requestOptions">Additional request options.</param>
        /// <returns>Task of OnboardingLink</returns>
        public async Task<OnboardingLink> GetLinkToAdyenhostedOnboardingPageAsync(string id, OnboardingLinkInfo onboardingLinkInfo, RequestOptions requestOptions = default)
        {
            var endpoint = _baseUrl + $"/legalEntities/{id}/onboardingLinks";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<OnboardingLink>(onboardingLinkInfo.ToJson(), requestOptions, new HttpMethod("POST"));
        }

    }
}

/*
* Legal Entity Management API
*
*
* The version of the OpenAPI document: 4
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using Adyen.Model;
using Adyen.Model.LegalEntityManagement;

namespace Adyen.Service.LegalEntityManagement
{
    /// <summary>
    /// TaxEDeliveryConsentService Interface
    /// </summary>
    public interface ITaxEDeliveryConsentService
    {
        /// <summary>
        /// Check the status of consent for electronic delivery of tax forms
        /// </summary>
        /// <param name="id"><see cref="string"/> - The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner. For organizations, this is the ID of the organization.</param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <returns><see cref="CheckTaxElectronicDeliveryConsentResponse"/>.</returns>
        Model.LegalEntityManagement.CheckTaxElectronicDeliveryConsentResponse CheckStatusOfConsentForElectronicDeliveryOfTaxForms(string id, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Check the status of consent for electronic delivery of tax forms
        /// </summary>
        /// <param name="id"><see cref="string"/> - The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner. For organizations, this is the ID of the organization.</param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        /// <returns>Task of <see cref="CheckTaxElectronicDeliveryConsentResponse"/>.</returns>
        Task<Model.LegalEntityManagement.CheckTaxElectronicDeliveryConsentResponse> CheckStatusOfConsentForElectronicDeliveryOfTaxFormsAsync(string id, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
        /// <summary>
        /// Set the consent status for electronic delivery of tax forms
        /// </summary>
        /// <param name="id"><see cref="string"/> - The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner. For organizations, this is the ID of the organization.</param>
        /// <param name="setTaxElectronicDeliveryConsentRequest"><see cref="SetTaxElectronicDeliveryConsentRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        void SetConsentStatusForElectronicDeliveryOfTaxForms(string id, SetTaxElectronicDeliveryConsentRequest setTaxElectronicDeliveryConsentRequest = default, RequestOptions requestOptions = default);
        
        /// <summary>
        /// Set the consent status for electronic delivery of tax forms
        /// </summary>
        /// <param name="id"><see cref="string"/> - The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner. For organizations, this is the ID of the organization.</param>
        /// <param name="setTaxElectronicDeliveryConsentRequest"><see cref="SetTaxElectronicDeliveryConsentRequest"/> - </param>
        /// <param name="requestOptions"><see cref="RequestOptions"/> - Additional request options.</param>
        /// <param name="cancellationToken"> A CancellationToken enables cooperative cancellation between threads, thread pool work items, or Task objects.</param>
        Task SetConsentStatusForElectronicDeliveryOfTaxFormsAsync(string id, SetTaxElectronicDeliveryConsentRequest setTaxElectronicDeliveryConsentRequest = default, RequestOptions requestOptions = default, CancellationToken cancellationToken = default);
        
    }
    
    /// <summary>
    /// Represents a collection of functions to interact with the TaxEDeliveryConsentService API endpoints
    /// </summary>
    public class TaxEDeliveryConsentService : AbstractService, ITaxEDeliveryConsentService
    {
        private readonly string _baseUrl;
        
        public TaxEDeliveryConsentService(Client client) : base(client)
        {
            _baseUrl = CreateBaseUrl("https://kyc-test.adyen.com/lem/v4");
        }
        
        public Model.LegalEntityManagement.CheckTaxElectronicDeliveryConsentResponse CheckStatusOfConsentForElectronicDeliveryOfTaxForms(string id, RequestOptions requestOptions = default)
        {
            return CheckStatusOfConsentForElectronicDeliveryOfTaxFormsAsync(id, requestOptions).ConfigureAwait(false).GetAwaiter().GetResult();
        }

        public async Task<Model.LegalEntityManagement.CheckTaxElectronicDeliveryConsentResponse> CheckStatusOfConsentForElectronicDeliveryOfTaxFormsAsync(string id, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + $"/legalEntities/{id}/checkTaxElectronicDeliveryConsent";
            var resource = new ServiceResource(this, endpoint);
            return await resource.RequestAsync<Model.LegalEntityManagement.CheckTaxElectronicDeliveryConsentResponse>(null, requestOptions, new HttpMethod("POST"), cancellationToken).ConfigureAwait(false);
        }
        
        public void SetConsentStatusForElectronicDeliveryOfTaxForms(string id, SetTaxElectronicDeliveryConsentRequest setTaxElectronicDeliveryConsentRequest = default, RequestOptions requestOptions = default)
        {
            SetConsentStatusForElectronicDeliveryOfTaxFormsAsync(id, setTaxElectronicDeliveryConsentRequest, requestOptions).ConfigureAwait(false).GetAwaiter().GetResult();
        }

        public async Task SetConsentStatusForElectronicDeliveryOfTaxFormsAsync(string id, SetTaxElectronicDeliveryConsentRequest setTaxElectronicDeliveryConsentRequest = default, RequestOptions requestOptions = default, CancellationToken cancellationToken = default)
        {
            var endpoint = _baseUrl + $"/legalEntities/{id}/setTaxElectronicDeliveryConsent";
            var resource = new ServiceResource(this, endpoint);
            await resource.RequestAsync(setTaxElectronicDeliveryConsentRequest.ToJson(), requestOptions, new HttpMethod("POST"), cancellationToken).ConfigureAwait(false);
        }
    }
}